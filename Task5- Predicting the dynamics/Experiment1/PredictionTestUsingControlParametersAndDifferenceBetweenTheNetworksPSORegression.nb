(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    607609,      10980]
NotebookOptionsPosition[    603578,      10913]
NotebookOutlinePosition[    604401,      10941]
CellTagsIndexPosition[    604358,      10938]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"strm", "=", 
   RowBox[{"OpenWrite", "[", "\"\<output.log\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$Output", "=", 
    RowBox[{"{", "strm", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
    RowBox[{"CellEvaluationFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"#", ",", "StandardForm", ",", 
         RowBox[{"Function", "[", 
          RowBox[{"Null", ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"aborted", "=", "$Aborted"}], "}"}], ",", 
             RowBox[{"Internal`WithLocalSettings", "[", 
              RowBox[{"Null", ",", 
               RowBox[{"aborted", "=", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"ReleaseHold", "[", 
                   RowBox[{"Most", "[", 
                    RowBox[{"Hold", "[", "##", "]"}], "]"}], "]"}], ";", 
                  RowBox[{"Last", "[", 
                   RowBox[{"Hold", "[", "##", "]"}], "]"}]}], ")"}]}], ",", 
               RowBox[{"AbortProtect", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"aborted", "===", "$Aborted"}], ",", 
                  RowBox[{
                   RowBox[{"Print", "[", "\"\<Did cleanup\>\"", "]"}], ";", 
                   RowBox[{"Abort", "[", "]"}]}]}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ",", "HoldAll"}], "]"}]}], "]"}], "&"}], ")"}]}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8873259550901084`*^9, 3.8873259550901084`*^9}, 
   3.887326471836172*^9, {3.8873265235098677`*^9, 3.8873265378144946`*^9}, {
   3.8873274713802376`*^9, 3.8873274728882527`*^9}, {3.8873275435583534`*^9, 
   3.887327545721701*^9}, 3.887640273360888*^9, {3.8877494185605373`*^9, 
   3.8877494196739035`*^9}, {3.887750111835868*^9, 3.8877501149841213`*^9}, 
   3.887751147031466*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"7f9bc51d-3896-41c0-bbff-81a1c8ce1a2a"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8861676738879185`*^9, 3.8861676771894827`*^9}, 
   3.887327541131894*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"a76fd73d-9312-416b-affa-82e3bd8b2272"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.889941651545994*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"8719dae9-94c6-4086-bd77-497d59598134"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Needs", "[", "\"\<IGraphM`\>\"", "]"}], "*)"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"g", "=", 
    RowBox[{"IGWeightedAdjacencyGraph", "[", "capturedFromPSO", "]"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"<<", "IGraphM``"}]}]], "Input",
 CellChangeTimes->{{3.886084327914612*^9, 3.886084328785612*^9}, {
   3.8877531960941334`*^9, 3.8877532192190175`*^9}, {3.8877533582509995`*^9, 
   3.887753367745368*^9}, {3.8877534329449625`*^9, 3.8877534467489023`*^9}, {
   3.887753584222661*^9, 3.8877535848836594`*^9}, 3.8877536608824253`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"ce419309-a135-490c-801e-db02eeef2b3f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"IGraph/M 0.6.5 (December 21, 2022)\"\>"},
    {"\<\"Evaluate \\!\\(\\*ButtonBox[\\\"IGDocumentation[]\\\",BaseStyle->\\\
\"Link\\\",ButtonData->\\\"paclet:IGraphM\\\"]\\) to get started.\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.88775345321084*^9, 3.887753509640112*^9, {3.8877535724003735`*^9, 
   3.8877535904937897`*^9}, 3.887753622473032*^9, 3.8877536754697943`*^9, 
   3.887753716243948*^9, 3.8877537597634783`*^9, 3.8877538298533993`*^9, 
   3.8877550135665355`*^9, 3.8877550631784143`*^9, 3.8877559624301043`*^9, 
   3.887756002256631*^9, 3.887756033878085*^9, 3.8877572129312267`*^9, 
   3.8877584428031435`*^9, 3.8877585490271645`*^9, 3.8877618931879673`*^9, 
   3.8896753612291203`*^9, 3.8896764419498577`*^9, 3.889676583077139*^9, 
   3.889676981156495*^9, 3.889678444132861*^9, 3.8896789233040557`*^9, 
   3.889678982310759*^9, 3.889680188721078*^9, 3.889683234828264*^9, 
   3.889941820763084*^9, 3.8899441133291454`*^9, 3.889944335702705*^9, 
   3.8899444147781653`*^9, 3.889944526456599*^9, 3.8899578406464567`*^9, 
   3.8899586873441224`*^9, 3.889960271158746*^9, 3.889963151488137*^9, 
   3.88996336973083*^9, 3.890013119821035*^9, 3.890013747538828*^9, 
   3.890014001507278*^9, 3.8900144582844305`*^9, 3.89001453825718*^9, 
   3.890014850782871*^9, 3.8900151688571067`*^9, 3.8900153175566425`*^9, 
   3.890017367991702*^9, 3.890017952106874*^9, 3.890018016537833*^9, {
   3.890018134630087*^9, 3.890018146633136*^9}, 3.890021306514358*^9, 
   3.890022103713457*^9, 3.8900238090723724`*^9, 3.8900240824591093`*^9, 
   3.8900257056787634`*^9, 3.8900257732481894`*^9, 3.8900263502907476`*^9, 
   3.890026422831437*^9, 3.890026553846468*^9, 3.8900266193322735`*^9, 
   3.8900268268523655`*^9, 3.8900934395112476`*^9, 3.890095976680993*^9, 
   3.891773388890003*^9, 3.8917744549891043`*^9, 3.8917786578075333`*^9, 
   3.891779052597288*^9, 3.8917791448021793`*^9, 3.891779434278674*^9, 
   3.8917795356803107`*^9, 3.891782032783004*^9, 3.8943138638676543`*^9, 
   3.894313975093769*^9, 3.8943140609804153`*^9, 3.894315719260312*^9, 
   3.8943157740998583`*^9, 3.8943158946515503`*^9, 3.894316060589443*^9, 
   3.8943161692605896`*^9, 3.8943169407857265`*^9, 3.89431710643839*^9, 
   3.8943171987980366`*^9, 3.8943182759781404`*^9, 3.894318317038863*^9, 
   3.8943194832473702`*^9, 3.8943282628107667`*^9, 3.8943285588710337`*^9, 
   3.894330766023657*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"ea69c236-c6aa-429e-9155-5b99c7abdcfe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Schwefel", "'"}], " ", "s", " ", "Function"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fun4Name", "=", "\"\<Schwefel' s Function\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fun4", "[", "x_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"l", "=", 
         RowBox[{"Length", "@", "x"}]}], "}"}], ",", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{"x", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", "l"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fun4", "@", 
      RowBox[{"{", "x", "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "420.969"}], ",", "420.969"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"fun4", "@", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", ",", 
       RowBox[{"-", "420.969"}], ",", "420.969"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x2", ",", 
       RowBox[{"-", "420.969"}], ",", "420.969"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8871487547431564`*^9, 3.887148858459154*^9}, {
  3.8900101931858697`*^9, 3.8900102199636445`*^9}, {3.890011577191215*^9, 
  3.8900115790192633`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"dcb6a1ce-a49c-4359-b6d5-b9c5512d30a7"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxknXWYVMfSxnGHAEETNNgCwTXAwsEdlsV9DZZFloUVbHEJwUIgOCRcPLiG
kCCDE5JgQQIJRHAnZLFg373T/XvPM/PtP/PMuzV1+tSpqq6uqu5TOGxgcK8U
yZIl6/JusmQp//t5YXbOo2NaD/fwGXPz7c1d5aY4ybNVO9l0eoLwH0sWGzVl
yEin9IxOF7L/MFh40OjN8+vs7O6sy5W0d2e2aOGekA65hxUb6STz8uktfHXr
umUvhI111nrpewjf+U2hJ++uH+ys9uKthO9b0e2r6vf/y8f7FxDoO87hzjZD
74AXLLW8eM3BCc5mw194rqkD72+6OMZJacYjfFq5kbGHFwxyNprxCy8b/dU3
/340xClj7lf4pAu3k04PnWT5JAh/s+JSm9s39V14MvvHd+SKPPnO5+XspbZM
qN1FcgYfm6H7hYpJ0R7kDL75wYOcdZ52kpzB45Ja55zyXaTkDJ6w5ebg9g+D
PMgZfP2btD0Cc3aTnH3H00xyBo/Zc+WnKf3ye5AzeJm/0mW/P7eX5Axe6Hz8
sE+rt/cgZ/A+jbZu6zwhh+QM/iL9i3nfpk+QnMG9w1uasAc5g+dY6ZW/9Ab5
oZ/QgSNPvvO5+OjPye/sHyc5g89b/O+K9vMHepAz+IiCy9672zHCg5zB2z/d
mvRpw+GSM/iCHA/GnE8X7UHOvtcd7EHO4PcnlD/YZ3SC5Ax+oMLt/JMTe3uQ
M/iY0R0SrnQcITmDX3FKVfhqZ7wHOYObcZQPRM7gWTJ45Y88hVv9l5yRE/aO
nMHRT34Pjjz5zueE49uGv9jQUfoM3iNsa+PI3K4+gy8/90GWRdWCJWfwMZd+
PPDsxy7SZ1/+jaXP4PnGHHMePwuQnMFzB/VrcPxxhPQZvMW/m3OcG9NBcgY3
1xsQiJzBHxj5S5/BY5p49V9yBi9k/I/kjDzwn7IHi2Pveq4WRz81PosjT77z
uWdg6tu3Sg+SnMHbzar+3q2iFeSfwbvd2dvvxqo+krMvn1DJGbzynXk/ng9t
K/8MvvBGaOTCvDGSs8bl/Wu3BzmDDzbyl98ATzT6LzmDbznn9T/yz+CzjP+X
nLlv5iPkDI7/RM7g2DtyBkc/uR448uQ7n9e/TfxhXpZo6TN466nvTvuoQiv5
DV/6HvIb4Dl/GdKn6bje0mc9T+9frUDkDL7EyF/6DP60tVf/5TfAjxn/IzmD
dzT+X/qs8Zj5140D7P0xvyNncOYj5AyO/0TO4LJ37MTi6CfjAEeefOdzxJ3r
GZ7e7S599sVbSp9lB94/Zw9yBrfylz6DBxn9l5x1v2O9/kf6DH7P+H/JGbzJ
Tu/8K30GL2ziH49v/BEQSLzkM4/+F2d+950PAgKZj3z9WkAg/tPXPgMCsXdf
PQsIRD995RUQiDzlN+xnh4/qlf3t2Nnv5DcsPtXQS5/B7xn+rt+w+FEzHskZ
PKsZv/QZfIm5X9dvWHzWu175SJ/95Ck5M17iT+QMTryEnMGZ35EzOPMRcgbH
fyJncOwdOfvKz9nDuMGRJ9998e6SM3hLYy+SM3hfY1+SM3grY4+SM/g8Y7+S
M3iWt157l5zB9xv/IDkzLuJ5xcEWJ/5EzuDES4pLLM78jpzBmY+Qs6/e1ZJf
AMfekTM4+sn9gCNPvvvSR0vO4JPNfCE5g18z84v8BngnMx9JzuBFzPwlvwG+
w8x3kjPXZ32EnMGJ55EzOPEncgYnXkLOvvbabg9yBmc+Qs7g+E/kDI69I2dw
9JP7BEeefPflM0hyBm9u4iXpM3isia8kZ/D1Jh6TPmu+NfGb5Mx1WG8iZ3DW
R8gZnHgeOfv6uQGKw8CJl5AzOPM7cgZnPkLO4PhP5AyOvSNncPST+wdHnnz3
5d9Rcgb/2qwXJGfw02Z9ITmDbzXrEckZfqzftV61OOtN5Ow7P5TX+gGceB45
gxN/Imdw4iXkDM78jpzBmY+QMzj+U/7O4r723ls4+olcwJEn332vO05yBu9g
1svyG+AtzPraz28kOORDfP2Gvc//rt99/UaCw3rT128kOKyPfP1GgkM87+s3
EhziT1+/keAQL/n6jQSH+d3XbyRoPvL1Gwnyn75+I0H27us3EqSfvn4jQfL0
9RuMp4uf30hw/jL5IsnZNx5JlswvX+eQD/HL16H/Hr98ncN60y9f57A+8svX
OcTzfvk6h/gTOYMTL/nl6zS/++XrNB/55evkP/3ydbJ3v3yd9NMvX+cvT8d3
nFM8/YOLN+8VPVSfEf3b7S6dMF55PfA7JUudeXxmkjP3ZOO2ZdfHCa/6qm7J
xOddHE+LqK7PbscIH7viZaZcmUKEw2/BwuCIiqMHOOe93/uKPk3ZxC9ufDNa
OPSfnH23V42PxjulvPcbJvq6t36+U3dFjHDoW4aPznWq+xDnbdb/yaGD6HeN
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
P/Bhvyc4fNjviV3D5/V7f/cocMddH4LXm/nobO0l3RWf6HxIu28LXH1edt8W
dgc98zU49MzX2CPXzZa8U4t5iyLlF8DzlA4oX+vzWspX6DwGu68BXOdk2n0N
fIdPlZyVmxxZFSf7gg99y+D8jr5l7As+wS+nhUbtDlIeAz70YWJH0MdXT9Pv
xCr3PCXoB07y5qs1b+o9OSYvLVz+w/bLYXfQXzT5cM2bXPdQXN21j5bEyR6h
H236ZITD/5DJt6t+RBxEvwd2Bz7d5PNlv8iJPhDsCHrqldgj9NQloQf/1NQj
ZF/w2W/qGsKhDzZ1ENWPoOccAHDot5o6i+ZB6NkHrfdAW/q9po6j+Qt69ieC
Q3/CrAc1H0FPPAkOPXEj+gw9+3HAoZ9r6lyqH6kf3tTFpM/QNzF1NOkt9PQD
g0M/1tTppLfQ05+Jfur8IVPvEz18zpi6od7zJb0ydUbpLfSNTL1S+gl+zNQr
NY/ofe4r30/8bP5E6SFxMf1F6C04fUTg2Ct9ROgn/HuEv+6yfnVf6bP62239
Glzn5tn6NfOF3i+f9sbPOxrXVf88fDi/BRw+nN/CPAKfhhU/9CzYPUL6rHMd
7XkU4NqXb8+jYB6Bz4pMO5P9vs+tn8KHffrgeh+i3afPPAKfVNe+m/7F4X6K
D6FnPzjzC/QxXd/bP+ORuy+X67JvFxw+7NslDoSec9HB4c+56NgX9KyPwHVe
ol0fMR/B59HrdkuL5Rio+BB69o0yT0F/8lXbbQtnuPvNdM603e8GDh/2u+F/
4VP2q0++CTnk7tuBD/tWwOHDvhWdg2n5rHf+yX8oYIjsGj704YPrfEjbh69+
a8vnyk/3zi3LOU52DZ+PTd+a5imdk2n604TDj35s7B3+j0u1K7/zZhf5B91v
WW8/nvwAfNYc8PbvqZ+JdeRV4weU9+N39Etgj1yf/gryeOrLsHVtcPgMNn2M
iuugp95NXZDxzDPxreqs8KGup/d7WT7UAalz6L7Melb5NNXhbV0DHP7UNcjb
wudXk19VvAcf8rSs86EfYeogyjtBz3ocnOuyHmf9AJ+Bpi6puA561gXEK9Cn
Nf0Aiju5LnEOOHyIZ7AjcOIZ5htw5h2dz2v5M++gl4ynsukjlZ9S/7ndzwUO
f/QWfQVHb8mHwN+eS6nnBH/6vcHh08qcS6l5kD5kzrf0swv1waK30Gcq+eHP
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
m4cc7Kn5ycurK1KN/n94DYujP/DfkOZa5qh5g+Q3wAuaeopw7mt16ymJj/K5
fqmezUu/tnlp8AF2f3HDX9t0LhHm+vko9kH74fNsvreEX77Xrjc9M8x6U/WU
7bZe9irt/9V15vE/V+n7b7GlTbZCGyLaE0Yq3oQQspU1ex9Lkq1QtlRSI1Mq
qYlEJtOIpuXTRt5pU81C22hX1EyiJClF8/3N+76e1+vxOf3qHw9Xx3mf1332
+9z3df248dTm5xvvoHi6fT1z17Q+pIW/9/t4P8q/3K52411NembrofAa8a5k
HP/2yCm1a86pP8LzgvK5C0974tQjOhinfM0PPjzugi4DjOPfXvf3Ro2GDx1s
nLi/7SvKv3Hk/dm7Gu2t3OKAjgP3Oz/bd/S7ZdrMn/7qrB6ej9S/99KCf8A4
74lNum+o/tw1Q4zzu5smlJm96p+XeD18R37vc995f+mk2u3OK+nvLcr/0LHe
FWcVdUz8k0X5YzsFTj+uVT5114Nm9jmk8UTjzwvvkeAbdT56PvF7Xy0/+bTw
q2T3Qb17Vp9w8dVdThxlvEW8M+ZnHPnGtOfOHul+53vnXnt7iy+n9XD/gpeJ
90fj/Luj2h719LMDWrlf4EEpXaVt2clVLvV8b67fnXLxxNO2dMreTfCHbzq+
zdH7De/ufqSeBeEfM8577mvtbljy4o99jVP/nbdcWXz3Mb1s//ry29+sdwfw
5brX9NxR5p0Br4wzvkx4D+HY/1TFk+6p+syOcoNHGq9DXnmCl4o453z7xG8/
T37+IeG3NL5K785F1TetbvdiF+Pvyt7lb1i6eMU7F9vuzfS9G2du2e/yK3p6
/cEOr8Y7snHsfMbNNX53/mFlbf87ac/txx0yZtsZxvl3hX1qeofV4CfKT778
iSHz9u/dyvannsbhT/Y84j29dOVbq55c50LjxNs+kSvMX8+vffLb3y5/fsk4
ok75ReXmtZhYfqDxJcIXC/e6rfqP1fjke/hzlnhB+TvfNe3tJ0dVL3t+Fv+j
ePXvh3YYvt/87PxcQfjPCX6y/PavJH770+Tf7hHvC8Y/k10vGXJP12NfHGI8
1ofOuZrV9r7U+W9FbjdxkXU3NtnbelVbzzvw8nH+dD+epd8tju8y/pLqb76i
6793ru1hHL/91fny0zZv7eT+Jb5yv/kX/e89aA04cbCTw84uT/0rayy57oYb
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
cdrTJPYvrwP82Vzxfvz9EcVpvKa8M8YD9a+/prCfepxwj/5PvMu4H7HzoXHO
9PjhPntcnCe9blP+2dD7tv2Vb5V7o27h/JD4FUfnNhd4gDt4feDeNz/e0YxT
vn2cZzy/KF8c73rGuVfuP6nwruf5RT2j4pyWK+n3G5V7TnZL4wyf3l4yzpDf
XRvvj7Yn99zDKhXOjbaP4zdCV9122Kk4vZ3TCvkpHs/E6c2fNvvEKwf28fgk
H+rOxXf2HTe3ge1D/eP/OOL2E+4b7vs4cYBfD7784J/G9fb33qPyP/4n4gnT
/L5qyu/ju7j/XhvvsG6n3p1zn0b+UXqfyj0W95rkfXBSblPca/xd3E97xTt1
Ek87KVcc9yzPO9o589BCfrRx6jk33seNcy8+Qjwb6feeou9N7ne5pXHvS+Ky
rs5dF3nc6f0u9/ni1tv29JyRT+53udPiXun5hX2eef/2rSuvnW4ce+74oeOa
+fdOSfPd8k9Fee/X+q78tijv8cb9sZ7iE0r6Myfmjw8dZ/ej4irzLSOu0jhx
AsdPa7k2/3kF9wu/32H6rTtX/tDP45D6N/6tdLczZ4/zfKR8v843ddhxzhDj
5Kk1OK/PM3UajfW45R79YbMVJy57ZoJxylffeOWYUnNHeF6Ddxr26EtHd83y
7/jd308+4LzrL+hnnHZ+efCSOnUHjHM/Xi78wCT/jvvv1ORe7P6p+P6CV+tm
8cbUf+DVF9X588BrcyX9z+PzE0JH3vsdfGW1kngJeBwHJfES3K8f/6JOhWb7
svgo6t+2+5fqtyzJ7gvU/+xH+1V6r/uk5N12TL5pha6Pjr5hovuXOIcrws9m
nPzBMidvOOS6Jacn+Vzj8o+N617pkm5Zeepv8Kelj26fMdrzkfrvD/+hceIu
eot3DpzfHb+tkAfq8UN+313iowMnjuLgyKf2vkw9O+d2+Pnedh2Mm9+v+94y
rSoO9TpA+dyDhfXWOHZeHOutceywqOFTuYHTxhjP9IjLffzjiuxdiXp2Kz6E
8YN9bgg/sHHac2HsCx6f/O5LOi+B87ut1k2tv+KDyUm+27j8oXdVmbHq5+w8
SflDf3pq1Ve9s3sQcTgz//7xOTevnmScuJ0B4Vc3TnzOK0U3lb/44qw8+aFl
1s8aMnp5FueJ32P9NbHOMP7hZ9qR5FHCy1e/dKPyKx/MeDbMt33EuxfX+e6M
XMl78ZX5MwY9XaXr+Vl8MuUbz6v08Iiag7w+UP4/l53/xtTvurgfrS9cudNF
3V8baPtTfqF4rcEp/6x4rUvei6/M79H5B5zyF4zvduKpX2Rx+/h5dvyy/Ol/
5wfYnnz3+Fh/jOM/eS7yso2Tf1rxidFdJxRf4PWL+3jtve2aF28eYdzrvdZ5
+gU9gjZJXBA8smclcUHgTSv2X1azuJvrpZ4brn357RUdh7m/KP/Pk5cuf/v+
tp7vxI1/EvwP7i/qWbbnv5Pmfz/UOPX0172s5Do/LD+wXoNzbtpVLonXGpJv
sGfWK7+/OZsX4O0XrPrnljezfC7il3ZV3PFi9U/Os53Je30v9p3EDzkgf4ni
arAP+Lwpuxv2HZ3dQ4lHHvD8pxeccdfwxN84IF++2zmXL3+/t3HKL3z7iNu7
n9DN6yHx8w8Ez0biJxyQX3vJK8e/d0sf49TTc+N9ba57u1viPxyQf2f3Q3dc
fnh2jqJ807uPWfBOzTG2G/EhnScU3q89zqnnljaPTHhj25nGqafGovqjqwxu
azsTR3T24PNH1150he1M3NHCp7d0Gvp1xk/yD97HdN7A/vARdUziYcDL/WvD
nwZ9l9kT/rZ32r7T8otRWbwX5Qe1mtZ/afuGHp/kHVwX/Cceh9RzWYs1/5p9
WDvj1DOjUbebd958psendSK+3Tvg1SqZX9E6s33Wtj6lXpHtjB+sYcRp2J6U
39z0+s6tGg5K3lna59sGn4btSd7uguLHB3bb1c/2bKy4i2sDz/KA4Gkb8lrp
3hWyuAj4FX9UXAp2pnzpoT9V/KZdFndE+fejnbb/h9qfyyi+zu/CqmdsqYJ/
zP1CPR0bF+zp8vDn3Rr297xg/ye+CJx4lasivsj9S95H2Q4F3h7PF9oz9/uC
H8/9a3251oVx4vK0Z1+MK/cv9ZDHSj9ih/p6n/X9XeW3hF/R44ff/ebhD1uu
+WxE8i7fNXdz5cUnnvB95h8gbmROxH25fvN5xrzw+CFe6OqYX/mSfrmWuXlt
Pvz7J+2z8XOM/FFnxvz1/kI8w9yYvx5X8IJ/mMTJkFd6x/2F9cE45RvEeuJ+
p7zWMY8Tyt8V657717oZwePkfjQvZayrxqnno66Fddj2tx7Kylfvmz7nUtuf
8k+euXBtvY0X2/74Re+JeEjb33q+sf4bp54HYr9wvxAXNPryAv+M+4V84SpH
Fd5J3S/kvd6u+1FJf8WQ3ClJPMyo38iHpXzL2B/zJf0SQ3Iv670AnHpWxX6d
3OuLcu2Dd8vzhXoanVI4Dxi3XmecH2xnyvc4tOra/tdl/hzK7zj2vSdnd8vO
29ZhifNJNs71O2Pj/GN70s5ZwRtme+Lfe//xwvnKOH6hav8tnN88/vn9Kbo/
Ymd4zVcnflF4PWsl+bmUPyvOjUmc2JW5M+OcaftTvnucY41T/qCiwrnX45zy
Z8Q52fanfJc4V3v8U/5c6aSAU76FdFL4fsrvPLxwbjdO+T5xzne/4FcsFzxO
7hfylNeHv8J2Plb+wMpx77Cd0VUYkMTzlMzfyjmeh/JnxP3I52/KV4z7lNcZ
yuveZ5zyc+Oe6PWHuJTTgk8vyYsfk9M92jj1LIl7t+1P+d9VXn3npz2zfqH8
z/He6vWE8heGH8A45VeH38D2p53fBh+g7Uk8SfvjT338xStnZHlb+nfcU8Ap
Xy78JB6H8FZ+pvMz9sHPds8HRzQ+cc9Vxik/ROcZcPKF/yEeXfZ76nn+lCeL
239+jXHqmaJ9DZx6moWfyuOf8rdpfQDnu74OP9iv4m0qJnnN1LNocozb5Hvz
z0U7c0n78/PCDkk+xVX5Ms0XXVPr8SyeDX+IdE5tf/AzI0/T9qeere/M2d1k
QBbvjb/ilWpLGx/WKtMBMb9l0wKPnO1vXt8RNRZVyF9ge4KX/+nervNu62+7
gT/4XrXll1W4xDjtPDLyTH8zj4bfxY9Rb1X5w15sPdK/C372ymVlSx+exdVz
r7xeugzmVxR+ymuFPFz3C/f0sXW775vxacbbBt6pXI0fJ1TsnfErqp51kefr
+QheRnkZrFe8g789+76G85b18Tp2nu5T8/81YceAYb8zPlJx9d9NWzd502Hd
PR+590kP198FviDykW037rn9it/aW319FgcI3mrOWW8O3Xu8v4t61ke+s/sF
nLwG5j/fddn7X617cGd2Ppyrd/lW/Q48edCxGe8Q96kHpFth/6fwIyP/2u1n
PHYeVvOdC9pmcebgz/94zPa/dr/U44p6lkY+uPsFnDh/6uc+ddzmF/Y+Xifj
xwOvrnsB38X5uf7KR+4t83kv9xfv5q3CDsZf0Tl84c7n/rr9ic7G5ytO+57c
ze+NOiB7d+M+Mka6G9gH/O+R/+7vBR8Y+fLuL3Di2+kv2r+n7pj2VR/J/IG0
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
ypPHxzrmfEzpoJ2fxFHAQ4tesuMxxEPL+u88RJ3P9Xfj6CNPTOIu4F/97P9b
PreadcxxyNKZIs4NHH2lWr8Rp/FUkj+IDi/nGXD4S9HFsV9O+jjMU3B4adiP
zMMnfRbmi3nQxX/F+AdH15LxDI7OI+MTHD1Bxhs4/Or0Lzh6dvSXf1d8TdjZ
75A6L6FTBY5eFXHy5kOSXhX9Yj+q+JHIC8afg46M+XGEwy+K3Rz/Jn1V7AaO
vid2A0fvEruBo7eI3cDhk8du9rPJj4HdrIshnTjsBo5OGfnj4Oh2EW8G/oV4
bhmHzmcUXxz3aPxR8MGS1wPeumjGPzs8MdZ2Bkc3h7we83INKeiC+Vxtfgnx
psJnCg7fKedh+9/EF8q51/Ew4uHk3Ou4C/FnEo/n+ITgNzPPIzg8kKyT4PAu
sr6Zx0O8iPASOr5FvIWsM+DwAdJf4PB3kYcCfstF3/QfeNQw9yN4kfiHyUNx
HEjoVbkfiROAv5d+BEffinMa+JMRD+N4FfA9EwvxMM67B0fniH4HR+eIe5Dj
ky8sxOfYL+p8/4jPMX+u4z3Eo8t5D3z7ikJckP1+4FMivshxMubNivgi37PA
4ZslfgZ8ecQv2b8BDr8r4832FE8L/kDw5hFP5Xgb8wRHPJX9fta9j3gtnzPB
p0W8lsctODylvIOD9484McfhgNeIODGPc7dHPKKcP83rckshPs37Ozj8n5w/
wedGnJvjecDPHV30QatGwz0vwOHDZPyDoyfIfR+81G1dlr2xdLLjacGnik+b
eQEOnzbjH/8hOm7ss47fkF4b49zxMNLnYh8BR5+LfQQcXWz2EXD0ndlH7O/V
Owj7iPNMpc/LPgKODgj7iP3A0nVlH3F8jvQ9rYspHJ1K7A8O7x/rlf3/4v1j
/7XfWLx/9Av47eItZ99x/rV4y9HDM0+t8pRHJjh8etgfHF0z+st+AOmXUd66
ZOLHo7+sw6n8ZXDHn4jnk36kPLrb4JSHz/OkxO+KbjU45eHtpN8pj/4yOOXh
4Xwm8X+SpwzuuB3ptjBOKI/OLzjl4dtk/KR5x+CUhyczzTtGzxTc/h/xXqIP
Snl0QlP/Pzqh85Py8EkyPqkfPsnUfwgfPuOT8ouuDT58yrse8eARv2HeO+nN
wesCjt4ccRrg6Knx/gWObho8MODophGPYb+Q9L+IrwBHr4p4DHD0quB7AUd3
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
H2WJ5X4=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxMnQW4VcX3/ve9J/be5+yT1xZBDBRU7EJRQUUMMABRbOzuxARBQhDBFhU7
URTsRGxRbMVWDMTuwPi/n/vO9/n9n4fDrDt7zezZPbPWu97VeejRuxzVGkXR
+4tHUU7lqZUo+kEV35aj6KJGFH2Vj6Kn61E0qRhFPaTQU9taC1F0geRvpL+x
yo30+05yTvUTg/ym2nyrcstaFE1WP2eo34FtUfSf+hstnQXaNkzlEvqtqj4f
bUbR8CSKBqscH/r+Wr9IfZ6vvxdK/Fdtx4S2lVIUlfVbTG0TletpfE3JA7Sf
VSTvonIXlTvp11D9jdI5Q/K3kndU2V+/uuRt1P9s9blOSxR9kEXRWMmdVF6i
MS/U/p7RcVyvtidKf6H050iuS+dP6Q/VeIep/hvV7y35FMlfSz5E8pmSv5N8
gs7jPtI9UOVfane05F31O05/76XyAJVvSv8N/Ybq70XSWaR2gyVfr7HVNYaz
JWcqz0Bfv1+kc7jKXfSbLJ3f9feRklPpnKZyP/3e1zhn6LdTHEXbaizb6FdW
v3vq2I7T9mO035t1rnuq/V86xlX0+1Hbl1K5jtqdqz430N8n6zwuyZikf3ka
RaMkf6Hz36J9naB+jlX9+5nr1pH8R95t5+vv/9TXFur/H5UPqp+lJX8l3REa
y4bS2VD9/6gx/KRyaem0ar9baVuqv7dQGav8QfvYQOemxj0g+Qb1M5OxqZ8l
1F+iX1X1b0r/cdUPVJuC6i6R/KPGcL7ajtOvJJ3npXOn6neSzojE91te9U+q
/nbV91P9A5JXUfttJf8qeVXJ+0j+U/Jy0hkq+WKN4WHue43hHskbS+dPyY+p
bhdtr6jPO1W/sup/Un1Z5RRt+13juUb31VL6+20d7y7VKLpX/U6W7jc1t/tB
9Y+q7lbpb6++XpC8WRjzNdK7R/K66nOSxr64+llMv5elMz3se5HkdVS3v+RD
dT12Up/7qPxd9aupfl/VPy35Uen3lzxF5/ww/f2F5P90fZuqz0u+SvUn6+8j
tO1A/d7Xde2g+rU0zqd0HLM1ziukc7x0Dtb2F3Usi2v7I9pXD/2dk/yN9r25
5J76FfR3Sfq7Sd5Vv2skH61ygepvk/yE5DaN7w+1r6nuYZXLq76Tfkvr76e0
fdkw5q81hlh9L9QYpmn7Hfrl1faRcA3ZNlT6++m3jP5+sul7YHeVlzWs+6ra
Lq52bfotIZ1lVC7Jj2dZ7fbSbynJF4X76Af9rtKxXsWzL3lbXYPdtJ/9Nc66
+vxQ9Qeoz13V92uSN9G2XuiqjxUlX6e2N+nvZSUP4JpJ3lhyH/Wzmcrd1c+e
qn9P9Vvo70d1rX/UOX9H24eqfj/9tuJaqvxIOr0lf65tNf09X+XTKreU/nTV
X66xX04/2nfvkp+FzSWPVP1I7lvJ66n+b+lvLHlc0e/VHpInFP2+3UTyTurz
BZ5T9blpye/8TVW/EmPm3tSYt1J9Kr1e+rus69KRc6NyatH3fO9Wfx9+bvX3
4FDeAfp7W/V5kOTPJfeRvKXk7zWe7pK3UXmPysv0u0331Tvq63qdj17SuV/6
q6t+uMZwr8qLNIbbdG7vVX03/T1I+9bliJbUtThc1/ww/b7Xvkerj3/C8X4g
nVels6nKUao/t+hz8pe2/5n3u6uqfX0t+Q/JyxT87lpM/U/Tvh7UvtaU/K3G
8K103lS5g7Zvr9/6ql9B5Q3SWVryHSo7t/ie3Fb1T/H8Sl5D8m18a+hT5R98
xyRvovoZfBMlbyj5bsldJK+tfaykckcd7y2qW05yTr/v+a5ojJuoXKDj+FK/
IerrLZVLqv0gyY+pfFS/6xmPvgeDNOZb+CZKPlx93SR5puSjJN8ueQntayrn
SX1uId07Oc/6jdffk1SeqbKkk/wq70Od51nqexPp3aZtp+h6LdI5P0llWdsv
5Ruh8U1Q/1tJ5yr1e6XkHSRfJ/kOtV2Wb4b0llCfC9TmYPW5mOTPJB8kuSn5
U8kHSp7AfYKO9Keqn0Ml38CxqL6pfs5R/Z56zlfVto/V7jbVL6X6Eaq/WfLi
kodLXkrbvlbbQ9TnARrro3x/VWaqf1P1+6t+uPrYW/Ll6v8onZORaneajn1n
3fOjpL+D6qfpPN+hXx/OIXMQ7aOv5Kt1n/ymsqg2D6v+If22432r+3hHlS/x
TlbZ1PbldH5e1fZX9Bugug9VfqDfYMk3qbxOY9iKOQHPoPa7s+S7tZ8VdCyj
1D6vMT8rnX005kTyS5L3k3yvdFZhviWdGZJXlnye5O21vVW/YyXfr/puzKsk
F9X2edXvq7YfaF/36XeszsFo/fZV/ZXa7yoa/0P0pfJBlWuo7Viuu3SGSOdi
6ZwueU+uveR7OHbJ20h+Tv3+onJZlZ/qfGZq/4nKnLbvEMbzjcbQj/ePdFKV
O+t3uuprmXWyzGNH53jVD+SbgKxzuGvQP0nyIJU76neC5GLQOVn62/GdzPke
2Fj7GKrty+k98LfGtZvqD9Pfq6scrN8pklfNeR/03z/InPN9Y59Hxtw15/2x
rxVD/0dF3j/1nHPGxfg4z48UvK9xkldWOUC/YyLX7R7GsFrQ51iqOuadGI/u
mTgc16ktvq7UnyidC0p+7iaq7omCn0We1cc0zjvC8/tTxc/f++pnjnQe5Luk
3xjpnBf7+h6Y83N7heqvVd01sZ+vKSqviP3MXqry4tjviBEqz4n9jJQzn9+j
1P/L6v8l3jvqpzPzf90nU3W+l9A4R+jZKEr/ibrneBfoeX1aY/+ZeY6O5QX1
l0mewlyX94j0z1S5RsXfhcnq/7mC3/9X873T3zeoHKvyRb5ZfCf09wX6+xK+
FSqfKvjbOLHs+eamOX8n+D7znV5f8ke6V7fI+ZlcKvO78Vz61HiOkXwB6yPJ
eyC3+L15eDj/r0g+SfK0yOftMMnXSOfIcA1/VT+VnPu5j7modI6WPJP3f2w9
3s+jpHetyj8r1j867PcF3aMLVL+eztXlNffRSfKSmd+BI5jr5S1zH/bK+5k9
OvI9c1io7133OOeojxHc1/pdzT2m8rggr6xrcTLjlHyn9F7RvtZvWgd9/v4x
tv7LvG+1r1tVns88Ju/vCM/Ov60+V0dIPivneWyXcM57S15Z+suqny2DvL/2
laq8t+FnaLvwHPFtpG25xdeng+q+47tX9LVjfkWf9LNV5Llv73BND6y53Vz1
Wcp5bDe1+Hnvyzelxd+MbSUfKf2NdH625hlXu43zfqcx/npmeZj2e3bOOuyr
e9798MyOVJue6us97WszHVcf1W+uv/9rdf9HtHhttw3POfvNWR6gtn+1Wh/5
Dp3rT9V+aZX/VfztXlXlzaq7KfZ9t7DqNePhKieyHtfvEL5Psd/PEyQfrrEO
ZD2o8rXU7wreGYP4brZ4/Tip4LXjETwrBa8N96BN7LEyzmUrXrceLZ3xBX97
WVdMkXxlwWvOmQW/l3jX3SD5uoLXrbervLXg7++xJX9n+0uu6LwdxLdIv1sK
vta8kx8o+F3Je3Ju6vPG9WkN73vmEh01nqul14H3QcHvZd7J0yXfWfB3upJ5
TnGqxjxPej9rf++q7tqCr9dZvDckX1bwOnaTnNe/zKWuZ92gv7fU3xPV9kbJ
a2SeEzL31ymPPtV/yzMXUf3K+v2sug14P6vu0pz//kj1v3JPqf4q3ROj1deg
Nt2H0rki520jK17DvaX77sSy1+4Hq7yraNtLxDlkPajf1hrPhirX1+9f1a/L
Wk+/vyVfoT5OarGtYYj6jKR7r/q5X9tvznk9yzuPd98/PD/YQvTbU3+fomty
s+RF2t8NrHMLPvbz1c/1atMt8/n5m+cAm4+u44YlrxH2ku4eBa9Z9lW5d8Fr
kw3Udg7fENYIOvZ/qVe5vX6x9rGtyjX0+1j1q6k8U/fbGbHnDOvo7y9Uv5bK
jfT7RvIGKrfQ72qNcaYGcbeejTzzLtXdJfkH6fSQvD42K8nrquyp30/MTVX+
rnvpVrX9nXtXf5exAam8U23fY54keSXmfsyrGn4n3x57ntxNf3/AM6iyVe1a
9PtI/eymv9tYz6rcT79lJe+jcnWV3fT7QzqH6O8VJB+kcob21Uny/pL30m9J
yXuoHMJ8oOB14HK6r16R3L3ib83JsedU23HfFrx2mK5j6RfWGgerPLDgNdRK
Ba9HlmnBQOb11Nu6djvzbBa8josrXpvupusyRnXnYRNgHqg+9w9rTN6jvE95
Jw9U3S4Fr1X/lM6aGvNfvFtU9w3zNslnSz5TvyHMdaVzDPuTfALvE57nMOfZ
SOMZL/koyUfo16/F7zzefbwnT1bdifoNkNzkWVE5VOMcobpz9NtTfz+p/kdy
n0k+Q+Wwgtfh3WOvl9eTfJbaTFb5nfrYXPdpz5LXq+dUvH59XtsbuufX0r7n
sj5Vn+PVdq7a3KF761WVd+ld/qiuxQSeCZ3Df1rDO1Wndmm17azz8IbqqvQj
eY7k1SXfw3tGcgfJy+r3puSfY383n2z1d/M66cyS3KZ9vcTcUPfAtap7otV/
/yWdG7G7Ms+Xztt8EzWe61U3W3Wv6e9uGltH7XdHHdM2Gv9UbftU9T0kT8z7
GG6t+xm8TW3HSH+M6q/Hbla1/jTsB9jG1M9LjEdys+i5TD/WX2r7lNr2TT0+
/l5Fbe+W/IDabs3zq7rHpdMLGwjXWfJX0l+k6/KB/s7U5+3SfxE7iOQV9Htb
8trq5w7Vz1A/JdWl+r2g+tN0rR5X24t4/0iuqa9prZ4XMz/m/umjumvy3t/m
ki/L+xxdJv2uGv/z0s+rvz/Vz3N85xs+N7M0toek+77qvtTfa0rnPv39nv5e
rO66Z6UzQ/K7fIsk78K7SPIzkiPp3yT9Z6XfUfLK2tdbkgtFn4crpLKujutO
6dyn45pQ9bW+S/KPGsubzF2lc1fd8gz1uap0llH7HXQd/0h9TnhvLKH+n5T8
mvrfIfX98K3q76t7+xi9SzZS22dV/6T6XyXM2d7hntR5GKY2LZKfkc7j0nlU
OkdpP62qexFbLfdmOBfrS35L8gfY7+q23Y1X/0c0/L58X+Pcu+H9vyp5Kek/
I/3XpddD/T/Pvar+D5POL9KZJ53lta/vJV+nfQ1tWH5d9UNYd0t+WfJiieei
3G+z1cdHwWa4RN3lXOlsr+O4Ie82GyU+lg+x6el8/cQ6TfvdWPWn5lw/WeN5
UDoPqX6QxvCb5H/Udg3pDCz62fw79XXnGzqr6nt+O/W3u8rfVf8f82zpr53z
OdlU+pM5XtX/Hns8T6l+8bqfxd35XtS9/W6NuZl4DLxbNuF+D8f2UN37HKdz
uyj1u4Jvd1Ty8WMj3UNj2LRoG+xjdddNkP52qZ//r7gv6243VvX/pL6n+d4f
2/C7eRVstDquAepnqI6rm8bwunTmtfreROcB5ivMIbmfWbdJ5xWecencLnlu
zu/8DXW8v0k+XfUtkjdn/tfqefgvwX7xmfbTgTmt/v5c8qwg56Wf0+8Q1vxq
N1X1i0t/L+z8+vtQ1U9NPd9YSvXf8z0veE5ys8a9meR/eT+oj+80tsNU/17d
drVjdIxTEtt8saFhs8e2uoKO6yf18yM2XM6h+nlGOj3Vzy+qe1ry3qr/WvID
kveQ/Gnd9rTj1OcVie0V7OM35ggF2/+vTGzzR6+p8cxhvaD6L+re//Fq+w0+
oqL7PFjHeKB+p/IO1xhelH5vjeEN1mSqW0Ft3pF8ADYVyb/WbfM7ueZzv1/Q
WVz7eoV1i/4eUrXdvof6WVr1HVlPqv6axL4P7IRXJ/ZDYCucVrUv4PfMa6XX
c/ZffFT3uTpW+7pfYztAOpnKL1nLavsavPf19yd839X2z7ptq6dI/+u67Zkn
SP4XvwBrKLW5NvF1xzbLdUO/m67FM+pnPjYLbIrSeSLn4yxo/F/kfG/8XXe7
U3nHYrdT/UGcF8k/6LqfxL3XsM31NOkkqo9j3z8vqv/vpL8L83PsBtg0sZsl
vtbMl+bg05Q8SDp3pb4fqL9b52ceazDVP5fzfGoLDaFD7PXdsernrsTXiblZ
/zDnWpt5sHS+ZU3X6rXeP6wpJO+ta349dmfWIqnvZ3yL32rcm6oczvcl9X3A
PGy92HaPYbxnJHeSfCbXQPJPOvZTJC8j+Y9wrfeu+jpupTHfnfo+ZF53a+J7
DLlN+scWfH/2kPyn6s+QfE/qe4nnegfV/4LdlbWp5AQbqeT7Ul935vC9VB/h
f2QtofoPcp7nz0h8jdC5O/E9QP3y0v+PdZr0H0h9PzEv5fozr+yLnVPXIqc+
985831G/MXYztW3Fp6i2++kcPqh+Y/39HXML6YzG5pH4nqHP/tIva/tI6a8m
uStzZcmHqM+FOfsXDlA/5xd8Dl/XfgvS3w97Sd1zz731/nwo9f3D391it6Wf
1obnthO136PUzzva9yjVP6d+RqnPJVSupLp+Rc9nDlE/v6r/3zgPqu+UeG4w
gjWPdIar7KDy4vAdvynzu/wO7Ana9iJzQo1remb/8u/YmaU/LW//9eOZ/VSP
qn6w6meovk1/xxrbXXn7vvvmbTe7XP2+qzHuh/9a8lu8w/hmSf5Q8gGSn5N8
ifqaqnKkysvKtgWOVvmZdA7Le+64Y962tItVf4bG2Vv7Pl3lbnnb9rC77cHc
VeXNLbZXYbfCrvUJ3wpte0Fyi+7bJ3kv6LxlqW16N/JOydnnyLxkiPq+P2+f
fkPH9XDePsUfdF3WzHnO/LD6OVL1k3Q+ZjKfV59/Z7anMb+dIZ1P1M99zBcl
L4cPM29b4UvBjjdT9XNjz/nv5Rum8/6Att/OvI/1Szjmhv6eofIWlRdlXh9c
p/PQUvK8C9vlqToXszgX0nkk89zpPukMU/3Tqn9c9UtpPJPCHOY3jfdX/ebx
DpXOTNU/KJ0VpXOF5B9V30XyVXnPpY5hnay/j1Z5JP4Mxsw7uOp16JbYNjTm
S/OeY2GTw06HXS7B3xfWBV9LZ3g+zFNVf1nR/sFVS8ZgrMy3WPJZ0vtK8lX4
74r26/WtGvvwDbZJfLdF+/Xe1Tg6ciwqv+IdLvlLlZ/p11XyfJU36hnrIvlj
yR8ybsnvq7y1Yv/HD9ideC6K9lEO1nOza2K/8P7MaYvGbBws+aDEmIoNeK5V
PxYfr+r2TYzBuEH156XGYFxRtc/6Ba4bzwr3peoH0A9+Msk7Sd4xse+7n8oP
pPc5+9X2VyUvK7mT+js63A+/aNwbaPw/qXxS1+J96T3BvBgbUpgffo8dJu/5
/c+STw1rk1XUz3ux1/ZLa5xP5e1r/kN/n573euM/bGZhXZOp79FhzbVQ9ceG
NV1d9ePyXpOspXP4qratqXJF9fly3v7u5SQ/l7f/ejed/8fVZrrGuY3G3UXn
o0ubvj+Sr+U9qfJhbZsrnQdVDpL+jfhbJXdUPy/k7X9/VvV3qv4WfESSH+Td
JHmO5Gd4H0l+WfLbkh+TfD/vNJ5Dlbuqfobk27DHxF5TsxZ+RvIoyfdIHq7r
dYjkCzW+y1V/sMZ2LfMu8DcqE9Yl0tkXG4J05sR+D/As76Xyslb7OyZpzF3w
0ervd6RzCmtVyeNUPwasAPOlusuqynG6/07W9+c3laPBPEj/Nm27lDUU6wjJ
B2ksBf2uVP+XgntQXU7lE+p/f+lM55ul7S36XSydQ8Mx1aQzSjrnxm5zmf6e
wrxY5SX6na7j6K1rsVDXr4fanKq/98rZXnyh+vlJx7u36seq/kyN53R8+a22
qWNbxwfxnPrunvN7743U+vh+xku3ob9f1/1xc93v4FvAmOg+LwZ7RaL+j5f+
Jep/vdTXAr2reT61PVO5pfRf4h3CM5J6/cs7ahvV99FvvuoPbLjuTfV/ufY7
J2+7xxrqf2tsYjq+11Ov6/ET4OvAt4e/44bYz9eN0m9r+txXtN+HVP+gfnfq
749VfqTfw5JL6vNE6V+uMd+GD0Lyza1+x3Of4A86JGef31WSr1Jf52GraLMP
BF8Ifpljwru/zjXR71zpbCWdK1JjFb7HjyDdfM6+sIti35/XaNua+KPC93Qp
jeciybeo/WuxbS/3MR+ue/t1OiedU48Tf9uH4ZrMZq2itv9I7qXzs47qR4Tv
8vsFf7fHYYuuW75B/Xyu/t/RtkfUf1HnvpDY1rG02h6Yt3+rWHU/12o8j8Ye
513SWUz15zB+1b+Thnu0xfcm/sHTta+3VX9Q6Oet1Pc2vv9ZscfEff5e6nuG
Y/kGvyHfONV/xX0u+THJS0pnaGh7Rd3Pccy3oO7ju0nHspLGk8OmrWNvSj5L
+lM0toWx7Sn0M1n30qrBvrNY6uece/tv/I3MbaQzNGf/MTiDHyre7wWZz8fV
rcaQXF63XFC5Vt3XsKhyduzjvbvV9qRHec/xHlb9v7HtPHMLfg8wv/mA8xD7
nfBJbBsX9yTvJM7hZB3Xm7FtBffzjtD1mZK3DepO7l/ON3gSHe8lqr+dNUvV
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
gtiYHHSWT237om3cZv/si9gay7a558AMqn6OzsGGkqep/jt97zfSeG7V3y/i
r5F8SNP48OPV9j7Vv6P6TXhGm8ZFn6X6idp3f3By+l0tncdYo2t717LX2p20
/WFiTxLbXx+rGQe0unR667em6vpqLFup3F061zE3KNt3cITk0/Hjal8rq26A
/j6TdY7O+RDVl2PHfPBMYfcYo+MZWHWMEuuEo5vGcp8DpkPtz8Neqe3zWWdF
xoX/K/kflQ+oPFLnc3+wchrj7pmxNPs1HQvD+3l7bB2Z74WRVX93TgrPSJ+m
7aJbqK617HtrjdQ+dRZ75zPestdXnKtCm237HZkQa38vq4+kZuzGWepjJ22/
oel4qB/VxxVN22kHqP6mpm34f+i4/mzab3mi2raCOyW2ROXsstcvrGMeahp7
Nlhty21+f04EPwMOIXJM4H1N253uUrt7msbJ9Ne5/a9pn8uL6vNs/b2E9B/D
5tS0T2dP6U9reo7aReXh6usLrqX2cynxhCWf85er/nbMrRobhF9gmvrMqrY1
fqx+Vk5t++Xvd2NjobFJ9qh5LrYjMUnSOalo23Wfqr8jL+OfSrzuJm5ln8Tr
OHQmSP+MnG3grPOwi3+ovs5I/a7DZr5b4u8NNvzrwn24tcoDE6/1aLst87ii
vwUj1e7c1Pb90SpPKNp+fo6Or3femPCW1HEg2DDfbRqn94/O+XDulbwx5Xsl
nn/QNt80nrylaRwytgn6uTUzbmKcxvNrbJwef2+S2j8Ctqk1dRwTdtLNVO6T
M7b8wNR2fL6PB6e2zzP+30vGZHWpGNcJrhcsLrha8KuLEQ+U2V76p3SXD/VD
I/vPwbltFRlDC8aLvsAas+7rgg0wtV2dtVk94MD+KBnfSp9gg7dOHF/J2HqH
PtcPWGKwbbWa5/j4Gd5S/ZVqf4L67c+aPPFaAL/DoMRzDK4jfmDaggcmlqk9
pkn31To1zwG30bn9sOR6Yn+IpyRuV/+iXRKvI/BxXI19IPWccvvYeD98vv82
jC38U+VZzNfyPs/DSrZFgzkE/4ytGfm3hvF7F9f9jvk7MUbrFGzm+k2WfFzT
8SAjpXOsztUFzIl0rZfWtRkreZ7GeVjT8TgnS+fg2Phb9A6LjWGdKPnQpuN0
TpTOCZnrjlM/n6mfC7kH1U+31H4TbHHzY+Ol+Z59GDvWgO/gReDBgt/l2KZj
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
il1TebiAKzvb2kzO5UVxcSnNFnDxYML+Dws2JOs=
            "]], Polygon3DBox[CompressedData["
1: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
s39/yTNZh/r/tANwPbdx/g7msizjrDeQ8Td1L6LNZ7RZgeM3ca6fuB+PQb/H
mFNx/rlU3xlrZ3V2zrWf10T9NuY4FnoZ7sei0Ecyfom+v1JfnfHfhT6EtgfS
/2+u9zX3PN4/WMWr1GdzferLN6/9Rx+AvoBlmeNm8B51D4Feg7JUNfrsd53/
LRPFX9X4Dz5j/svCX8z3WRmhNzq2+8Uoyg/a22g/ZSn0j9CTuCeXYx97EN54
5vB0NTKCssLzHF+cSX6vTML8z1EnU/6j9HA/fqHNjNRfqGZ/qdPmJeoXNaJ7
TM6xC6l/V47tYmLON6aU9r77u3VnT1JnVHdcG3rLSvSnn5jfItrkXT/o/7P6
OfTU9N9K+Yq2fzPfp+j7JOXXvthQr4b/aTO2yqNcSqk/TP8O5j6BNs/Qdizl
dPintcXet30l+kMHx56D9zlla+qz9uQeqGOpa+1M+ZL6XDyzXvr+qc5Vzxrt
Wl2jzFSKDVVbqjrUiYx/OuUO2g/m2JHV6ETqRrvCn7kU+fUInw3HRlZj09S2
qY5ybjk2Wm216hCnlGMT1jbsGqa8rY1dW7s67l3QX1UzV99R31Vt5trO1dHv
LUc/O43zLcixE6rR0dXVH4U/eyk2ZW3L6lAX0/ZKykuMNT/Hjof3Ovd0d8Y/
huv/mXdlbvp8yXjnw7/OtYt7ciH166mvy/vzCvR50Nc6j5Z9aFLeh0s5dgPH
FqT/RX3xObhefE37OahfzbG9a/ER6CtQR37Sdxf+PPCv5dg+tcjr/33rzKFZ
is1b27c64gXlrImujVvDn66UNdC1cPe2yEfjGW9JxruJYwfUooOqi55C/1la
9otb6Lsxx87y/aH9/LS/znPQfqjPlPdnNejTqL8Fv9EVnWy9WuwZUzO/aShv
VmOD0RazOX224/wvM/5U3MsZOPZWNW1sq0/w/lLkRuVHx9Aeov6+uLIK9PvK
13xjE7nf+Awakc9W49q2h/8F/Hehd+yPTDsxfTfSPgL/UeZ7l/oHx2bU/0eb
D6vpY19tCmvT9nHlF23szGcX2r7P8z8c+mD6jON8c9QjW+vTnLMen5G+owv1
EdH+Tdrv1R8f2Ve0/0b9qj9zVF6/1XdW+5X33PunvA3/DGXAWuwDl+qPg39q
NT4CfQXqzNeX40PQl6DOexP078xhYa71eo7tR/+nmP8Qv1XGfMf7QZnX+TC/
gyvxx63F+I/Q/s5qfKz6WrdhjLW0NzHm4szvLo7d7vPxfrdlT36L+uf6EKhf
BX+vWuxt/cqarMGLVGPfUZdcHHoh6G9pP1dX9qwtab9fNXvDP/D3r2afcr+a
WXmfvt/X41tyzdmK9t9U4qv8uzc6yZbwX2atfwp6c+7dy5T16b+m8hy87Vwj
eyPjK999C+8U6Fs6Mn6lEf+jfsgN/dbpvy5t+jnfNp6PMeZU14D+ivq26iO9
0QF8P/aFPgneuNb8vR7r4ykTGGdr+rxN2+egt2TsFyhr9mfPXwveGrQ/qDc+
o9kZb4A1ouF9YP09mrY7Un+tNzbhzX2+9P0KeqrOfM8fwV+rNZ6yxIFujH3R
obUXPc8Yq+sDY46bcT23cb2PduddHzQQO7b2bHVm97eDoXv7YvM6Dno/ylH0
/Y02eztX96u+2NSO9luCPqs3Mqr+zcc432KcbwzT2JD6L+oY6hqd2b8udP2D
dzLH1qtGX5of+lafH/QmlGupP9sRfUSdQt3CPdv9W/1h0a74QPWF/lGPbDyL
c6T+LOdcieMF9MZc7y/KtPBngv6Z+qaMfx3jPd8RfUh9a6Gu6DTqNr/SZkH1
afVB+n9bjayjzPad37Y2J3g3M8Zm1fgv/Lb9pv22J9B/KeVV34l6dCx1rfc4
31TM/1+OLd2Vb2hXxv8EeiZtjZx/T+hla1nLPteWw/M5k/s12mfJGGsx/jHw
l6Dv39rQ6Lsmxw7ujc4wVzn+WGXBizm2kXtZOd/SJdAbu5dQ7qL+WUfs6X8z
xmKt+7k/Y28J/274X3RE39sa+pHePEOf5VbQK7fl2DbK0/R5uFVfhfluyP+z
e6PT6W/X5qPtZ7z2xVL0z+Gc60WO7UDbndwTeqPDb1WOfDie+tfa+OvBSIiV
0Ce7Pvfi4FpsUcpEo3iXX6bNX9Q/o/2k1HdXZiri89L39Qpjjm6PTqdudwZ9
/umMz/b0RtZE18ZhtNlHXZ4xvhFfQPttm/G/vwdvVuh53Lso7dT/6gq+Qfv4
jK3n9z3jHEGffr6PQ2i3Gvdj1Wb8mfo1V1SeVN7wWVBWsA38LaivSH2lgeBD
PuB8Qzk2fzU+W323o5jzc+X4p7/k+odwbD54H3GsjfN/y/nnKQVf8An9F4O/
YDU+HX07H9P/pXL8Ff/QfzaOzeuzVN6j/hX818uxVy9K/z05tmo1Mrey9w5c
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
fN8WG/hDtN8c/mCubSzneL0Wm5e2r3Xbgj/XJqhtUJldfVX/w5T03YtjF1eD
73pYfzL0RdX4rPRdaeMW36mPTF+ZNmbt24Mox/RFhhzSkkcnZrxdOXZhNfhr
sTU7Ql8AfWkz8q1y7poD+Q79Hl1TxIsaQ2AsgZi2Z9QHm/HVbyZmppHv/TXa
nu2a7bfPNU/r3kWbPdTVKf9ri812dvrO0ogs/KnyKrwNB2JDV78ZBD0j/Pe0
N3s/qL/FsTE+a67hsXp8bPraxEiIr76JMd/ui0/yjFr8sQ/ryysSD7IdY0zH
uX+jzdvwF6P9e9puaLM49UXgj6X+jfgD+Hdxjku41uHQx8GfQZ29Kz7Ys2rB
J4vVegr6ctquCN3D+D/4TsFfGnoC/NH696Cn9Rq0X+uTh16tEVnjR/0pLfzo
2CI+Hn09szciC36mfb8Wf/82LXuJa5M+H30/PlP9mWdrP2K+++p/pv2k9D+x
K5i2U6H/0d4I76Ce4j+hcRD0cV3BMJ6k/X0geHmxxuJP9fHp63upCB5a/Kix
IGIixEb8Sblaf0dv9Ct9PPp6fEf1ZyxWyb01JsPYjK/5f01/MKH6zwY4/0j3
I86/m7YU14OexBAYSzAJ9PHwt4C/u7Iiz2A9zrWv6xX07dDfU38e/rXMf6KW
/Haf9groNeFv1xsd8DTGGu/3q21T/3Q9/kh90Z+45sM7WnsrffeGP0H7Hcf2
pP4TY7xN20Et+fNxZZhafHb67gRNiw+/z3eacz2jj7YRDI9Ynj2K4MHFyD3B
fZmzPdg57TPaYp7XxteIfnaFdhzXp2rkPfeGkRz7sRp8kb4zfYL6BvW3iX/5
s5L1uo05vdYfH6S+yHMps3TnmPjF86rB3oi5EntVF1/P/V2qLfpfB/TOyhvQ
7Y3Y3LW9azPTfvh1JdjNt/uDoVEnVjfWJmn8yb/VxN6IyRSbKd7bb0/Mp9hP
5yeWRkyl2ErtYUd1x0elr6pLPDPjr6r9sx5ct/juV7Sp0n42jnXD+517Mruy
tTbD9vistOd/T9mmPT6q7WvxKepb1Cegv0eMhFgJ77H6r/EXt7THJ6lv8meP
9cfH/xP1e7i/7c6VNocyt9+Ukfsj07i+iQEQC3B2f3zOv1RTt41tj+ecC5fi
T3+nHv/sed3x0emr8355bdr0tO014B/O3DfSPgv/03r2zikpn1E/lPHmLcXe
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
/Ku134t92ZTndwrt/ywnL4QxcMbCaY/5jL6zw5+qtR+LxdlQn0Mz8bvGwhnj
ZqzbmHp0M2PkjJXrL0c2Nkajrxy+thkxHWI7fqhHlxQTKjbU+E+xEcYkGJtg
TMLSpcQvSGtPW7YrPtrXWt+PtrsrjYFqxr80vC0YJLFIxgOJRdKHoy9Hf9Ay
bcFkiM040OddZEzxkKfzrO/g/i3fnvg38yFoaxKTIjbF+GZj8Yy5M/ZOPIe2
HHUqdasv67FV/QH9covuakvMp7GfxmMb+2nMqrGrXr9YXXUmdSd1NHU1Y1TF
6oqvMIZVn9c69bx/r1N/Rp9xM++38UtzlJN/cl7meEhfMFX6R7TZaLvRpnNW
MzZabbUHt2j96+ZS3KVI7k/xQObTMSekuSGNgTEWRpnk0lJy4JkLzxw04s/n
4Xz798WmrH9Gf+2avVljXWvFjIgdMcZC//YUtcR+GlMgvkEMivud+554FXPu
mXvPnHvGV09cje/SmBzja7RZa7v2HPqD56b/iL7kCNRfuVcj2MrVemM/0X7l
tXpPvDfKHMoe+qzFG4oZETtiDIf2ptGVYOnMuWX+JHUcdR0xZ9qPjRc2f5E5
ms3V/Lt7NvQB3L+z6vmG/Jb0QT9Sj3/i/Gp8OmIxlZGUlfS5PlGPv95corsW
yWV6cjOx8fqUxZd+WUkshzl+zF8yuBms4iXl5HPTP2quX3OomkvVHFjmwjIH
lfkGlqzGz6a/zf3OmKhbSsFc6q8334+5eIcViRVaoJnYNjHBd3DtH1cSG2NO
IfPl6lPXtz5rNf7/0Vz/Jt4PMR7M97tGck+KOTqxnv1L34R7lnvXCgPJ82u+
36WbsTlpe/q7K/Ld4q5f6rO9wW/qU9K3pIw5StuXa7KxEGIWGsmJY26cE9qT
D0cfhb4KMbl30f79Ws41jTbxZor1leF/UEuOS3NdmuPSeGhjKpevBsMnls+c
l+a+dM0wX5b5wtbpzTvvu6+/2Vzg5qg1V602VW2r6hzGYqrTqdsZkymt/2+Q
WIDe+M+09/mu+g77LptTzdxq5lQz/5kxu8buntgb+7o51sy1pg5g/ht9mPoy
lbmUvczBaS5O10Dzb5kj01yZ5ug0HvZr7tnaPcGgHFuPDqgueEJ39Nv5asEq
6tPR/jtbLc/DZ+azM0eZucrMsWY+jemV4TnXzPqcm/Eh6UuaQJsZmrG/Gsul
jK/tVZuetr1f2+IPmqQZ7KwxL8a+iJ8aWSQm/NBm/M3G5otxNd+LNl1tu9p8
76knx5u53sxxZnzLjKXkrdOnrm9d/NSRRXzo+tLNoWYuNXOsGf8iJkxsmDFT
4jP0rx9VJGb9sGb850cXwQiIFTBmyNghbRiL0v7vWnKZi0E7tWXf2Ir2W3Hs
+0biRfUV31Yk16g2Um2l2mT1H/9TS25xMWan14Nn0/a9Pcd+bASvtzX0ttA/
NBIDPKESH5C+IHPi/IdRLJIrRxuNthpzhL5cS44Rc42cUiQ/nTFqxqqJATy5
HrzBsUUwD2IfxLiJdTMHnvqA/oEPuoIpEVtijipzVZkTyvwp59HnqL74PBeo
5XrMfz6inHyOygjKCmdWE0+gzKvsK4bmgXrukffq5PbcT322+m4d8/xmxher
PLJFm6PLXF3qvOaf1J6hbUbMgNiB493j+2Lz0H6izUPbhz7hC5rxieob1cYi
bQ5AcwGaA8x8YGIaxTaaA/++evCGhxbR2f7T3arJlSXG1Hw04vsOKaLjqeuJ
7zOXh0HE+zWDFzyoSE4E9TOfqc/WHPa+L+awN5e9OXeNP5mR9hN6g/k+q/V+
2XbPcvI3mvPP3H/mBDQfy0+Mt1NP7rnvjzm6zNVljk/jqXxnfHdOac/zFl8p
1krMkNih45UR+qIj+j1pjzu8CMZIrJE57M1lb85d452U54Z1xEchTki8vWv1
FJQlminWxeTfW0tMubHlxqAbb28+qFp3fsPB33LodE/syT3W36vOLn/FSnR5
85WZO8Gc9+a+Vz7Wd67MrOwstkBbhDnRlU+Mu9V2YQ7Ua5jr+pz/jN7kdLm4
kt80uKGIfWG5SnwgYj30aesbMUevuXrNYWX+t69KsSfpL1mjku/X73nlSnwf
xo/f1B0MwaliW5rRjbWBags1f7u2/hu1P8H/pD+5quxzSiXxWeby14ekzmlO
e3Pbm6PS+DfzW4j9FX8nDs/8Muo6T1IuqKRYN2f+QuXYY6cqkuN6Be9Vf3JH
vdad6xdvME17MBpiNcwPZ+41ZV5lX+Nph7fHZ3GS3wPl4u7kJDN/mNhnbVse
k2e8rbKyOpY50M3BYS4OMcDilc0Zau5Qc/4aj6VNx+e1fAsboj9ELOYQ8R71
5C9eT12Zsk0lOV7M9WIOAvMVmZPQ3ITmdPX3A8wXZm4v/av6Wc1JbG5i31H1
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
b813xnfn/1TsHmk=
            "]], Polygon3DBox[CompressedData["
1:eJwV1F9sT3cYx/GnVFtVNaVZ/N+QTinNJMKyBEFQXHXYBJFIJL2QVjd/tlUt
EmZIEEss/pXZojRUE+JCMpsbEWKChKQ2QXCh9NeWaofWXufiSc/zPp/P53m+
v3NOP15ZUVreIyJmql7qbV7EtL4RU9VZ/dT+EcX9Iv5JjziQG7Ff5QyIeIdV
ZEY8oRut3vAtVpuyIr6gmd4noknfSNeeFlFKU4zPwIbLHNc74kd9f9UrycOn
04zUZ8kYq+9WJdhfWIr+sqwiLNv9UVitGRexT7F+WAF2FDuJNZjxC++/2Db3
vqJpx5fa+T6+LifiJTb3A56eEZ/oC9Qc/Ue8tc5eKGsEf4b9umhnJWfV95E3
Xn+LLk3eebyEdrX8DXjY9Xu6jfL2ycvin6U/pja7N4ku8CreZ7zf0b3iG6ae
Y/l0e+Xto/scG2ReEXYcO4/d5i0WMUR/ij9N/i58nt+5UdZV7KHd5tMV6Xfr
T2c4E3YNW2+HI8mzUJm87WYcpMvTPzZ/sP6R2pEd0Yp18+frL/OfdN1ibr5Z
5WZ+I6+Mt5zuvj3L6PbQjee9gy1Ifi8z1tHWmnta30H/H91dulzz/pS5UGY1
zYfqFm+6v414D95BZjx23i6abtXKm8Fb4YXNpVmEvcAm82w14zcz5qjevOfo
rjj7dZpicxfK6lRvXdfT1NEf5/0Sm4jVyLtJf4Hvuupw3YDN4F8hfwndJLpf
sTvu/UGzRk1wvRg7QZeS97da4hwPzJiNPde/Vtd4L+qH+uhGy9qEZdqhim6L
e4ewkdg7v8tQ7BBtjbkdWLP7j7Blcm8k34Hzleh/VztkbE+eL22L60vYPPu8
p3uFP3XdhH2bPBesTa2Sdw8vNauNr5pupnMsx+rNbaHpTPamO5W8f3LX0qWb
20nTpc7w5ti5J/ZCn1I7sXTsmKrhnYg1elYF8guS91zWhOTbTN4H/Ri6N55v
ysz3qlA/25wh2BP7/kR7mHcaZkw8wKqxn7HNtGvN+Fpmk/evQt4PWCVWiT3D
yrGBtFvsMJBvqRnNiU5l2WFj8j+C/jDfbrpKmgE0N8zapa/H69yfkpxPxmdY
ssh8/RjefDMmy/ofcZS87g==
            "]]},
          Annotation[#, "Charting`Private`Tag$7454#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl01toznEYwPHHZsO7GTmlFKPNss1rTYyySxfYDSlt7iiZNG7ElkPtwmZO
oxzKITebpNygyM2Y042UmcM2Y5TDEslhlJbP3+r99zzf7/M8v9//93vfd/aG
bWvqRkXEoGfr2Igk/z064p2YmhAxUfzrWTspYqf6LPmFcRHTNeaqp/EVXI7b
1CvxTdyqVsV1cFXcXW4T7sXr8WXrPeL2cWn7beGqMyMO42E9hebruS49l7jJ
YjPuFztxk/m0/BT3SXzFNXPL5e1cn/khbjW+jrNSzpLhPeRlal3ilJyIp+JM
/nxexA693bhQbz43Vf0Znovn4Hr157gI31Yr4PZyL7h53FzciF/ibusVc0Xc
W+fr4XY7XzHer2ea+V6uRE8pd4Drw6U4jdvMH0rOxaW5Mq6dO8z1c/fMl3NH
8evkTHoW4jfy+2qL5K1qA7jWfX7Flc79BM+Q93qnTvnK7Ig8XKJ2Df9K3l/+
w91d1NPGDWVF3OB6uDPcSe4x14EbcFNyl+7+6hjfq7WquV3cOudt0VOBC8zX
cufM7eFKuBrcgjfi7X5oKW4Vt5lbwd3y3stwg9kF+I715uP33nmQq7HXTJwj
94l2d/DB45rij+e8/vFJ3XpDyZxarnjWGZe4o5/yM3qkka1nseS7/DSXSn4z
3DfxBDYSjRY7Zu9K+x7nvF4sFb+Ix8QBQ64gMsx9Fo9w2i008v/Kt/nBzP8Y
w876UayziDTK7f1ebFLPTPYy+JCrsJdPPJAvzhj5j/4DL452xw==
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzzkyRHEUxeEr1aVMgfZEEtYgMTZNdaa6SxFaADtQEoHQPHW3aRXmsRFo
UxUy1mAHvhf86px7zr3/eq97dn5yriEiZtDYHPHcElFHFr3oyICWdJ30ry0i
aY/oN5/wK60Rq3jRFeVr/IDuB6+yN9SwLq/YH5SX6YZ5oSniQbfJV2VDunN6
iilvnaWKCwzrLumimy37n+5GZAk9kh/jnd/WZX3zjfkK15jGLQrezLm543fs
7eLLzZI3R+X38j1ZGR/pP9uv8GO6X1T5Zbvfun0+L6u5OeD77B7SLt0TxnWP
tEeeT2dMyDL4B8hFNjg=
        "]], Line3DBox[CompressedData["
1:eJwVz8cuxGEUxuEze6JdgNhpYedCbCRChESEYPR2PdotuAO9DYne++h1dI/F
L2853zn/maKmZHVnIiI6kZUTsZkbsYUafiYvYhp5BREJpPSzcq3ZUn7EG4r1
u/ptdOl36B7q+DlvH7IiRr3b13XrDuiYXM/Pmx/KR+iRj+kJStxskBfMT+UL
nKFXd04v0cinccWn0cdn3C21ey03yYv2K/hKFKIKzf+/XX/D3yHf+3d7/fpb
uYVe455/wgMG5Ef6jFZ+2X7G/3qTXzCoe6VtdMWszM2MPO7uOx3Sf9AJudys
XV717lP3gy8M677pLzr4dfMU1rChm8qOSP5/243QTdIEHdH9AXE4Um4=
        "]], 
       Line3DBox[{1067, 1036, 2669, 2667, 4953, 3862, 2261, 2666, 1064, 2284, 
        1033, 1866, 3543, 1864, 3861, 1030, 3540, 1863, 1059, 2281, 1028, 
        3538, 1860, 1056, 2279, 1025, 4080, 1053, 2277, 3696, 1022, 1855, 839,
         3860, 1019, 1853, 1049, 3695, 2275, 1018, 4079, 1046, 2273, 1015, 
        1848, 3535, 1043, 2271, 1012, 1845, 1843, 3859, 1009, 3533, 1842, 
        1038, 2268, 1007, 3812, 2663, 2661, 3858, 4940, 2238, 2660, 1420, 
        2500}], Line3DBox[{106, 764, 2807, 107, 765, 2808, 108, 766, 2809, 
        109, 767, 110, 3057, 768, 111, 3058, 769, 112, 3059, 771, 113, 772, 
        2810, 114, 773, 2811, 115, 774, 2812, 116, 775, 2813, 117, 3060, 776, 
        118, 3061, 777, 119, 3062, 778, 120}], Line3DBox[CompressedData["
1:eJwVzsVRhFEQReEHa5wF7iSBVEECbAiBBc4M7u6uYRANmgDuMINb8bHoOn3u
7ffPlDRE6yMJIYQxU54awmxaCN0ZIczhL39JD+GYP2NtZghlspi9SxbHI/yR
HeKON0+ybSyVTWOnfAa/+ac92zce3RSYEtmkLiqfwlTdl2zL/qDfxGI+jhE3
E5ji5lO2Yb93s45FfBQ73IzhB1/DO/0qFvKOpBDa9SP8nVfjrb4KC3gFDptK
88ZX8Ebf710+H+Rt3g/hK1/Ga/0S5vF+bNUP4AuP27P81ys3i7JcWS+2yPvw
mefrLk2eyeHd8mZ9DyZ7G5ct2C/085jNu7DJTZ0+hjHZuf7AfoZZPFFXYxpl
p7J9fJLvYS4/+f89s8v/AKdoTiQ=
        "]], Line3DBox[CompressedData["
1:eJwVz8lOkwEUxfFbWim0tHQAEney6N4XkEQGF8wWVix9AF0QJqsIgUcARcbH
YlIGE4UtCUFwqr9v8c85955zv6H31Zv661RENFDrjNgoRdyVIzZp0/yTn6tE
fMfzasQPOotf9kf0Nw3dW/6xfJ4Ouzuk97J/eECLTr/8I12Qjeik+D+yE/Nf
mjZ/wqJ5VH5Mm8ktHXCbRka+hSW7MZ1TGsgghUeyz3jLj8u/0JuCPU2jVfYU
DX5C/oR/hhfoQxbbeCev5SO+JjfIIYs22Q7e85Puz5IdCmhPkA36zl26bH6p
c07z6ERH4mVDOnv0g7muk+OL/CVmkv9Eh90+VuymdC5oCRWUk3fKqnQNV7jG
avLfbrvpN/SgqHeAdX7ac7rofx0PPCc=
        "]], 
       Line3DBox[{2323, 1116, 2700, 2319, 4944, 4724, 2703, 2705, 3826, 1118, 
        2516, 1472, 1980, 3587, 1120, 3987, 1982, 1984, 1123, 2518, 1475, 
        3589, 1987, 1126, 2519, 1476, 4111, 1129, 2520, 3770, 1478, 1992, 814,
         4129, 1994, 1996, 1133, 3771, 2521, 1480, 4112, 1136, 2522, 1482, 
        2001, 3592, 1139, 2523, 1484, 2004, 3594, 1141, 3996, 2006, 3597, 
        2008, 1144, 2524, 1485, 2706, 2342, 4738, 4943, 2709, 2711, 1147, 
        1487}], Line3DBox[CompressedData["
1:eJwVz8kqBlAYxvHXmszZK5mTJEkWhsLaJdiaM2XMsDK7DQvZmH0+UzJEJCHs
2HMJft/i7f8M7zmdU9jV39mXFhHdpiIrYj4nYsF80q25ER/Ygh15EeV0E/2O
P/iGc3YvsiM2+HOc5V/ljfx2esQezsjKZFM4bf5k7e5rwBf5mXPr9ClO6rec
q+efdRN8Ur7Gn+A4/yQvoB8xgau6REbEmO5BVsffp96tK8VmvMNa+S2O2juy
v8If625k+XiNI6mOXtYd4jB/Ja/hN71riD+QL/H7eKmrpi9wFwf1JXQ/Dphf
WZu/VuGZvE+259wiv4u9fJE+qatM/RErsBgLM70Pv/kj3MEe+1/0P9s5Qy8=

        "]], 
       Line3DBox[{1243, 1233, 2123, 890, 3838, 2754, 1231, 2120, 1242, 2417, 
        1230, 2116, 3645, 1632, 3886, 1226, 3643, 2113, 1241, 2416, 1224, 
        3641, 2110, 1240, 2415, 1220, 2107, 1239, 2414, 3740, 1216, 2105, 889,
         3885, 888, 2101, 1238, 3739, 2413, 1211, 2098, 1237, 2412, 1207, 
        2096, 3638, 1236, 2411, 1203, 2093, 1620, 3884, 1199, 3636, 2090, 
        1235, 2410, 1197, 3634, 2087, 887, 2752, 3837, 1192, 2084, 1613, 
        2565}], Line3DBox[CompressedData["
1:eJwV0EkuhFEUhuFjpKtQmNZEohjqexKJ0lRpq2oFLIDEyMxE3/ftAKtgzgRr
sAAWYOz5B2++e773/De5f/PyammlIiKW0FEf8ZaO+MBZY8Qjik0RKbRzmw0R
W2jh/7is/t25k8uZJ7DGj9VFTDp36afkND7t7XBPztuym8s7t7mjEl/8jPkZ
BfTwF7LEXcpzXOMKvVyVvh+z5l33vcoX9HE/8hfr+jmZt1ed7HO35jvc4AFl
/b0c4PbtH2APNfoC5rlB7lB3hA2k9SfyGEPcQvK9rhanuqJ5EcPcuHdl9DmZ
xbduBJmU/2VuRTl5J0b1/9JwLnE=
        "]], 
       Line3DBox[{306, 1351, 279, 3285, 1261, 282, 3329, 1353, 307, 1354, 284,
         3331, 1356, 309, 2480, 286, 1360, 311, 1361, 3333, 288, 1363, 313, 
        1364, 290, 1366, 315, 2904, 1367, 291, 761, 293, 1369, 2905, 318, 
        1370, 295, 1372, 320, 1373, 297, 3336, 1375, 322, 1376, 299, 3338, 
        1378, 324, 2487, 3762, 301, 1382, 326, 1383, 302, 1263, 3287, 304, 
        1385, 329}], Line3DBox[CompressedData["
1:eJwV0DdSA1EQRdHGWyEJ4VJWAQGQkxJQhRAIhPcQ470324AIFsA28D5Ha+AQ
dN1+9/0/NTPthaW+xZKIWDFXyYjSdESZWbUPNkbc1kZk8T4RkeAedGv4iOvY
nokot+dTEcPOzWCFvKF7wi79L19pH9E18FX2a27T/mzfwmoc1ef5WayR++si
XnBbX4sFfkQ/h3XyDv9rdk29PMaP6gfqvau8x7/iPnboktiJB/jGH2ID9jpf
cG/+/4x8xBfNsUnJ4/yYfgHT8gn/jlnv14gT/Lh+ETPyqf4Du317kW+yT+pS
fLP9hsu5+2k/41pwSj/BL2GrfM4PyXf+fw6/uDTX45nf9gv7D15iG067t2z+
AAsaNzo=
        "]], Line3DBox[CompressedData["
1:eJwV0Ekyg1EYheFrYEaRGOgTaYheEn1X9mAJFsDMDjCm9ApBiDZBSpWNmXvu
4NQ533vuV/f+f2ZrZ3O7JYSwS78dITQ7Q9hIhPDNC8kQKtgHH6GprhDSury8
Tzkapltn1vFV+pG/7K7Jnzyrv8GKdhvyCt40N3TLcp3ndBndNb6ELdBXvFe3
KNfaQhjSX2Hz5llqyO/6OfmNJ+kSK5uL9CFX7ZXkV13a/gW2Ed9EZSpRCj/H
Z+K97c7KL/i0+Zkn6AybMk9EJtewSfmJD9o/jfu+YRwbjdz8qBuTq3zAmROs
zguRyQ/4iHwf32O3X3eM57Fs5PJd/DfytP5P30dH8bt5L6V0rbou2jN3Uw8d
OpPRVewfmP8B1+Y3Rg==
        "]], Line3DBox[CompressedData["
1:eJwVz1krxGEYhvHXiTPZz0kKJWGQZOw7Yx/7vlOc+BC+hiSJNIZIKSk5UUpy
4LNYf3NwdT/39T7Pv5nC5b2R3bQQwj4+M0PYzg5hB1toyQnhjqvMDeHLHOWi
shFNuPW2ya3jw7wmN7CKBu83XK3bK/MK964vy6QeywihXl5zS9wC3szzchE1
7gLq7CT5OW4Gr+ZpOYsp5GeFkOAmzXG8mP/c5Lud0MdT39Iv+Ga7RYigOgV/
zo/Zidj/1Z/1EX0Uw8i1d8YNmWN4Mg/IQfSj0s0pV+2+T+/Bo94te9GFCjsn
3KXs1B/MHTKhx939yHIc8+18K+7NLbINVXa+vZfhiC/mCpDO56GEL8Vh6j/y
137zgf4P2i86MQ==
        "]], Line3DBox[CompressedData["
1:eJwV0EdOXFEUhOHL3BLYSEzIM8AwZAIrIENDt5vUQoAsS0jN0PshmJyjwWTo
JtkjFgAYE70Ivjco/XWqzrnSe+WDo7F0TgjhO73mhpDKC+HsYwj9mMW0LIOF
+SGUyGqomk5lI7pjPKQXvk9+xPfiCda7+f8phD+0b36206Pb47uxTH/Af5Pv
4k964pO6Hf4Lltr5xX+Vb+EmPfIJ3W/vxnFbNiy7Nq/x/6I33HXp1s2duIFD
8lq+mD5TFa3KB6J9t8t8gbsr/kEW01/yHbiiS8kuzAv8X75dvsi34RLWuX3T
J2jWfI739lr1c+YWnI/+jyyrm+bv+Gb5FN+EJd6Yif6PPG5nnM/grblRP2Gu
/BDCD0zKJrEo+iZ3lVhBY7KE7oZvoC737zm5SIQ=
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{910, 909, 2617, 2615, 4951, 3668, 2179, 2639, 4809, 1721, 
        1729, 956, 1326, 4329, 1324, 3024, 975, 1364, 1362, 1815, 1013, 4363, 
        1399, 1397, 1849, 1046, 2924, 1426, 1884, 4586, 1073, 1451, 1449, 
        3058, 865, 1929, 1927, 4612, 1936, 1125, 2960, 1476, 1989, 1158, 1506,
         4397, 1504, 2030, 1185, 1549, 4432, 1547, 3044, 1205, 4469, 1591, 
        1589, 2097, 1237, 2573, 2571, 3745, 4946, 2428, 2719, 1647, 2601}], 
       Line3DBox[CompressedData["
1:eJwV0DsohWEcx/HH4pRrLlFMjGJzidVRDAxKHWcwnEVR5yhFFmGziJTrhJFQ
osigpNwGBoNyycAiA8Lq8w6/vs/39/8/b+/7VqUy3emsEMKYvOSEUJUXQmdB
CNV4kRvCZH4I93wC33RL2MOX8Qmv7TziIi8rCeHBecF5RZrtJ3kLdtmrMf91
3tL94K2uFft4HBM85t4uz8ZTSej7eS+mzIt1e7wIb2RAn+GDEc0rdQe8Ap9l
RD/MR3HMPB8LJU++eQmOS6k88C93Pux/4rfM6qf4HM6b1+mOeC3GcF0/jRu4
Zt6oP+YNWI7b+hncwU3zev+gw+xE146vusPo2fwI93lSfxZ9MzbhuX4VL/DY
/Cr673Ip6WjHM+PRu0ib/Mm7vV8cMm/FDN7hP4RPRpo=
        "]], 
       Line3DBox[{8, 755, 4122, 23, 758, 4125, 38, 760, 4127, 53, 761, 68, 
        3855, 762, 83, 3860, 763, 98, 3869, 770, 113, 779, 4128, 128, 780, 
        4129, 143, 781, 4130, 158, 782, 4131, 173, 3880, 783, 188, 3885, 786, 
        203, 3894, 790, 218}], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/GP1f1YRJRFGU+Z5A4jUQY/NvlRBkwoXfwFdP4DMRHKQgqd
wXLEZDi5k0Hn4pLZcMrJw/Dq+Xy/3p/P99v32za7NLZYF0JYlkp9CK/REMqS
jISwGQshhRn80O3hUTyEfl0JB7CnIYQD/a7cm3+dO+SD/NiZhP0QP9fV7PI8
yi9kjJ86M44RcwGb8E4m+ZndFBbMjfLEH7Eoczwt8/JmfsZm72rn77Jqzrq/
hnHv/cIWXMdv+w2sYVUm3Hsx//AMbv1/u8Tcj0qJp+zifJtfYac7O7yVJ+3K
fBT3Mafr+v8vPMFH9BU+gx3mY36LJ9iL0/pPvoB95ix/wEvM44q+2/OGeUFy
+ipeYxHT9jf8D4vvRcY=
        "]], 
       Line3DBox[{926, 925, 1697, 1695, 4921, 3054, 832, 1759, 4546, 1756, 
        1763, 961, 1346, 4351, 1344, 3027, 998, 1383, 1381, 1830, 1031, 4375, 
        1417, 1415, 1867, 1064, 1436, 1435, 1904, 4593, 1078, 1464, 849, 3061,
         877, 1965, 1963, 4626, 1968, 1143, 1486, 1485, 2010, 1176, 1524, 
        4413, 1522, 2045, 1190, 1572, 4456, 1570, 3047, 1228, 4481, 1609, 
        1607, 2117, 1242, 1634, 1633, 3065, 4892, 893, 2152, 1662, 2608}], 
       Line3DBox[CompressedData["
1:eJwVzzsvA1AUB/BTgzeV2PSRWLComFFGE0lNVotBwsbEFxCzr+DxBdBdwtzE
YxPRajuoeISS8uvwy//ce869N3d0bauwmYiIdSq9Ed+DEU1K/RFjw8hxatRp
9EUcD0Sk9I7kg9kTeUpV/1yeUTJ3IYvc2A/5Jx/NX6nzzl/Le3t38paK3hOr
emW5QY0qdcpmFvQ6k2bVabJ0WWfkpzf3mWi/xa4zS+Zb6lf1Cw32eGdZ701+
kGSInNmMnNQ7kOHubv7UWWb1f+WcnGHa3Hz7Pzx7O6e3aG9KFuytcKjucEcP
CfLWI/7dkin55VyRJmnrDD/qHWe3uVT/AxH6P+s=
        "]], Line3DBox[CompressedData["
1:eJwVzz0vw3EUxfFbaqBKmjZBpKlGEOKhu0HEasBLqI7ChJpsZiNeg8Fo0MEk
MSOIWJA0ohERMXj8dPjm3nPOPb/8/8Xy2tJqIiIqyKUiJnHeGXHQFbGPxWxE
mjeO1u6IPd6n/cjNj/20IyJFL7RH7NIlzKUjiuYAkrJRFOw5b03JSviia7ot
sgndHTqDrJsxecIeTeTDzff52/QGqtjEr/4xZmXrdF1vCCMYxqdsULfNd1/Y
e3l3ZpK+tc/ofdBFNyv6ZVQwz18232UF2Y1/vUZN5wRv/Dz/ineJBl7wzO/n
H7rJeOOB94RH1GV9sjz/z3zFNO75PeY3GtjSreLM/g+AXjUs
        "]], Line3DBox[CompressedData["
1:eJwV0D0sg1EUxvHrIwaUCFZB2JD4GEkRLAYh2k2EASWpweYrsRm0PnZl00RC
IsFYg0XCbuhg14XN5neHk/9znuec+773dq1uL2SrQgg7qr0hhM1ECFsqoyaa
QijxLnFcNdOr/Fd6Bd/wgTeCz40hXOATDuMjps0U5TOtIfTyUvo6/TT26Kcw
LSvRBf61nWP6CtuwW1agh8zl5bW8vP4Ic1iDJ5iTHaoDepe3j5N2K/b26G/c
l7fQf/X2sFp18jf5ZUyY3+Bl7a/jmsrIltVH/M/oxTvgu34RmzAlH7X7Et+L
txTfCpPx/3iz8nusVhXf/uXf0T94azYpP9cP6Of1/Xim73BmH31Kj5mZi3en
v5xxEL8vv4l3pT9x0EwRy/G96H9zzjmx
        "]], Line3DBox[CompressedData["
1:eJwV0LsrxXEYx/GvKOWWiCTJ5YhI+CNwjoEyyK0UKYPbwGLBOZtFYXMmt4lB
CXUcshjU8QcoKZvCIFEWXmd4en/en+f7+w1P/eTC4HxOCGHZVBaG0GF6SkJ4
KArhTY7K+6bXxMpDKNW1mwyfLg4hLd94m+TXWMTbzB1P83P5Cnd4CvN5q7nl
fb6v8M9jfmS3qTvEXN5i0vyA78k7uMG3MYc3mxTfyv5bjmOCr+NfQQhNug++
xp/kSlw1FebXPqK7tM/jK/I8LvE5/LZv0F3wWb4oj2fJx/DLvk53xkf5lBzD
GR7FT/ta3Wn2bnwke1Oc4N34bl+jO+E/vMwNBniXPKbrxFdvqnXPfNi+Q5fh
STcb0u3iizdVukee4PdyxLt+3ohx3T87nz6w
        "]], 
       Line3DBox[{2441, 1252, 2724, 2439, 4947, 2833, 2582, 2585, 1220, 2398, 
        1219, 1598, 4473, 1217, 2824, 1558, 4444, 1560, 1170, 2363, 1169, 
        4404, 1514, 1137, 2336, 1136, 2965, 1103, 2310, 4733, 1102, 1947, 
        1100, 2811, 808, 1457, 1058, 4717, 2280, 1057, 2929, 1025, 2254, 1024,
         1407, 4368, 990, 2226, 989, 1372, 987, 2798, 1333, 4339, 1335, 945, 
        2193, 944, 4813, 2647, 2191, 2787, 4939, 2624, 2626, 918, 1285}], 
       Line3DBox[{232, 1279, 231, 4293, 1257, 256, 4524, 1719, 585, 1720, 259,
         4556, 1781, 607, 1782, 286, 1810, 621, 1811, 4569, 312, 1844, 635, 
        1845, 338, 1879, 649, 4084, 1880, 364, 767, 401, 1925, 4099, 666, 
        1926, 404, 1984, 688, 1985, 431, 4636, 2025, 702, 2026, 457, 4655, 
        2061, 716, 2062, 4656, 483, 2092, 730, 2093, 509, 1270, 4298, 543, 
        1643, 546}], Line3DBox[CompressedData["
1:eJwV0LkvhFEYxeGrIDOWKShQCYmE1q7XmCURDSGWiEZjGKVyZjRqVJYEQSES
Cq21kjD8AUKi1yCIwvMVJ79z3vPe+y3NM9nh+bIQQo56qkJorQ7hmbr5lZoQ
ClSkt8oQNnEkEcIJv8V32GuqC2Gb7+RHdV24Iw84/8t/06n8g+/OJfFMHtLH
MCXfYBqnnc/grTymr8MJ+REncU4/hU/yrD5HWflFXsBF/SImvNOr2ZK+BcvN
KujP8+sxb/5hnuc/o3e1X+CXnS/iV/TNdtZpTY6Zr2MBNzAeUddr70BukA9x
FY+wEXf1GX23u1PYZpbGuPmFnXb5mB83u5T75Ctcw2vsx3N9Ce/pgWrlpPsG
+T26i/5n1NnPuaeE+/I/5Ok+4w==
        "]], Line3DBox[CompressedData["
1:eJwVzj0oBHAcxvG/CXfe6gxioduYOZFJukF5K4NQTqEMhOsmI+4Gs7AplJdM
lPniWA+bgUhWm3KUzw2/vs/z/J7fv3/b7PLYUkUIIWO6oyG81ITwahL0c10I
2doQTnA8FkKO/oiE8Gnfb3/Ad9Ktdod0Fz2hm8AjPqlzwZf4Dp1L2S/95Y1q
+sqM6kRwSF7AYUy5GcE7vs/dpE4jPSN7xBQu6sziEz9nnzar/Bu/hqv2aax3
/y7L2MexUlZl/vyhCTfk3/It+gcH9LP0uvsclmQ5nd3y8BH5Hm7iPkbLtOvW
O+Xj7ptlZ/Q2nmMLHurkcUivHYcxIpvCDj7p7oKf5m/c9MhucQcL2IvX9kWc
17nHBYzJVrDBfZ4elBf107IHPOb/ARL7QPs=
        "]], Line3DBox[CompressedData["
1:eJwV0b8rxHEcx/GPwuB3hEzc4pLB4EgmTrGwnHJGvxbhLKx+/QOXw3yMlCIG
I0oG5QZJupBMBr/iD/C44dXr+Xq93t/v9e0iU4uJVFEIYYkuykOYrwxhgc7x
blUIV2UhZHmconUh5CtCmLaf2mf4Ce+2XevfcVLXJR/gcbzPo/KZ/Q0P6lrl
XdzpfUNyFjfoDt28FnpdvZzBHW5i8iYu1e25ecHtuhJ5A6dpnb51aXseD3ju
Q/6iNfmTr/Ja+w8v5ykeKXwvf+bLukbPPcpN8hNN4jmaoJw86+YBV+NbSuIa
PsYvC9l+j4vxBY3gEj7Mj3ncnsO//KiQcZvf/JP78Y6uB9/gDN6mXnufPOp7
9/0fCb6lv3O3wmO2Vd7Jn3TN1EL/fs4/qA==
        "]], Line3DBox[CompressedData["
1:eJwV0D0oxHEcx/HfKYOHu+QGMdB5KEfJWXEeRqU4RkkeyoLF4O5SNnEMZg+r
yXCYWdWx2QxKBk8hk4W8DL/en6dv/fsnZlcyy5EQwqp3VRVCY3UIuWgI3XQe
f/DXa4iHcF8ZQru+jy/okvQOduBYLIRO3OXT+k+63c07Pug+8NV9L57YjNhE
sI+/wH6cskvjJT+pT7iP0uOyEmZwwWYCH3Hapk4+xz/x87iEo+4W6Dvdok0T
Bj7iffuGGszLn+Vr9Atmsd5d1n2OfsN1m6Rui//it3EDC1iGO/qUvsvdvqxW
doCbeIjxf9oM2/TYDGKzbAjL5UWbFv6YbtVPyk9lKdkZ7uE59mDRZkZfwVd6
Mb7NTen//9EDNtf0Ld7gEf4BpN47Eg==
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJxcWnc8lu8XbmghLS0lUUkLlaTlbqAoo8iItkq7JLRQadKgQXsoRVGkZL2P
vcnKyMzeklFS/N7z1uXz+f7+uj/v43E/5z7nOus6t/S2g+t29OnVq9eGEb16
9eWvg51yF32fM4jDqnE6squ7u4nVjV3wZ2tmE9ucU9hV3PszT1F/tMdd32Cm
2lYk2VL1hetOcE4fVtCfO/Na/mX5wAaW+/XKzPUfmrjUfL2pVh1feGo7zljc
nhjBtB+nrE7e1cQGqs+1bTQs422y2vN78rV4VnDs6nTZudXc2akuhl0nenFT
9Ncfa24qZ2YHfnQvq6phbnvzSspu/eENzLNaWZtQyn7obu3s7pZi1QXXC4Nn
D+L+/m5ieZLy3+l9T+W4Lnpf+7b1Bno/Ui6hagp//83r9+XP4e+/QOVMLO0/
ZrCwFslj1vHwJskTk3p64hS+PKFFdQL5r3z1S5T9+YU3SPjpRpLf6qTVwyb+
ebfEWbfPLOzPLQ55ZFPBP++1fRMF+nnQ9VKohK+fe1JHvEk/W620EycJCXOq
+bNLSM6JEh8F+oQeoVfos1HxlUvc9cqelYmcmz6pzp9l2kb8sfR/yX0I3Tuy
MqGJeQw3kX7hGcxyNOtWhV4p4x6rBVmaz65hr93Kq4Sl3jNr948LkscVsfTb
nTYnRtazJxVnmx2dAtmzob10tR/yuMnX8+ZUujexrmm9brueCmYuIrZSb5Qi
2fmVRQXODk1MrFPLV253MLv4ayNfrlrVbUHyAjn//g5mU+zWNvny3/9y7HYR
vf8nLOkNvX/68gnnNfz9bxhGzaP9VSwOu9P+ToE5I0mesJ92p0meJq+tHSRP
5ZxIPZJ/qk/APpL//P7kUoH8pvJiB/nn3fvFcgyd1/q0xyQ6b6e6x1XSi3mm
901a9c3+zCT9zLDcqLfW7zMv/beKQM7EhX/1CVwCp8An9Ai9Qp8Ljud7PEvJ
5bA2Snhd6Y6qZYW3R22O9WzipC0Xm7z1fcP100gyVRgTwQ6n+VQqr2pib6eG
btF79YFbfct5lqV1PEsasq3ST66Kkx8/e4SJSwZ33Dhk7e5B5WzY7xYJ/65q
9sZ0XGxrchq3TumB7ULpUnZK9+Xz8oGS7F7nhXEk59/fDWz07W1C9P61xpxC
ev/4hYWu9H7ImTWPaP81a4vX0v5nxTbfov1NR9uUkzzDF2qdJXlmOWavI3kO
LXUSyL92tIcayW/f5aNH8u8cLaXxhH/OyY7TFj/nr1ML+s7pFV3LYgp0BPo5
OlJf6AhfP9VBB+VIPx+aD2zuvDuAu/U6R6BP/TRZgT7h5/B7+DtwCZwCn9Aj
9Ap9anocfLzjfCWHtUxZw/2NwUfW977t3prhpWy/TtS0/TNquTcqMaKOaqFM
WSzkutr1KO6q5UfpFkO+v6rluA9vCGdWAX8Gu6rEsd2D5N4/UmjinsyvXf85
J5xdiX3Ml6tZ1XLBqb/+LfgdwUaNk0p34b//7XRzIL0vl6VmRO/vHxsxkva/
cmi/LO2f+OviPdrfsDvZmOTJk96nTPJ05vlLkDy+uZ9fkNzdRjPu0Do8ft91
kt/RrmPpK/55z08eZU7nPdicvInO+2eP+iHSz9J6oTWkH9XdB+pIP2ku20q2
5eXz1vr/1eed1X/1ibiJOIr4CT+H38PfgUvgFPiEHqFX6FNuwPAq0T2VPevW
tH0lMy5EsJv9LHbYfkjijojO85fwamSTyxqP9/sVxzanKldmbExj3NDDyTZm
jezY6AeWo3lxzHOQ76/J136qTiqPFMj593c8G7q7LJTeP6mbmk7vS3ekWtP7
p6XXvbPh7y/6riOE9hcPqnag/btveX4mOcy0837Q+ivYqYHk+Sm8SYHk3+P3
YjvJXxfr1Ivkn2y1JWwN/7yvbtZ+o/M6fMyfS+c19dO2Jv1k2Ecw0s9YocXt
pJ9Blev3nPhRxrvI/urTT+6vPpGHkJeQjxA3EUcRP+Hn8Hv4O3AJnAKf0CP0
Cn32PuJlrK5dxmGd4GXnMe5dCTtutEVl4MEKVn/S+pzMz6/cuo+lWfWji5mV
yZOjzU3irOxT7gyS8+/vcrb91e2x9P5qCZu79P6rJQs76P3lOuMG0r75xiHn
aR12ZUMS7f8+RdiX5Ol01XYleS6JLL9P8sg6BciQ/FPlNzmQ/J3nb14l+dfe
6DA15J83+vkIZX/+eaVsfW/TeScN9BDoZ2WmiBHpZ+Xi9vuknzK9lTe8+vXm
WIe4Esl57MfqAyQn8jryPPI78hDyEvIR4ibiKOIn/Bx+D38HLoFT4BN6hF6h
z7IsyRoVmfKe9fDdsu9S8wqZcZOVam3CcPZugFi/5Xw5//4uZWtnfE6g9zSE
NLtolXoWJzaR//7GkKtzaP/R/Z7upP2LZf+IN/D3F3dKjyN5bpj6/SZ5xCQW
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
fTYgkvU6MORrm0Mlh/X3qUXGW4KDmcWPqMWvLpWznS+FyrSWV7N9+5dnL3oQ
xobtXWlt05bKDQ6rC3X/0MiFje1yXb4kkpnsPGhhkVjK5U3Ly+l3r4ZJm4Rb
D13OsdvTJ6vYKJezNYO7hAderuY8F+efXz4ljPUXufP5zJtYtv6QhYeYTBMT
lv2zI7RXFNurlDg882gpp2D2K7niSw0nNbjJzOw9j21d9un5HolYdvuCxFmr
WU2c3mRpg9yzkczjrNnQs/x9XOsTH9M+o+zMzWmfuRql+0me55nfMkme8Qqd
h0me3PtyxbTPVeGHDrTPXbkX62gfUw8NTTpvYKt3Lp33XdKjBDpvf78lY0ge
yZMzEkie07N2G5M8Xqe655Xx9dnX0bKC9Hn4duV+0qfN8SA1Ou/kqrxedN6Y
8E/H6bw+ZXnPyB4WDluSyD6vCwc7kl1qtMXX2fL1Kadp9ob02X5uuRPp8/OK
CfFkb4+TL67Tekbt80Gyu/R6zUyyU6CXUyOtGR5xu8hey/tN/EL73ltt4Ubf
mbROQ5/298666084XHPvWzLhsPdYvymEQ6djLRMJh+M1w94RDhfPtTUkHCLu
IA4h/iBOIW4hXu123aQjstWPUzoUMefUTX7dlayvNzAikgFnwB3wVnDR+ufJ
q1Xc48L3Pof2VXD9xu3t/H44iAFPwBdwpV2///14lTLWZ8biJZU6NZxB9YQ5
I4fw2JqTI2tnlZVzWPfIhbZdvp/LjIRkY5z2xnA+t40P1Co1cbmv65w0Lkay
C4NUkqKnNrInsy8+uHwkgxPVivj9ISyGzdWpO7VtZwLTHMtWCvdv4pYmXZpx
aF8kcwusTr5/v4HrEk1KGFGVxa2W28DJPIln+sb1badulTD5tLylxjeruLEG
y3JuxuezT1e7F9E+Z4SctWgfyav2s2if4AyzUXb896uEahXo/W12a6Lo/Y9u
E1VIzuDKpVYk57YhEddIzvpPian03aIxxRH03a1PhT7Qd/f0r3hKenDV6dYi
PZQe71pOepi/ITCVziVifM2ZzvUmPqKazjXi06Fu0vMeCSVP0vPrOw7fSc/K
5hvU5fn6Gppi4El6cxOuek56a9Df7zSQb8exf96qkB3ljssbkB33Kv0JIrtM
Hp/pTnbZbGD8guxSmeH7i+y7demwPmRfb5G61WTf+TNZ1s3rRTy3z8ECnHSb
+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
gSXbG9gO7Yf5DXeC2R1Z9/gAtSI2Z0e/WrvyOhZupJCleiycpd7oCGreVsod
l5wwcYFoLfs5POPC6ez3LN9vkdq7wnrOYJlmtcaLL+y2VrijXN8wJrxkc6Pe
oBIubHfv2VMc61hwaMm+5dUfmfq3iSeoPpincN9jT04bT27j8uen+HXCTOdx
b3mDv3CD7omMaZhbz9S+mZ2u8U9lQSPMs6ne2tmQ/jA1qpk3JnTSXF1+3TVv
1NEfVVtrmaqm+ovDx76yYg0tV9N+UazjasEN6ltaSg3Ek0q/86KST/Oof/k4
6ttN78mZbIZR8V0v6wZmorxwzLhBaWxBw43T7fc4xrt9zX/QrSZmKvokd/3x
YFZr23cn8Yx7Rrqk0z2Z+/fuVRDfeLLDVMDLq5YdsaF7OG89hSyIn5fzvtir
mi/PjOFn75I8GX92OpI8Y0U2r9nBt5fLvp97BfiyzblM9kL9h3oQdWCOjv9a
jq+HJ6/XtNXz9TAn7rIp6UF0eN4ummc/3VXbS2RuNa/mak0+zbXnxQWtIP1n
L1tfS/rXfvXrPOn/3PbzTCy/juvaE5nUd0cRa2seY5R1OZy5qj4rpPu7FpEJ
snSfV22l0VO6xwu7ws6wb41O7TyN7/Ws6HfaR5uTXzjn6eFur+cGs6CfR7s3
DShm9Vcqf2d61zHNkXazZpeFs+6pVwYf4/uJvb1BCfnNgaO3bchfLi1YuZj0
fDn1yTvSs6b/7TzS83ufS0YCf7jxYhzh9mhqRhnhdktY7j7yh50nP2wg/9C6
NyeJ/MLrz6X95If7Mz/U0P7D7691oP19hs811JYr4Vpfxu3QPVzHhs8Nvrlt
TBCT1xN7RedRibw4nc43O/TKdTpXdpuPJP2e4mgWRn/ffe+oEz33SvG2P1Re
z16G1gfNeP+FyzwbEhG9N5itGRjpQvHlwUj9BIo3O+K1FlKcAb6Bd+Ac98Nw
Xwz3xOAn8Bv4S+72wW/ITpuuNq0ku3ktOLaS7IX7N7iPg3s4uH+D+zi4h2Mn
pnzQsDKfZW5pMvE7Wc+FNj+4nF4bzg5em7bzGr+uexW3xGz//DouKOTFkpfT
wnvsBLvBXu3+jXoVlyo5rEbd9Y8nv/jAxMbnfezW/MrZPek71zuwlpvf8sF/
/ZdghnsSuDeB+xK494B7ELj/gHsPuAeB+w+ZZapvcrsqmHLgZtmTfyo5aaeX
jzV0Qhjmr5jHYg6L+SvmsZjDTtR7a6ivmsPqFkaeKD/VwJ2yvt1+lV9X3O44
OblXVAnXfbdu4732Wm5ZZL+4aX3DGeZYmGthnoU5FuZamGe5zrKtGidSyOzl
R7IopXpObEqsokR4OAMPDl4cfDh4cPDi4MPP/9vnzL99hv7bB3wf+D/wfuD7
wP+B9wu0KxtH5/JdOm07nUvF6UsCnSv18/CrpIfbfqMPkx7mKH1vIj2ANwGP
Av4EvAl4FPAnn8TdBXZZuEBUYJdvW9QFdpk2a+RnwkPfTwOkCQ9tQfsfEx5W
bBMW4ObHjLS1tI7o/fQJ4Qf9G/o59HHox9CfoS9DP4b+DH3Zgln7lQjP0V+s
jxGeFyQE6RCeV3y52Eb437ksegHh/+H++TaE/2DXrlMUF/x2L5hFceLtHpur
FB92ZwcZkj+KZeruIH+0Nu5+Tv7Yv9jWluqENSf/bKA6wfwy7wbVCbjHiXud
uM+JvIU8hvyFe2+4B4f7b6qNERVCx+pYi0ObgZ1GATfvlIvaxZdpTHpj1fcd
0fWccWv/E22yuZzcwzc/1x9NZvA3+B/8ztCucZ8YPy+YDMwZ1ds+kTMyeLp3
owrXc38I94lwj0j20uXRSXsqOaz5F5bM8LaI6LknhHtDuC9ksn3Iu76Lqtjg
sTrec9pLuXKHRbe8jbLZJ9NfJmPvNjIx9TfX6yekcYP1pa8FdUX23GPAvQbc
ZzjnljxivH8NU/4p73b7QAn3xVfaz80sk03xlPF2bq3ntB3Cv70+lsN5J1iq
yXkl9cx9MQfG/Ffspqr67wE1nMzlFmGlWV851wOPtsxeksW27NrVJzejjk2T
+yyStjifW67pWdFbNK1nboQ5EuZHZv/en/vv/VX/3v8WrmNC+79WYW1z+ftv
sBZdSfuDHwdfDp78jKaMJ8n/dLFFN8m/6kDgepK/bmvndDrv+ZgBp+i8XcW5
V+m84BPBL4JXdLMW20D6nPd9iUCfsUn3rpI+pybFWJH+N3a2lJL+//z4lUP6
35X+bDbZb9+vbV2J/PWeV8BosuPaPXtSDpY1cGeW2HqW+mdy15Uz0rvmxfXw
F+AzwGMo79CbQ7iaPaA8iHA169z6AMIVeArwFuAr2uf2KSR8yriYxBE+B5R/
MDLk4zNu1Z4h/fh4PrlQvOgUH88rqpw6L/DxLHS+2TvUuZ2Xa+gsqPtSHxz3
oHovzHVVE9U3Lj/qZ1O98/hIplQt319w7xn3oHH/GXUe6j7Ue7gninujuC/6
eEP29Dq5ElZtwrvvIl/H+tYPiq5xj2J322zO2nuWcluOWjQudqth0jl/7Jcc
iWQO/tdHj5es5c55Kdz3n1vKxiiIDexWDe65J4d7c7gvh3t4uJeH+3i4D4f7
cbgXpxj98omEbDbbvaIpoMqpgW2bsPiSkXYMG+Xprvp6ZDWrYwUvNUPL2dZp
Y0YuqAzruceDez24z6MdPTZh+op8tvFp1mQxu3pWIRtWmHA5mj0KWnXdXbyM
G3g/3E12VQ0L6PvYUWVhZM+9B9yDwP2HNbsPOXR9yOO851fY+vPtcmBsjYF/
YjQr2TPWQDK6hMnZmpo1ZPD7Dm7cixzDqJ65KeaomJ+6TxY3pPcPesia0vvP
Xfd50vsbX/72ov139ms6SPvb9l6qQ/tjPoR5EeZE/rq1F0j+nb4FD0h+2T1K
l0j+tgOS/Wfwz6tv/XEUnXfzzY4MOi/4dPDr4NXzvr8Q6DPCI1mgT3nVj+Kk
T7XC10qk/+hNgfGk/wZ5ezfSv0+W20nPWxWcSKBnfRWrYp923G6YFBXew8eB
nwMvB74P/B94P/Bu4OHAvwWPPbCW8FZyyX/YEj7eSgwm3yW83R85+Ajhs5+G
9BHCZ1Rugifh857XBQ/imV+LBX2mvueRwktl6ndeaKoaEv4Dyw7OoD5DfHh0
IOEf9/tx3x/3/HEfGvejcS86qaA1Iz77K/tqrdn/ap9a7uxJcVGVpzE9dTnq
dNTnfXRHR6rVNbLHOnliKqkp3Iu8uqEqGqEM9zJxTxP3M3FvDPfIcH9s8NzK
zsp9RWy8nM8kuet1nOfH3hPr62MZ7tPgfg3u1TjUiDTc5/e/csdCPGTdazhu
plFmoGYMw3wd83bM2RePedRI75cmPXtK7/fZfjCD3sccEXNFzBNltjcvruLL
M/ic7XCSp1jBfxjJg/kK5i2Ys4D3BA8K/lPEdOn4/3F15VE5fd87hQZCylAy
i4yJjOFkqJCIEDKTIUpEhchQMlSKkEJKRaXSPHcbFWnSrKJ5rpeQuX7vfj89
/db6/tVardvp3nP22Wfv53n2Pm/48zm8WLbInj+fHw4K1S7gz+eWh19LiUeb
NLtMkI+ODL4kyEPzko8K5vnSusuraJ71Ks9V0jzLnq+74/y5nRV6rd1UZZPF
HSiT9nfpE9dbd4E6DNRfII9FXot8Fnp36N+he8/WHbS5hNfK9LSULXU6CtiY
z2YBObfy2CjeIavH5W1cnPEHKWnPPPZ4i9n+WzezWItLn1l3D/O46pRNRhOL
k9kro5UJuo5cr34Xel7oeKd8Ma8b97iJzSyqUPM8UsF22AYWnfYsYTb3xyS8
leOx6WPG8SwGpjPHwXqz3NanMOgIoSuEnrDu5q9rAQ9bWJj0bj8uv4Sd8dt6
8FdmAdtwJevp1K42zmr1yS+z5fKYXt4/rTqfd2yikqXSFZkW7srL9+YPJn5g
A0QPjV1XV8gUzu1KHajcxibK729lsgUs7rJ455/CXAYdBnQZ0GNMTqsQPG8+
6mUzPR/l5vqNns8X2b2Mxr/5xlmXxr+yRqIPjf/w35Qn9D7H1Xb8pffp83XV
bnqfX4OsXOn9n/ruMKf3T9d0W0TvL6ekIJiHIcfftdM8RHwdIpiHAPt+ITRv
ky2U/Wje6r43zjrDnze7jKu3TTzaOW6saeArg3ds4JdKW7s36b14PfB74Pbb
W+6doHVcGp6rQ+toF/wlk9bxV4uVKa37lI/DhtO6xzS169G6rxBfcoHsJ79u
qpA/33521A04RfYDHAS4CPCQRWr775N9yuXLjCb7DCv85Ez22Vdpxn0a53qq
SBjZofFB/2E0Tvi1U4JxEo9+vkLjXHzo/4nGKf3ikEL+ZMDfmH8L+P5ER+Jo
xwK+P0H9D+qBUAeE+grUW6DOYoJjfBb5sZ1myhLkx5YrJPUjPwYcAbgC8ATo
raG/hu4a+lHoSaEjfZsZ30H+6uzX25PJP+QuGCVL/gG6OujsoK8rjF3eSP5H
cvrZ5+R/tufkZpH/gZ4G+hroahybC5ro+fQL+33oebd+Te/oeegJoC+ArqD4
T8Zc8lendPSH0fsMC8qUoPcBzwreFXwr+AzwG+A19g4SH0H+yruozwfyVzGS
ARXkr6bUTJYmfd2NFmEB7mUv8x/epRofK0vzmfI7bgfN57DZJo00n8CzgG8B
17q6Q/Uq5U3/thU+7+TnTcr9RllT3oS6LNRpoT4LeBnwM+BmqJNB3QzqZbLE
542lc/PGMC0vOjevafLC6dx0X3vHnM5Z0Rq3HxTXRX9ceJrOWeBEwI2AFwEn
Am4EvChpxb1BFAdWman7Uhy4nafa3cWPA6HLh04f+nzo/lEHAP0/9PfQ40OH
vyRK1oHikNhHp6IpDjlpedyM4pCPy/urUNwy0+JEOMUtVXt/ilLcAl0ydMrQ
J8ftqQ6mOFBjwozpFBctyFv2juKivryD1hRHrTi1yoPiqO+VrhaCOLBHxwld
J/ScWt7Xj1GcNvqG/kWK02Sa5VdSnNakN1WT4jrNg0MNBHGg84yHFNdB1wWd
F/Rdoulb19DzprzEA/T829WLXOj5hf47nGl84423ztD4emrJS2h86F2gf4Hu
ZZlm03l6/7Ml5s/p/edsk75A7/9ziQ2PvjfhbK08fe/euV+T6HuhD4BeADqB
1v2zBPOpqbtCMJ/2qyMF8+mcN3o8zf/3yMVZNP+FdkHWNP+utm9NKA6M2tXv
J8WBG2SP11IcCP4PfCB4QPCL4BvBM4LnA+8Hvs9jrbQ62eeG22qjKA6UO9di
L4gDl/86RPZcoPfzHNnzgy2TXMieJxaGC/bXheY5OrS/7C+GCfgLz5yEFrLn
S93em8ier08X2k/2vE7UtIp04zUx/+HTRVb/4dKPh1quof1lYn5VhfZXeEal
L+2vf2eOX6Z96vb0XSLt090/Rz+ifWo5aL+cAK+/Mm7YRvFKLkz2xAnCM1EP
ifpI1EUCpwZuDbwa9Wyob0NdG+rZUN+Gujbxl6ZxhIeU7WB9rfj5o3iIzXTC
Q5682JZP+eaa0Dtynfx8M9PLvJTwEOC5wHeB67rEz3Eg/LYkWd+C8NtsA5U2
wm+BTwGvAk6F/Bn5NPJo1Nug/gZ1N6ifQT0N6mhQP4N6GtTRrLUZKcjfizJS
xOby8/dt00/soPxdUXGOFuX7CUs8RNr4+b7c8W82lO+j3gD1B6g7QL0B6g9Q
dxCb7vZpVEgTOx207xvhDNe3Zt8gnOFYAu8W4RIPHDvsA84Wc/mPXBUJl4Bu
Gzpu6Leh24aOG/ptVcOtgwgPcV8x4AjhLZJrFqsQHmK0S7y8+H0Le9bHK5zw
Ezd7mxzCT6DvhN4TOk/oO6H3hM7zTuvxChpH6opRMI3zU1Eii8axfHBoAv1f
6S9bN9H/vbDxuRz9X+jhoI+DLg56OOjjoIvbsMrvOs1D8sQDD2keJt+9vZDm
4XXB8V80bw9uiBXRvHl0ph+meYOuCDoj6IugK4LOCPqiLys0BOtY1aQkWMeC
WmPBOrZsn7CI1n2f9teltO59beXcaN2NlC6NJDvDz5q1oSJkb9J3b40j++R7
NYF9et5d6Un2CZ0BdAfQG0A3AB0B9APQDUBHAP3ARYdh8bSPapYlHqF9tO/P
+IWE2+jYdTXQvgt+/9OGcMgFj55UE24Dfhd8L3jeswXxb2m/vzMfUUb7vWZ8
0G/a74vUmCLtR6v6RYG0HzX9NzrTfuRFnVMn/qjU0OQU8Ufx/o7xxB+BrwJ/
Bd4K9auoZ0Ud6z9xtxuE676pqdxEuO5xWXdXwnUn7FQ/TTjwzC41XcKBW5Ie
aREODNwZODTw5xDfKcdqdRq5k4/0t3jereUaXeYpnjKJYqhzQ90b6t2AiwEn
Az4G3gg8Evgj1Lmh7g31bm/OdscRfr5Gr34k4ed3hscGE34OPBr4NHBp1AWh
Tgj1QZ/8lhsTnq8YfdqM8Pyd97aJ3eafL+NKJswl/H+P1MbNhP/PnnyigPB/
1FGgrgL1FNpns4TlB1SwnElmC4h3ME+4oUa8A3TS0E1DL7285/n3Pc+f7Xke
8T3ifcT50JVCZwp96cuvT6fTe54ZUL2N3vPNDoVies9/D8+9oO8aeWfeMfou
nzmrhem7oMODLg96vDS/bfE0n9qldwTzubdVTzCf2D/YT9hH7uHGpj+1azjp
pMTvD5c1cXJWJ8qj/8Qz6Gmgr4GuRk+h5T/eq+en/9VgT7IfnMc4n3EuQ08D
fQ10NVfLdVeQfS5scDMh+1RZdW4n2ecC8/ND9fj2fLhuyByyZ73kGFuy5+t6
8pM//2lMmPnKW8D33rUb84l43rqitG20X4wasw7SfpkXvegF7Zd7O44rEW/4
JUv9KPGGmYM2nCDeEH0H0IcA/QfA+4IHBv+rHv/9NfG571Y2Sxb4tbDO+vhB
xOeCBwUvCj5Ul+NKjl8pZ/0uiK7av6mVVYoOfWm2JokV1s3pTvSt5OrkMo+E
9GlhQ6/qKX8/n8j6DjwSfvpMHfd1q8vcpHsN7FS/Feu0ncJ760hRV4p6Uugt
oL+A7kJtKs9Trr6aHW8dK/X1eRP70U9+noJZJDPNydj6YUo+c2etg4WV2tkD
1UlL9x9PZua7988ftr6ebT1vsTM9sJ59WTxd3+tVbK/eAvoL6C6SfRetEH1b
zJyspRr77W5j8daWffJbk9ie0EyNUNNiJuHwteqTcxvbUDXCR14ylh2YabVd
26+CnZ+/0CZZtJV9F580p3lUUm98hngNcVrXdKNvpfz3tJ04ZSy9p5HmHw16
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
Dzb/YQHpOnRy867Rvhj45FAW7QuNdf4raV9Ahw1dNvTYAaHGG8WTeExePWrs
O08/Tv+i0cs1CXHssU3gYdqnmetLmmmfusWdcKF92rZO3572qZOxyTbap5vV
FIxon2ptK3f8xt//A/tcqCTdn8nLXzp3+X4AOgnoJqCXgK4COgvoK8Bng98G
r32ne3Yw+Z15Yfv9yA+lP9snQ/4HPDd4b/DdJgvmHKe4dsGfCjOKc7U3Nn+h
+BZ8Hvg98Hrg/8AHggc8pD62hfJYzRnDVCmvPe5aOeE5P58FnwF+A7wG+Azw
G+A1Xg+/uLMto5CxlvyzhLM+GGzttsU1pxefBV4LnPZmYdIyev7a0X5W9Lz0
wuke9DzycOTlyMeRhyMvRz7+Nd34Ar3/kLRJWvT+H7Y9mU7vj3wA+QHyguvq
Lrto3n4vf3uD5u3g5qv99fnzhvgG8Q7iHMQxiGsQzyCOQVyDeAbnDc4fnDs4
b3D+4Nw5kKIRyuPb1eCZqR1kV4s3te4gu0IdF+q6UM8Fe4X9wm5hr7Bf2G2L
fPVpFd2WhPib337ZVbYztTd1+dSXEjpv6L6h9xaSLzKgvpS3uguErWpbmOKr
CnF2NpGhryX6XKK/JfSv0MNCBxuXOcqu+CiPmzsu3716Xk3CE+uxDTMNMnp1
GNBlQI8BXhk8M/hl8GTgzcCXAccHrg88H7gMcBrgM8gDkRciH8S5jnMe5/vG
7/rryW9YHf6nnsv3G8Zbn9wmvwG9O/Tv0L3ryI23ZidrOE23S5svqzWxnwWn
OLsRkb06Wuhqoae9aPfq3SP+eV8S9Fiezv/BDmlX6Nx3M5kdS/5wm/2cCtKP
nTYXekj+cL3JIYE+rVu/JJf0aXprLOLJ384+NsRQenAVY899zknVN7Ppwrci
JB9G9epOoEOB/iQgafETykulF/QfSHnqyyLpVMpPda5s86FzweTELlXS6fmc
tiu9xj8Xnqjv9NV69ZGZa/Yb4/ShhTUWH5/wwTaOLanYwIsMKOceH5wg9Ni0
lfkfeFt44kMk07l8RU3WsoyT+XTzxfKIVuZx5p7ujeV8v+fufyTsRSInda7j
c5oNj10bvOHP5fw4JrLLdwCda5VFPtLv+Ofamn/Mgc61mX0Vl4hvyOOsmiM8
g9348zHrtLHpv9hevhP8J3jPQucRXrnvUpj0p6qrYkd57MSx6JpF0XGspX3R
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
9ax1cLendfQNkoql9TtS8+EKreegW8d/0Truch46n+xAusJBYBdrGp1fkj2U
PzRxonFyxA4k0DiDv6rb0TiPe8Yx7BlnSM84vsfSfOh9jFpZOr1PxrAHb+h9
fhyOaH1jX8/ULZf2f8v/qTpZTafZPYyNE+nvTXqnw688V5DeKdZghQbpnfps
biwnXVy98Nu/pItzrD6+k3RxSs116qTr2KQ41IJ0HesDhVJJ12GR1iBG+p+r
BXrzSf/jcULFl/Q/f5NOOxlZN7CyWw6G12/Xse3yXWuORIYya25wAelXTVW3
vyL96kM7BQPSr147nOp8bRiPmc2ZfTrOIpM7I7L3svHgGOavM/L+R38e+xDy
sMvQP4prV54sZSMay8qUIgU6WFUP/Uga5/g8P4EOdojxOsE4MhtGn6dxVoh1
2NI4i4sOlo7jj3M+5sp30fQoLjHunPJrhVim0Lj9SVt7M5ucILNo+cAqppjx
cMYd5wh27JXaI/r9jIL1S+j3h759mk2/77Q56FbTzvfv+Z8tvslmcyZb742S
4PH3dXK+K/3e9HLGJfp96gC9CfT7ecfv+WYat7MKzeNffge9Z1Mm71ds+RnN
zBqKHM2PtTPbDQserU55z6bfu6TK8e089oOL6XKXOjZbU+LpZcsG9jVlmFzq
q1Dms3hGVsmRPHb5YVaVwtN2lv86Ub1/QDRbLelUczuwmis0vB7+pqiJTdkR
8DvMN5yNHq7t6JXUyrJObR5UKdeZkJLJFV6RLmfTiv+lKLolMaPIR2e+8M/t
7KCtCoFGMeyqa/R0N5P3nIq2/Jaqs+3M20JG4otdNFtxoe6+7O1P7Meh44u/
B7WwNlPPpYfnRzLFnnudb/fc8zy1537nr+L358v58ziTrG9S4z6XJ3x55tW9
aV8y8+zb8aTtDf8cF+H9ezimOOHMooUJBrvimeF2vTH2aTy2We3i5xA/X65i
r2e/WyGxbFlG4QGhha0s+8OVR6P2vuFazGd8H7i/jC1Ms7mntKWRjRARn3fZ
pZbrzIgtnMMiWNy9vgFGAQXM/ZX6gA7hdk60oEbs5LxE9iX0az/ZsDpu3Lil
WlHaDVyx+yuJf9Oj2e9jpnI8s9csutRcSXchj7sf4bbzenkiy340Li81tIgr
rXmz96hPG1evy1MwF0lkpy79OOKfX822nxlz2NWriUuY/W1FNf89JVVs5p/a
/o67vG1TXERrO9dPRXNpSGgiWyT0zKg+v4U97Pjd/7PwJ3b21oAz6mpR7LWQ
r+emlR+YlH3ZnqBnrUxo068WA4PX7GTS08oQRx67dqDEVTib43wHaPTfah3L
hvaXj3zZ3sRELVOUT+mXcwb9j55Pul7CX69x/8zMeCxg3dR66cZk9rJyaO4h
o1g2rUFr0HORJrbhZd00nymVzFnn855LJ4qZ/Ehtd5r/ZZMtPA12tS3772c8
W1Nn23+txkcms+DHc0tl+Z6frczbQWIBraOd5ZQvm/Z1LPvvZzLrmrnrp8Gd
JjbE8fqTN0uke37WsPP1f3c/DWrlZt154F62cyD772c5e9K+cFqgBY9N1vhw
XGv6j2X//UxnRtryx6bcaeHa/WojVi8bwv77Wckk+v/pou/Sm74wjL6rzTI6
j77r2Z5mefoupW5Okr7ryNrak/RdG1zDamjeEj+3FPThz9u0i7LiNG/zHHiF
NG8riz09TvLn7fEgP3eat6ED75nTuuTkfajm8ddlsEfmBVqX+8m+HK3L7mUl
erQu1jmVoof465JxevZtsrcrX58sIXszHfk4h+wt/36YF9nbzX5ikmRvkebK
3SZ8e8uKuNQ1km9vVQ6bNpG9pYWIC5O9TftiJ0n2NnDX4dlkb7clZTaRvd3y
+ppK9mara3SA7E1hbJ482dvUUX32kb3dDpxqRPZm0k91AdlbbF7rJLK3GqHA
eLK382ZNc8je5g+4P572kVpD46dA/j5aN9tSjPZRdFO8He2jVZ8z00bw99EZ
mYWzJfn7SH7dxR+24+rZD6H+v0P/1TNfTfuW0xqhrCR/eS75mfw+qwV+5lr4
uHXkZ/rYVdWTnzEsGB5KfkZsw9ou8jPSo0LTyZ/Imx8U+BM5NdUZ5E9U19go
kT9JnHZ6M/mTHcsODCF/MkB2yWPyJ8IHHBaSP5FZv24F+RP7/7k306Hn3kwH
tfTXGwfx7UdysfSaEU0JtXUbJPzLs5nOwzEC+/ycEb64sboiIaiz6TPZp7Z3
4y3yew/O7FWxzO9MkNUKbyC/5zvqy22r2/W9P0dv+dfI8wtlmZETb2iszmWG
18dt4aXw87UAq4b+b2OYvPTNfFUTHqtQeKP2+3YK2x7+uPvVnlhmYVNvV/2w
hdl0td/Qtc1mdkX13K3b5az04IVR3JlGtvDn/uCCM7XcZq1pQmfXhbObYleN
Op+8ZztypbPD9du5Fp8/hTmvOHZrcZzu5tdtrCD93ANv2yL2Z4iViVGfGHaz
TcZ5SWQ1+3Zv+RqFhka2XGhL8RmNLPazbfSqoyE89uhD3o48LpwJq4hoyTyO
ZWGyM4uLIltZ8uB81dtBd5lrR2GSv0o5czq8cIAox2NHgg9trTd5xW1zOHx3
vm8s85vbqDE/u5VFlRQ+WRjixV7PGnzjb2IZO1X22CnFhce2rjj8vSsqnjO/
qjKu0DaWPZ9mf9DevoUV6h/Suv4tl3O9FTpHO6OMTXw/dPvr7XW9Py+58/Nb
5UK2funDX6132pmlyYA1TYF53OrB98eOd4thU6sU0mNH1bHKP0ESn8zquNfx
Jt8UQguZh9TNPO9dxSz8R+zB4q1trDXwb/jUgFTmmq2e53m0mc15MNDZsbCK
23jhnbrnkEjWsk2rdPnnYlYks0v/jlYbZ+t26YzW32R2WlVjWGAnP97oc36G
lnAVZ2zo3qa+pZR1Ocf6jHpSz3R0jUL8L9WzKfGVylOjQlmAxq+S3QdyWfHa
D5kNXDtr6VLvetUUw+pl3frnL+X7yZR+v+cUpbOoDSIqbEkc0261VD82sJn5
DeU59ZcqZSo7wxdZm5axHZlPztP9qRG1S2TG6jWwizdXzqX7Cn08x329MriZ
43avWiWqWs32/bJu1uHH58sc5QV2q7hjwgubL+UJtvKKAr8qcuX8j8eskSWO
+2Zhc6GWNcoPMhaXSWQd2tlvt1nUsMT3c941zWpiEtcnvRRVjmHhL4L/0vPr
/34/Rc9Hml80pOe/ufZ3nHubx+oDjgRd9atM+JsRWC86PY2l8uwuWGdlc3uk
eBt+R7czO9/q0iiFZHbuULnAD89wKRyWffdXwoHiLZHkhy3dalvp/afLtqyj
9zdSWPOd3n/xNNOhE+vrOLGbjgqnJzYwpfqWrccGR7GYMvH5H7zqmeLaQX9O
nalnEVUbqzO/hDFx7r973T703POm1nO/m9HyNxM7JtVzF97I/VKqr2dP/7gU
TNaLYvU998m199wvJ9Zzr5x4+4ev5glN3NojdRci+H7oUuaqNdbfYtkxr7Uq
Hz80sjv2Sw7l8OPfNcsqhFXPJTKvudqhTSUNbHxX5vqEH7Wce2TmzOUvOHbH
s//FJ+NqmaawQ3OQdyNXuEL15AGRWBZ3oXteDZfDiVifqpvp3c5O3K83uhqW
zOa7RkTROLWfclfTOA+uHptM4+x2N5Cn97/5XU5oNv/93w7XraD3rxZecGKO
QzO34t9OsX+WVUy2Un/IKX7+NWS9zCaL79mcwpqdQS4R7dwvmxW3VixNZgcs
ytrouz6tareh75KtGKNL3/X3QHjyIxu+b3FalEc/nZuOLO98FcUm9txL17Xw
v3vqSnvup/utGh3tJNfG3T2iGiC+u5SreOP4UGJgIkvUeCFUws/XdFYOHbDo
XgV3u+26jAj/XHUK+5xb68BjOp3lH0ueXGIKo3wbi/l2EnJHdFfAkEJWOPZz
2MuaNu6fpt8zocQk1lU1WZt+P7L0ZST9fvHRtd70+2OvV4rQ+FUGGcI0/rkc
fwkaf+HBHeqzamq5oVmbfWbyfzpKNHjffFTCMqo3R9J7ukTejqD3jN729xm9
54Gz/d4ODONxFxtTEldNMmUGrzTODNqXxNJ77sPT6rkfT6/nXjysH9aztGcd
z5xo2rrRor73Z4CbW8wshQR2fHqnXvHuZqY0xb9q8oMq5vO0etof/jgdkjf3
rfVr4O+foFdfHao53blNU0Q+FrKx7R916fdr093j6fc3hyouoN931H3dSeOK
D5HcSD89KvuG0Pj1bzePuWX6npP5NiEqdUo7O6XV3R4Rn8Z4QbNr6T3P+d23
ofc8UKxmSe+ZlaYVoZfVwlUs32iw+fVH9nt6/qWMhQlMv+e+vZk99++V9dy7
1yd4994RQ1q4mrL6d+3+lZyq8umggU7xbEvwle+Vek3sgub+9DdDa7hyS4M/
a3mJLEA26JfktBb2fPuDCp91ldyizBIpO5lkps61z/XyK2EdQ25ILR3cxvb4
2EqZfU1lM9VXTqLf7w5OkqHfj80ukqbff8w/+ZvG7zt8QhKNH9VU+53G3+/7
TU+moYB7YFQe9uhRGycast1/gkcG0/sjpU/vWbx3QiG9Z0FKXhy9Z/2Img1S
p1u5z1tP2jUsLefE/tZHjviXwK703Oc3tOd+v4k99/rdUtaeMGUI375viVy1
nFnNqW6+2tp/aQKbeEN956/d7dz9gXU/XLa/Z99u2CyZGZLInM/sdFBLaGBz
PDYoTehTx7Vriq04bJHEmp3aM4+WfuTczn++q2zawslsHyhXWPCasaz5GbIv
2ljFou0y5vx1jUqWP5H3I4VxZbkLBlrzWKG7/MPGx37ctAmjjkybmsZGiz/R
sbhUxj4aBZRNX8v/Dsvr957ZprN9E5qX0u8fFg6opN+Hube70O9bT3m9oP97
+s3Jx/R/Da+3j6f/O6/71h16z9t3X0+j9wxzXrGM3jPBOP4NvY9iqv0geh+L
giUH6X30e+bZ5X/m+USz/yian+Il4+xofhLj/P/Q/IwIq7uzzbmBMw3bHXzh
XiV7+uPwQWf+eR23L38HzdtBm29dNG+Hox01ad6i5leE/XrJ4w6F6rpc0vfm
fsqZ6o3Zm8SWnk9VPZzexOwyfvuuk6pgmatfR67bXsIW+unOpt9fOFqQRL8X
T0jMpN+P322x23tsMyuV3GYbHVLJeUT6WC4KzGHfo0zDaXxJVZ9NNP7a3c+1
aPz2nvsRcV9iYs89ibsahwvsxD9I0ons5MuCm8/ITpYHT1lI6zLJ44UyrcuX
jimCdSnf+SyN5o3vUibQvDlYLTGieXP1C+wg+58gcreJ7L8lQEeS7H/i8sJO
suejCi5pZM/avr8F+0XI3kYw/vjppttp/HbbtTtpfMWm75dpPv1m5eTRfDZM
MNWh+RyQKP+Dxrfa8Kiaxv90bJUojd8ymAm+N0M1qi99r0H3M8F8zlF8sI3m
X+OfxKCH/PnX+LhWg+Z/bLiYDq3vX5uECFrfRTP6etL68vJuraV5sB6zx5Pm
wdWrK5jmYWpmo2B/XR2WlE/7a5qVeTztr7Ptrm7nk3ks85pM1s9BPqx80G+x
hPXxvfdBbui5H/JJz72QR/e8GEP2E622/TrZT+NM9UayH3sTqWDyS+2dYWfJ
L/0yPXaE/FLVq/obZLdLd1mrkN0WOn4U2G3c3n6pZOcT3a/fJzuvH10/lOw8
zk1Ei/yt4fHH38nfmriumkD+Fn4TfvRpj/+MqMvVoH00Le7UR9pH8g8HOdA+
Kj0SMo9+3xxyopp+7/h/dJ13WI/f/8dDyApJyAjJyJascOyV7BWyV9kje8/K
VkaEEEJlFNJ6Jw3aKg2KkvYSClm/9/P9Oc/PdX38ru9fLue6r7tzn/t+n/E6
r/N4hM09ifIa+T7O+LtJvjWc8XeXJkepftfbEzuo+oHh9bJV/cCW7tVNUM9j
i1PGoz4X1D2LUZ9KawqaoT4NZPv/lu1vLNvf/Jp6Y7RPs0lbTqJ9JvRc/xXt
U/FxVh3085nDrvqinx8c/uc1+nmL0lZuaLctT5/Yod2OffS2Rrvt2vDlLfr/
sYdbHkH/rz7AcCP6/yfSo6klvZrnpU+zY8FN1TgYnrXvcmflOFgRrGeJcfBL
mw0vMV67Wz749UI5Xju4NVaN1ykWvfKSlOPvnPLhSzD+atdJU8f4u6X/7Bbo
zx1jCnXQn2+13vfHWtmf3zVyrovydw2+NEF52ZIHldDP65/IVd2/7bRz9SKU
999rtiwV969nm14J4/gPm3/+nVCv+xSM48vrjFTVc2XUqpUdlfVMeRmyAfXc
X//cdYzvjY7trFFTOb6Pajf2PMb3ltK7mSM9nPRvcn7D+c45Oc/heMnxk+Pm
h87PIjEfq11duzvmY3Mt647DfEynWrQhxutVTXI0vijH6xsN5uVVVvYHh9rO
bYny3d/3aqE8dVpBGcrN5Pvg+6kq30uNTn4bMU/bumq8G+ZpN0L7XMY8rUjx
4QXqx3/Xe34ejXqe/eFdebNy/rb/+c1lmL8tWbDXEvO33dL3GSP9n99K//F+
Gh+qOQPzw8svbnTC/PB76+tZa5Xzw8tuE+tjHmv13dYe81jzBlUK+innsdUL
Pc41880U9z/00e/5PVecy3TzqX7MR0xvsXUd5mNTvazvYT7W6u6eR5iPnVrp
uADlF1f28ET5othW3ihv4DlFB/e/3W7lUdz/xPr2Obj/9Q3NCt4r570mi/IL
MO91Kd0wFPPe2/1vT0I9v4ba9EQ9V885+hH17LBuqgbmvfNtMxtg3lv8YXoo
5r2zFw9vj/l/54B0jfXK+f/O4lnZmP8/qjUn+dPRV+LFzBnf2r8oEiGJBYm9
uwSJSiV3wlG+t09wBcqjui1JRvla6ftsK/2fhtL76fxnaGesO27PK6+FdYf9
HZdFWHeMKzvV8pJyHXRep+pIrINWzHKzwTooZePR41gHrbRqu8/TOCNg1fHS
UqyDjB/tCME6yLlS4WisgxKfuFR+olwHtdVSGOD+Q8M/aeH+4cJtBe6/6vwL
zX3KddCsNaebYh30pK5nk4nKdZD7pPOqOOflmu8mIv6gsbm9Ks65YsBHVZzT
ffKCbnffJQXseXZLFee8U2+mKv42e6RJxpcWSQFpB+qq4m86kse3V/L5tkou
3zjzpN1vviaIBeaRUUm5ReL1BvOdPW8/FR3Mbbei3KJbRjTKi8t+qsoHBkUs
O7epRBR5f2qYc8xTMW/b9cfVmoaI/gdvqn9WtvPG9snFaOenKaW/0M4HKrp/
QvsPGK77CeWLazZQ66Msj3pvn27gUqJYNuiQ1kite4qcGl3TwqY/FV7NFQsR
j3rZNNNKFf/cGToC8agLgfdyEb9KPz57NuJXWjM26SN+lVd/mUC8y7/Gq86I
d+mfSJyFeNezYQN+IT42oo/xZMTHnIePbYD42PjOZ/RWuSeIrs8yvpZWLlY4
Wz38jXja/owNRxF/y5+wcCDibzO0jNMRf+uxe/+f6S1yheLrK8231z6I1Nhz
gX/0A8WVtkMc5yrf1/4ZCuPwvu/F4+eZwybtUa67TT47Ov8pFu4BFxRl1Z4r
PFO7tH70Ilg4daxbr/GkEsWm2psqFSU+Uwxeen5FT8OnImaqV1bvkGKRlWZi
P2ZdpFhvOOFO66vBouaL/jUfdShRvGmlV9b7cJg40vSL2vMGyus9/fNwvf3t
Taa4vt7Cj+64vvaRaT0wX7LatTQJ86UNUVtvYb40c6d2W5QPnVj2UTWPcnkf
gPJmv3Xq4P7LFzs9xv2bOm+pjPsbuze6gvoXrvBph/prdZjUDvWf4J+njfqr
H3q2v1BZ/2Mzq69G/Yuyn2vOULaP2sCdP9OU7WNbNyMc7RPZr+ENtI/Pi7r6
aJ/a6u0no306RFSdjfcbnRy4Bu93zFkjE7zfw+/qpOL9rt2kPRfvN2LJWV28
3yRX3654v436feiC97vAfNpEvN9G08PL8H5tHo2ZifebaXVJFW9/876LDt7v
7ZhX3/F+H8yL/4L3625RcBDv92jj3iPwfnsuq/0a73fGkJlr8D2XxrWpyFR+
z7v7KnzxPU81dM3C92nVKOzQMOX3OazY7R2+zw/6G+/hd1HXWisYv4uHc/yu
4XehXiX7Jsp9re1CUJ6gfDqUd/nTYPnR7nkiQaRcDdufKdSPaaeM0XwsEpzr
d05Z9lLcWzE5AfHPZq1690P8s/qigpwTO5Xz3mCTmwtaZIoqdg2qJk57LHpP
nZ6O8pz+Te+jPPrH8PooT92c3AFx7zZuNa0R9/7n3zBhbLvSGnHyyToxwxAn
/+ffVDH04I6qS07liZH+DY8irv7Pv5kiystG1c+MaKP/B3H4f/4NEmE+J5+b
jngrBu1r2xVx+3/+LRTjH2er+h81484BiPP/86+/qLk89CXqWRFgGIJ6Pj+U
XvJKWc/uodrhKA/e0y0G5cffjv+J8tP3tnVDO8QbPo1HOyyxeTEI7bB0ssNK
7E+dCl97HftTB2bm6mN/yup98Ba0Z/U1w4+jPc1SllWgPaeNNC+sZZEr0joF
r/C0/yB+2zW/dbLLQ7Fry0Nz9PPjAh9VQz/v6Fx2Fv38Jlk+QZbby3LTaa5f
kwcXiqE7LPPTFqWJeu9//zh+31tEXWk6AeuOx5npl7HuGJ5ushzrjghZ7ivL
B8vyrD5tVfPzPA+1MMzP1146rFqPxB97eURjbYli2MBOF2osDVSMtEkJVx/y
VFQsn9z+aUShuHwn9pHXluvC8WaqY6xy/t85x0C1XlC/XRyJ9UKzG81V64VG
p3ULBnUqEbl/RlUZXvxMMW7F80XnPwWLFnJdtlSuy27IddlquQ8S9C5TtQ9S
KPdBEjTPrEXc7MyJxG2ImzXS7R+EuNlzWX5WlmvK8sOx5/Lxd+2P26v+ruVQ
+zX4ux1fZK9E/PZMkcloxG+77C/WRPz2q13lbniuhON7SjyVz3W0yHI7nmvE
mrn/tEONxU5oB4coj0S0Q/bPDw+Gf8kSoafWZnzWyFKc3BG72uxLvNCT6740
ue67KNd9CbI9O8r2HCXb84isp/Vf9ex6q+0q1PPD4P0jUc+N63+p6jnl51tV
PYsjDX6j/T+Ps7dGPZsF6y/G9W3a3lRd/2rfTVVcOif8qup9fbGtkv1Qef1w
43wHXN9Evpdw+V4myPfyv9p/5Y1Lqvo/s7nmgPpvHv1G1Q46e/RfYF/AaUT+
6B/Hn4nkycbV7s/1FXm2qWn4PvWu/DJ7q/w+m7S8/QXf5xCdNNV+A/9d8HXz
F+w7nPbxKMfvwrBbj3n4Xew5WOKP38VyGU++IePJR2U8+fXP9dUdDyj7/6iG
5eUDYsWYEa21ku2DxTbFP/Mc710jvBHv9Qj8Z54zq2dZqlXtfFEWsvqZRv0U
Ub+7f8i+9W/EdNdhT/M+pYrGtfcsc/pRIGxa6sa7rgoVMfcuJuP6xuYzFLj+
zM4vKbh+7FkrP1z/JzbQEteXLOutuv52uxRVfVy/J6nqkzFudjXUJ06978Al
R7PFxohtE/Dv5CMmgw0SvcT0kM1W6Dd+/5zmin5j6KXKrdBv/An4Jz6cJuPD
/WR8OOjIRTPMm/mvyxXf1gHK+XO8/P9d+e8DWV4u48bpMm6sI+PG4x4mbsA8
1iOrqRrmsePSh1dFPHan/oJnF3EOOXRK9qlDynoPyih17/lUbAsye1jZvlhx
v/Fwiyl5sQrjupNq/ngVKEoGbh/T5fhbsV+rQaXIHQVic/OtFu8cwsS1PZV9
3MtzxMfNWxKw7+AfHrIP+w5XJ8ZNyL33RlwqOLf62dRCxZLt5TvUPENEi1cr
+2Iefsjv+1zMw7sNj/uNefjZW0MMtb8ViyFnvl+6cvK5GN+yp77Tm2DR0KJR
fduvRSL+tE5C9VoJiq7ic6UOfYJFkoxXV5bx6o0yXl2nfORWj8R8xbKSAN/W
46IUGm/yfO5cfidqynIvWa4uy6e1a18P9zd1vZeI+59zD6+D+59+eTMYz2XW
YkIMnmv58ZmWeC7dlToWeK6Bbh4r8FyXqg/ejudqKOPSNfr+E5eOlnHp3+9N
CnYr17nrUhaWY507+NttN6xzP8pyO1luJMvD/4r3mst4r+PuZar1Zlb/964j
lOvNbtnWqnWxUfP1TdNPFCrOnWo4yyTsjYgcFh7RrL5CzCspCf+okado4flk
fYOrmSKh/i0doy2+Yuco266RLbLF43W63a0SshXOJ6suslroL16uEDWGfEwS
950eTMC+0tGib3bYVxqpfCEDO78Xb2w+hbm75Cpq3Q7ZEuYQJ4YYjvmJfajo
uNGTcf29MosjuN6pq2Uert+S5voS1w9ee/gArl/++3uQV0ChGNvRxvZVdqBi
57aUkRFxr4VOpxdh2P/anjN/Kfa/msZ8vo79r8ubRuYFRCWKIGNng97bi8TG
+tE7i5KfieNGdsaof/gOy46o/7SLwRaov6/eYtX6fc+boNIU5fq9mt831fq9
NLZJWrR5geis1zTb5cs78XXx9oPLOwUJr+39apbkZYt7wwcZvlPLFl3HfglO
fx4gBsu4fTUZtz8n4/adAg6m2byMV2hOSOrjlFokLnvuHtp0ZpjQk+X1Zfk5
Wf5ugscIxJ1aZg6fgbiT2WOXEsSdSmR5LVluIcsXy7h3Gxn3/iDj3uXDTHwR
Vxm/aewUxFWm3T2wHnGVFKPK592cShRP2+8Zv2q2p+g3St02dOZTEdB9bs2b
tZTrdrUQvSOWCYoGlvrNrtkFirpt56rjeX2023bD8z5p2jEaz1seviUF7Z/Q
rWIh2j+g9dhraP8pTk2+o/1N1G+2RvunOoVsR/vPPGpcYtk8Q3gs7Wp9qEe+
KDCMn9QzOFx4nmjkiv3NOXZ9jLC/eWB6TiT2N1ddPl5n4qQ0sf6LqadmSIEi
oK9W+EDn5+LhLcVsVXzMK+414lFbdE4aIB61t/WKHutXKOcVhaHC+fhjsW5h
8MWqeiGi47HM9RV9levkU9W95rVMVvQ3H1eU8+iZKJX7Dlpy32GT3HdokHun
siIsR2F8/UrK2u7pig+bg9+3qZoqasnyobI8TZZvP9hhIuKxRtYuWYjHNteu
p4N4rJ0sbyHLO8ny/xW3j39rPAVxy006tbYjbnmgf4Ur4pY73x59/fNWiaJd
y0F6+stvKTxCi6xfzH0qnr0rdEkUxYq8n08m5LWNF7kBZ527OgeKPfqj1+F5
hy52eoLnHVelyjc8b90veo/RzvERtTqgnX3H3PFBO/cJHtoS7Xx67EkPtHN/
rYmhaOca5o3dGnzNEFO7x4zbsSNPcWj3t6Akr0hhemfPONW+df8jS/Gv+e+0
69i/XmV2UWvp5yxxzGPI6B97P4iqaydmN6+ZKDpsL/uFeK9r68xExHsDk8Jq
Id776kHNN3d3lYjKup1vjlh0V7FMb/Laae1DRHr69jb4bqoUp5fiOxqwcOo6
fD9LZTz/jIzn15Lx/Bklv3RCzmQrsm5oL/o6473wPNLyR/jF12KiLC+V5Xdk
eT/5Xc6Q3+kb+X1GecbOxvP8+2/RhrN4Lr+bi1riuXwbdRJ4rj21fiTgud7G
u4/Ae3Sbb7QQ71Hd8ZM93mOaLPeQ5VVk+S8Zt8+UcfsYGbd3Gl9Dtb9gtf9H
NcS3Ez2ECeLb9SsNuIn3W8fv5WC83+YJn67g/Va28k7B99AgfXbHNsrvIb2W
j+p7aDyoTDXPbOjcQzXP3Gh+ag3mmd2vv7mBcp+kPQUoN68w34ryYYOq1sBz
jThaMg3PtXLxlRQ8l19OI1Weg65nHcteD1yE6Ynq9shzOK/58LLqe1gVPAPf
g3sn2/v4Hs7N6x6GfQQX19Bm2Ee4Fma9APsIc+Zeaod2bllklIF2Tg88ugHt
nNgyJQXv3duk/buRyve+zz1+Dd57K7lf8FjuF2TI/YKRSzq1w3usV33+KLzH
6xn29SKU73GcLFeX5e6y3OxGZ0v0h6MqxpWjP6x16qc2+sPpslzIcm1ZXi7j
/P1knN9dxvmrxKvPx36Btm1SBPYLZqy5q9o33HhnY330k83W9Sg7rOwnd1zr
3BL9ZOU3rmfRr1b6fWrkamW/elCMsUG/mrbMXvW8zTqPvI7nLbL02I7n7V0v
ywzt3KX28b3GynZ2CphsjXb+Zf3wJtpZsWjTZLTzzKY+bmjnuRbDtfE7HVV1
3X38Tj1a7o/A7/TbPKM45LF0XVCjybm79qLrpbwY5LEsfnL9Dfpbo/Z5+9Df
aqbM7In+1utzwA/s4/g8mqPAPk67dXvLsY/TpDhoB/qNPVXj96LfeJH+5zP6
jW4xjbqiX701X2/BFWW/uvt1bSf0q7oy/v/rr/j/+mqdDNFPxnezP4J+8rV6
lKaBsp/cJstDZPl7Wf6/5i1Rf5XPlOV3ZPzfUMb/D8v4/6t9i7IQj9bqtGU/
4tMPd/Vejrj0iwtvXmI+k7LrkRXmM1nuQg/zmYN5zztg/tOwrZoe5j8FQSFv
MP/5/DO1C543PGvMGDzv9NmGrnjeRdfbv0Y7W/3ZXOaobOe0X0YeaGeL+THv
0c7X1lnvQju/+h3eDe3cWn73/B3w+78zaNZD5Cl9Sl7VCXlKU44OrbVxRJQI
ieoQgHnO3PdPNZOU85w+lTrqYZ6zv3mj6djv4b9zRp++hX0f8/lztDAuO27d
3wrjsuP9e7EYl/UrEkowb+nasbsL5i2l62vbY95SIvdfPsj9FxO5/1JzmWYZ
5iEzo7caYR7y5fnE+ZiHNJLlM2T5T1leuXhjAe6vfcD0Ae7/emtVR9w/KrV2
AJ7L1mZ6WzzXqqL+VfFc5voLQ/BcjcoGvEtUPpdpzt3qeK7YGz/Sse6bsfTm
EKz7nqR+y8G6r8Vf+x1Ocr8jzDH3BNYpIyfXaoV1iueDiz02KtcpSbK8jywP
lOUn5T6Cn9xHqP7pn32E3wHPNbDvkJhkNw/7DnW7DJmLfYcm2YlhWL9Y/Xqe
MFm5fpl2oZU21i8OHmqPsd5J1Ddr4qBc74Sde1uA9c6O67PyLx3PFIZftjd6
1SxP4dDEZGj/Hj5iu+LrJuStBeS5RiJvzbL2uXDkrV3a6DID/fhu+7HX0K/f
K99wB/25TtRrK1y/rfU1VZ6bdsa1SFx/39hvNK6P83K6jutzasW64frOg/2O
YR3xZfTCOVhHdHTZegvrCLcNjacjv+6rRqeoaYeixf1V9+8hv85Mw7C0s3L9
dffmheZYf3n3H9QY66+g00kfUf+Dege1UH/7IYUDUP/ZxtXjsE/0ecPgjtgn
qt+q8kjsE1kvDTLEemdQlbW9sN4ZXHu2FtY7tc0yGmP9tWTeg2rXlOuvu+3m
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
eC6O/TjcZ8mzYPGg48AylDvf0KiG8isxOzujvKncn1ol96euyv2pXXKed1XO
+zjf29XXSPVco2p+nIPn6mF5IRzPVTNd4xSea4GhYzLOEays4qg6R3B41MAL
eK4X5xcOwXOtt7Xth+dqNHimPu5zK2HcCtxne/PVWbhPxxP+UXhf0zZ2r4n3
ZWLwtCre19Bnk59jvHbMGzwI4/XN1xVnMV57VOq5Heu+bdONbbDu829z4TfW
fYPS+ichXmSStvXP241ZCs1Xnd8jXuR41MoA69CZenruWIc2qvYuDOvQy2HZ
z3D/ZBfzkbj/i2rGV3H/g6uvTMH8If/cBNP5yvnDmjptdDB/aNNm7Sr0Pz1m
H/8xXtn/+C6uH4v+J6mGsR5+X/sbmrrg97V3ZMlD/L5+fD0Zh99XWbnLVfy+
VpW+jMbvy7vmvtpYB10fbdUO66Cee3JSsA7yb1kSj9/F7wspuvhdzGnlGorf
RYhazAfELQ/GVp2PuOXZQW09EbdkvOmdjD8x7lTJIzAF96mtEaaN+6w5mO2P
+3z6az3VX66nAto8jcDv6O7NAevwOzoQnmWI35Hv1oOq+ECHB5M7Ij6wolzb
Ab+7+8/6Tkb7GCVYzkP7LDb+0hXtc9ak02z02yNmdbFEv/0m+88h9Ntfwtuo
2i3U1m7SBGW77QnZno52i+vmGInx+tj24PMYrxs+yB2P8XrU0zWmGK8dD11w
xXg9rU3WJYzXmes62GHfoXKmR29VPvyap6ew7/BKlteW5dGyXNNtvR/GhdiZ
Qn2Xclyo/OBAR4wLGUHDAzHfuDBkcU/MN4Kf73fGfMOvaWVX5LOND9BQQz7b
3tF1TyCf7dy5cVPQr+6Ivx6CfrVWRo8c9KsL4g/rIT5foqs+GPH5PPcO4xGf
H/ZliBH6+f3v9b3Qzyc+epSNft52bfMc7CMMyj4/A/sIW25lr8c+wrGtX0Kw
j7Dm3Z3v2Ed48la9P/YRdAIre6P8/uucSh7K8oC22SNQfjbtZQHyAIMb/7RQ
5QGW/KmonBsk1u9YYYD6/HZdZ4L6PIl6Mwr1Kelb2hP1mXVyzh3UR7vB/FTU
p7rM9+O/o2S+X7Q8d/ZenjvbIc+dfe3ub4Z2aGjQKwrtYF5c9yPaYbOTtQHG
o7ouL7piPDJ83TYf45Hl2uneqnndks0D0c7JlQe5oZ0/xE4ow3zStbzvIswn
Zw1x7ID5ZL2aF2wxvwrOTJ+E+ZVlk8vnMb+yVF+xHvOHqP6HW2D+4OL39o+5
cv6wRzsysNmqHMXja82v1D+epdizw7S19oUnIqFJSQes++oMOdoH674TV080
x7pvSX7uOcxnWp+och7zmb42i2ZiPrPbOaolzhPdV2xph/2vfZprY7D/Namg
8TmsWy8cMpiNdWvViftdsW5d9rHrZdwntd9xB9xnkE7+ZNzn6V/n9bbKdqv7
V57hTbmu/P4pJRTzH/ceLVOwfq+4sEQP858mjcqX43lT69ga4HktP22ujvnS
UoUiecXeVFFpR/Vh8EinVddygz+6q9n2usjTc9JvXgd5eg0qUvyRp5e1K8wu
oyxT8XNeuwG103JFJd3VndcHPBQL6jTI/LotQ1Q61r62pUu+GFkvbPCECcr5
/8WG2m6rs8TwaR/qP9ieI/yOzPlVxc1P9P7VpOeR8XHi2LW1g1ovKhY9+8VE
+I0IFHYyn7C/zCe8JPMJT8vzfa3l+b6j8nyff2n0I8QlDGa21UZc4uraO18R
l0gwvKONvLuMoasaIO9uzvXedZF3Z9F9jj/WNU4tNhyurlzXrDpxZLlqXWN1
tu0l5bpmSbpxF6xrwjydQrCuGf1jl2p9qhPSQ7U+HXmnswHWpy9NWh7BOmtW
5cHuWGcd3r2wHdZZi+1fvMf6xUbDWrV++bRvXUesX86uThiN818H9lQ7g/Nf
3TR3GuD817u/OBshkrPh8D+e91XdXifwd8N3at3E321S7NoSf7fzrBtpWAdt
zrj3BOug573iq2AdlLqp0Rus7zYm+Idjffeu1d0KrO+KRsb7oR3+zHA/inZY
PzV4E9rB2r9ljY7KftjpjFf9HvnPxf0VP4dP6uArdtRM3PA9rUBUc3KsbZn2
VswPf3g6xdxbzPjkUmGovL7dm48mRsrrP6691B7Xq1VEWeB6j3s283G9y0Td
dbh+vsxPuCfzE/bK/IShsYZO8In/cXvoC4/z0XmL58Lj3GyEni7yKo+fXt0C
eZVWus/GIa9yWFqOxausTMV1wwTRIj9XLPy6Yv5gj4fC1uKW177lGeJuP82D
1nfzRWPvBndfmTwWtwujD1TXzBLPLfQ7xyfmiLwHFoah7f3Eq7PZDji/2SXx
zGSc33Ro1T4b5zfn3HiV9qZynAjp277RvnXF4maNqb79UxVi7ax81fnQG9lb
muFc/Ml9j1XnQ83WWcTh+s674xrjev1DJv64Xv+B60ucv+tY8icU5++0L1a5
gfN36/YX+KCevcar70U9Rw29fgf1FB3DDqOeC6wq2qGe0RbD26CebvL83Tx5
/u6gPH/X9X+si7992jYN7dO9/O5wtM+cPpuXoH1mn7o01XhujmKA12+Xg5ez
xMiO01bdsXsiblfWrwd/vEv3mJ7oB34pbkahH3gh8yR85b+3ZL5EgcyXyJf5
EnVkvkSnbjVOoH9wOpHaB/3DtzHePdA/aGTsnPXhcY7i64m9Hwf1zxJmjkcj
JhU+ESM3bAwr/FioaLf826+wVq+Fw5m0BbHKdahn2pBvK6IKFOFFzt39g94q
lr61vtRjVYDo21FNledg9Pi2I/IcTixz7oo42EFjt1z0PzvWL9JA/2N/bN8o
9D+lW2e5vn5UINSrRbadf+mtuOE0+sLbE0HCq/dVX3+RL+r3rgjdGJyhyIkc
//OK/VPx1LSaPeJp+xtW3Mb53A5liy8jnlYsuXOrJHfuhOTOBeWNLsY5UKs2
mc9xDvTmzHXV7+f5/D8enZHk0SV13LQc56mPfdm3H1yCuqdGvgGXoMZpp0zc
p3cd03DcZ22tOxq4z7rtI8ein6wblGiCfvLVz9O56CfNqqQW43mTn89Tx/NO
F4bD8bzOpQ97ob8tjLlXel/Z345epmimruxvrX8W30E7bFr8URftkFLc2AHt
0LGzeiDaYV2v9EC0Q++TI8rRDsF/5Yeskfkh3y+2UOW9WBY4vEfei/rE6r/R
35o02mOD9z7OPnEg3vucvgm98d7z5Typqpw3VZfzJXPPU7rlbZMVTq4z4hcH
FypeuGxKmWodKWJnqAXje3i2okrt58rv4fyErPX4Hix3xn/G92BS338QvofE
rcvc8T00Kr4ah3yqM/svTMI563b+Neoin+rrn81fEFdfNUWtHPl+z/0OaJy4
7y18C2p1RDyqq8vlSsuaRStmTH61A/Go886HPmD+0MvE9DLmD3mRhbqYP1yV
/ctI2d+wn9GV+SpVZb5KnMxXeZhieOegfZai1Pr37JPrchQOoe3O/z7xWLzR
bRA6SS1f8Wd6Pfdr498rEhfNrvVwjZ/43ff51XatM4XpljmDW6/PU4jYLs7t
HZ6IT2U5p3fUzhVFE9/qD3zyQfFGUeH3vVGguKZudgvXtz5m1x/XG7eyuYDr
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
30iT3o1Blt000T7fOs5yRfvcqWz5Fe0TfV2jAM970S66P573SONx1/C8o2V+
ey2Z335T5rcv+1SrHepfPuZsD9S/4fOEMNS/baW+Gqj/tzi/16h/7tgGi1F/
pysfVd9hjstyLXyHbzes2YrvsIr0fNyR3o/T0vfRPDarIb7DwsKl1vgOTYdp
LMJ3WKXauiTD/R9EnbwHzjuDsxWHhox56rIsTow7UykC5dNmTr2N8tp7tV+g
fG+nTlfxHQ4eXKGL77BLnTHN8B1uknngkTIPPFXmga9u+G2gu06+sDMzX6gY
/14ML9vZfYfvI7FM+kVqSt+ImvSMXEqPvYN+4MdBw6boB64ERo9AP2BeLejV
iaRMEb2g6qPZO3PErwdjDWI8X4rOl+u8QPm5ZCsFyicZz++E8trv5mqjH6jv
ZlSO8/7Nz5aFoB+o81dedLnMfxaPo/uinmmOh6xQz7X1Lfuhniuq/6kYq5Ut
Rrg+WXss44N4XKFduWfDBHG4bu8ilA+cfWwHyo2yreugfKhuvdBU/SKRuLvs
8ji3FMXkphZqgYufiFjpR3kjfSl7pCel6dAO2RgXrkcM2YLz+/WWTkzAuHC3
6NqBrwPjxIH2Eze+WFWs+Patfo+RZwLEsO55m1E+b0+PzSj3ePfKCOVNPuSp
+AB30opLwAfYucHnnop3IfNvDWX+7SuZf6s9SfcZ6jnl1mU31NPK+kNt1PNP
48/ZyBvcrt6+HHmDYXq7VyNvcHu7/WdwXrez9hhb/Gsw07sY53bL9yp+4txu
3AM9c5zbXR7Y8jHO7ZbWDDzV0DVDjBwRPrmvXZ44ULwtpcr3aGHx2PEIytfX
uDsd5UXePd+i3Pdj/92uMz4oHg3Uzntup5y/h8ZN1On9SDSQXu8p0uv9QXq9
e8WE9AhMyxDH9W+m95yfL9a4t/2Tk/5YBK57dBXzgYXn87QwH9Ac22YC5gPL
x1gOwbi56JzzRIybdhfVNTFuTjl852rC5Vhh2G2g13WvYuHktePAjAhf4bRc
4wzKC22KH6Jc1K16COXr37bui787JWRxKv5u0rmxP/B3J036hzPZ68jvLeCr
+J/9hzO5S+b3Pt5Q8z/5vb57Olrjec0GrfiE5/2z7fNwPO+HqtMqYd9271zD
EOzbJo6/7YR92wH/w6f8YdPYyZiHXH3zthvmIduOLHuLeYjFlFxP7PufPrzg
Lvb9HX4N1Ma+f/rS5H2q76rikuq7Grg5uSu+H6vV9zahPN/DUvVduSwI6Y7y
KuP+m8dYJvMYOweVuOH+h0ZGPsL9e8VUb477N5/rEIHfRdvkmffwu5jlXSfa
SPm7GLg00h/lXw939UP5umurUlB+Jr7TQOQZ7rArz0aeoWbeqanIM3xk1OQj
ftf5s7acV/2uq68ZjN/1rYdvM1F+6+b+ayi3dhw0CuWNWr17hTyikoORF5FH
1PjgnQ/II7JvEZyLfizfod9R9GOT5y5OQD92ecfYNJTrrax+BuUWBj/eoLxT
t73XcK7KblVRCc5VTa+3YSPOVZXWVVPllR0K3VUJ8Z8zocccEP9xTTbLxXi3
83CDdRjvqnnvWIrxbrLZ+3iUr2y3WDU+NpnYeCXKV9xoqRr3r665qxr3s5Jz
kjC+v/fPDUf5yywr1bi/vvJ51bgfONs8Es+15e2Z23iuBg9HvMZzfboaYIR2
K2m8zeW1st2eFW0chnbb4VcyGfMik0nTnTAvcm3lYIR5UQ9/20Eo7zTA0Rnl
foff90J5bZnXUkn+ayrzW/6o9+qB+19L9vHG/bc9TR+H+ze7vNsM31ufD+q9
8L31EnEv8L05zI7sHq2c7z343NsL870N6mu1jijney/mZ7REeaU1Yd4o7/jt
sw7KL/yMfYLvZ1G5rSu+Hx2bZh3x/YyU3sm10jtpI72THwa6DsZ+a60lOXUG
988SY8Ps7mK/NfDsANU+44Cmu//ZZyxt+Qvc2tAFR4Zin7H0SYeB2Gc01Fob
jn3GUe2f/qxQzoenHg/JwHz4Ye0ptzEfHrhRsxTl8z6bZ6J88OgHd1AeWNb6
MnhTpuv7tgBvar+dkxd4U0E/TPKwX/m6fwfV/mzhni0DsV+5+tpEXczbo+Om
1EZ+yMVwh3Lkh5z6iyt1WeaBTBr1Yy/2Gf1ipw/FPqNJs0uq/WUDP20TPO91
zQYN8bwrWz7wxvM6ynMKy+Q5hZXynMK3uaYqvn3XtGADcJ5N7f1VfHvfxNGb
0c8Me3OmBP3Mg9O7p6OfSeu8sjX6mUaaVwegn/kxbkki+pllL3/MxjrR7XuP
i1gn5kxevxjrxNxB+qfRH6a1XvoI/aF7z5Gr0B8OaLXbBuUXtzXyRvm449Gr
Ue711/6+jdzf966fEo/+f1r1oObo/wdYn5ugruz/8+V+9Jq/PGgD/tp3Npb7
zr+aFEbgProuoa1xH8spHtNwn7lXt01Bu12qbPgN+/JDdPIT0G6LL2qpuPrR
+Yf+gKsf6ZTaEOvoY3/lsdeQeexDEi5YIu6UVpijDV59pTkluxB3mi3PZXeS
57JT5bnszTFtPmO9sMEjaAPWC7NGrOiA9cLZb+GLMU/b9fhZa8zT5t52OYB5
WkF7TRXf3vjF8Pvg29dZvUgHnPY98nxxR3m+uJU8X9zN+4VqvrpvSPwazFf7
5m24hvnqwYguozFffXWq8ibMVz/5D7PGfHVmF5uf4MZ71xcfwY0ft7jiHbjx
n+V51VJ5XjVYnlft9yJsIObVcSaBPzHfXltoeA/zanf1wz1RvikgtzLm20P1
N3ujfEPQ2xqoz1H7kEzUxyz/yFXU56x2z+Goz6SrYYdRn+qFQWtRn8E+M1Uc
+0nxbRSoj4XdqQzUZ7w8vzlCnt+sLc9vPn3x5yvaM+x7+CS0Z+1ORzujPW9X
L1qC9kyu0GqB9uxidOkg2tNg9AQV9/5odPk7cO/PVug2QXumynyksX95f9RG
/Tde4SbjFfa1clfj+1dM1LTB99/mbqIdvv+vN9Z8R16Q947y8cgLWl7Lszfy
gqY4tpuJvKDSAy1WIS/IZH6PncgLmps86pivRomovrfxtcCWkUL79JfhW+v4
iqn1uhxFec3s4gcod6/oOhXlLj+SbjUqKxJ+7vNC6too14Wet+udauYjorQe
3kR5k3XGsSj3O32lBcrVpZckQ3pJTkoviZosz5Hlx2T5VuklGS+9JFell8Ra
lrvJ8ouyfN7t2z++Ns4R03YtXaRRKVtsKnye1UPPSxjUeK5aZ6m10jTAOkXz
93PVOuvjd0ePBVVKxMQlDWpe3BWpUL/a+0mUhnK+9KKfal2zfK9Td1xvoftT
ta651GGrO67vtExTF9cP3TTvOa7/27dyXNafXpW9sp7Osp7kx5EnR44c+fjk
5ZOTT844uePkjfOcFc9d8bwV+W7kvZHzRo7Vf7lWYf/ywsgPIzeM56B4Lorn
oRjHYVyH8Rzy48iTI0eOnKz/crNSBXlk5JORS8b5Lue/nPeue7uork16sSgq
22wWpx4jNMZYn1fLfPJvHg/zepjPQ24dOXbk1zE/gPkCzBPg/jf3w7kPzv1a
7t9y35acr/9yvzL/3f/jfiD3AblvxH0k7h9xP4P7G9zXIJeNnDby2Rj/ZTyY
cWCjCc800T59Q7tNQ/t0/5bsjPbh+MrxluMs8+eYT8c8Op7j4rkunuci74/8
P3L/yDX7L+csSJAfR54cOXLMj2S+JPMkyWEkl5E8RvIEyRckV5DctP9y1Ar/
5dORV0dOHblF5BiRX9Qy4Ifu7LG5AR/OBSjwu1vp4LgNvzuOuxyHOf6SY0iu
IXmGHHc5DnP85XjJ8ZPjJsc5jnsc78h9+y8Hzv/fcYjjEscjjh8cTziOcP+J
+1HchyKnj9w+8voYr2f8nnF7cuLIjSMvjnxM8jLJyaRvg/4Nejfo1aBng34N
+jPo06BHg54MejPoy6APg34MejGsHHuvBzc5rbS/EzjKj2b9LvIf5/+vx4Je
C/osVll2NEJezq9J2WuRp3N+0MNlyM+hr4L+CnorXs/sUx/nJy26PO6L/LUz
X1ttQ94avRT0VNBPQf8EfRT0UNA7Qg8J/SP0i9A3Qs8IPSL0itAnQl8I/SH0
htALQk8I/SD0f9AHQg8IfR70e9DrQZ8H/R70etDbQY8H/R30dtDjQX8HfRv0
b9C7Qc8EvRP0TdDDQS8HfRz0cNDLQR8HvRT0VNBPQf8EfRT0UNBXQX8FvRX0
MdDPQC8DfRX0V9BbQU8DvQ30NZD7Tw8A+f9/eyteS98B+Tvk8ZDDQ08AvQH0
BZCbT44++fnktpPjTn47+ezktZPTTp47+e7kupMzTu44eePkuZPvTq47+dfk
YZODTf44eeTkkJOLTU42+djkLJO7TN7y3x4N8qXJXyaPmRxmcofJISZ/mNxh
cojJH+b+Fve7uM9F3xj9Y/SOcb+H+z/c9+F+CfdPuG/CfQjuS3A/gvF3xuMZ
h2e8m/Fvxr0ZX2a8mXFmeqroraKvivFZxmsZp6Vvif4lepforaHHhv4at9fX
6yOO8LLFWA/EFbY+cE5GPOGk9LWskP4Welvoa6G/hd4W+kvoM6HHhP4S+kzo
MaHng94P+j7oyaA3g74MejLozaAvg34I+iLoiaAfgr4IeiLoJ6CvgJ4C+gno
K6CngH4C+groKaCfgL4CegrI0ydfn1x9cuHJiScfnpx0ctPJSydnnNxx8sZ9
Gz32xTmH1IWH3+HcQ0TL6DCcdyBfm7xtcrbJnSSHkvxJeonoKaKf6OYGh9r4
HjaYJHnhe1jwclccvgf69ujfo3eP3h16eOjfoW+G/hl6Z2pKv8Bn6Re4Jv0C
9JfQZ0KPCX0b9G/Qu0EPBL0Q9EHQ90D/A70P9ArQM0C/AL1u9LzR70bOPrn7
5O3vljx68umrSy49ue3kuJPfPiUg/RHel19YQRbe140K3SC8L3qe6H2i74n7
3Nz35n43vUf0INF/RN8h/Yf0HtJjRK8RfUbch+a+NPej6QGiF4g+IO7vcr+X
+7z06OTI89889839VO6vcl+VHhp6aehJoQeFXhT6ULhPyX1L7lfS80HvB30f
3P/jfiD3AentoMeD/g7uw3Ffjvtx9EbQI0F/BD1/9P7R90fvAj0M9C9w34v7
YNz/4nnCmvJ8Ic8VMg5L3j85/9y/4X4O93GYR0JePjn59IHRD0YvGH1g9IPR
C8b8CeZTMI+C3ix6tOjPGiy9WZnSo0V/Fv2a9G3Ss0lvFj1a9Gcx74F5EMx/
oHeKHir6p+idooeK/inmGTDvgPkG9DbR40R/E/f1uc/P/X36kOhHoheJPiT6
kehFoqeH3h76eujpobeHvh7ur3O/nfvs9NDQS0MfDT00/3pppI+G+9nc3+a+
Nj009NLQR0MPDb009NFwv5n7z9x3ph+FvhR6Ung+ln5Lei3pF6FvhJ4R7u9y
v5f7vPRw0MtBHwc9FvRa0GdBjwW9FvRZcP+S+5ncx6Qfgr4IeiLoh6Avgp4I
enDpxaUPl54MejPoy6DXlp5b+m3pH6WPlB5S5l0xD4v5V/Tg0otLHy7zkJiX
xHwk5vEwr4f5PMyPYb4M82SYF8I8EeaHMA+DeRnMx2DeA/MgmP9Afyp9qvSo
Mm+AeQTMH+C+OPfJuT9OTxi9YfSF0W9E3xE9R/SE0RtGXxj9RvQd0XNEfxh9
YvSI0XtEDxL9R/R20ONBfwc9HPRy0MdB3x79e/Tu0UtHTx39dPS30edGjxv9
ZPSV0VNGjxe9XvR50UtBTwX9FPQw0ctEHxN9QvQL0StE7w49PPTv0E9DXw09
NfTB0A9DLwz9DfQ50ONA3wn9J/Se0F9Cnwk9JvQ60/NMvzP9hfQZ0mNIzx+9
f/T90YdHPx69ePS90f9G7xu9aPSk0Y9Gzwe9H/R90GtFzxX9VvQz0ddETxP9
wfQJ0yNMvxF9R/Qc0QNELxB9QPTu0MND/w49GfRm0JdBjx29dvTZ0b9FHxc9
XPTb0XdHzx29XPR00c9Fv92sv+Zv9NvRd0fPHX1d9HeR20lfF/1d9HbRp06/
Or3q9H/QB0IPCD0f9H7Q90F/9n992v7/ejXo2aBfg752+tvpbadv+7/+7cJ/
vcv0MNO/TA/3f73cQf96uP/r5c4U9HD/18ud+q+H+79e7jBBD/d/vdzp/3pN
6Dmh34S+EPpD6A2h/4M+EHpA6P+gD4QeEPo/6AOhB4T+j42y/JQsp+eD3g/6
Puj5oPeDvg/6M+jToEeD/gz6NOjRoBeEnhD6QegFoSeEfhB6QegJoR+EXhB6
QugHoReEnhD6QegFoSeEfhB6KeipoJ+Cvg36N+jdoG+D/g16N+gFoSeE3g16
OI78VU5fCP0h9IbQF0J/CL0h9HbQ40F/B70d9HjQ30FvBz0e9HfQ20GPB/0d
9HbQ40F/x/9qH/pL6DOhx4Q+D/o96PWgz4N+D3o96POg34NeD3o76PGgv4N8
avKqyamOl16MTdKLMUN6McjxJNeTPE/6P+gDoQeE3ov4v/wX5BU6yPwOcguZ
50F+IbmF9DHQz0AvA30M9DPQy0COP7n+5PmT40+uP3n+5MiTK0+ePDny5MqT
J0/+OHnk5JC7y/J3sryqLCcXm5xs8rHJxSYnm3xs8pfJaSafmeXkNJPPTJ4U
+VLkSpEnRb4UuVLk+ZLvS64veb7k+5LrSx4r+azkspLHSj4ruazkZZCfQW4G
eZHkR5IbSV4h+YXkFpLfR54fOX7k3JF7R94deWrkq5GrRk4ZuWXklZF7RQ4W
+VfkLpHDRP4SuTzk9JDPQx8J/ST0ktDfQJ8DPQ70BNAbQF8AeeXkl5NbTi42
OdnkY5MHTT40udDk9pLjS34v/YL0DdIzSP4IeSTkkJDXSX4nuZ3kdZZKfmeW
5HaSI0muJHmS5EiSK0meJHmL5C+Su0jeIvmL5C6SY0iuIXmG5BiSa0ieIf1P
9EHRA8XzzDzfzHPN5O6Rw0f+Hrl75PCRv0eeHfl25NrRp1BV8u36S64duWnk
qJGfRm7acclRIz+NPC/yvcj1Is+LfC9yvch7Iv+J3KcuPTeOBh85NrNpR/CS
ByydrOIk05dDfw69OfTl0J9Dbw69I/SQ0D9CvwV9F/Rc0G9B3wU9F/Q60PNA
vwO5/OT0k89PLj85/eTzkwtPTjz58OTCkxNPPjw56eSmk5dOTjq56eSlk3NN
7jV510MTEkcjD9Jgz8qxyItUxC50QD4kfVT0U9FLRR8V/VT0UpFvqyN5t+Tc
0rtDDw/9O/S40OtCnwt9IfSH0BtCzwS9E/RN0GdAvwG9BuTmk6P/TvLzye8j
z89fcvzIQycfnVx08rjJ5yaXm/4t+rjo4aJHil4p+qT+9guQ90vOL7m/5P3S
J0S/EL1C9AnRL0SvEH029NvQa0OfDf029NrQp0K/Cr0q9KnQr0KvCv0c9HXQ
00EPBL0Q9EHQA0EvBH0Q9A386x+Q3gHyE8lTbCg5iuQnkqdIjiL58uTNkzNP
vjx58+TMk59Onjo56uSnk6dOjjp53+R/k/tNfhN5TuQ4kZtMjjL5yeQCkxNM
PjA5ueTmkpdLri45u+TrkrdC/gq5K+SDkBdCTgi5D+RAkP9AHgH5BP9yCSRX
lJxR8kXJISWXlDxS8iXJmyRnkvxE8hTJUSRnkNxB8gaDV78Z3TMxTOwrOVge
N6BE3H97uA/ybcilIqeKfCpy58mhJ3/+d6uYp+DC7yncPwyc+Dinp3XAh9+m
b3AR8YdNm7w2Iv4gdD43Q/yB5454Donnj8i7J/+e3Hvy68mzJ8deTPPsB17t
vdcbIsCvrb0uyhXcWnL9yPkj349cP3L+yPebcaBobeM37xW6R74fS/HME1cD
5jTttfjRv/x08tTJUSc/nTx1ctTJBSYnmHzgMvtne50NwhTGy7bGHhpdIspu
b45qMUL5vVnZPERe36g6JzOR19dupnuF162H/3IGyR0kb3Cs+3IT3L/tj6UG
uH95YVQE7l9kbhON9v+52bY/2v9testqaH9yXcl5Jd/VKkHHE3+30pGMbPxd
jfFjfuPvktdPfj+5/TynxHNLPK9EjyC9gvQJ0iNIryB9guTlkZ9Hbh55eeTn
kZtHXjz58eTGk2NOrjl55vTk0ZtHXx49efTm0ZdHTx69efTlkatFzhb5WvSx
0c9GLxt9bPSz0ctGHxv9bPSykUtFThX5VORSkVNFPhW9YvSM0S9Grxg9Y/SL
kbtEDhP5S/RU0VtFXxV9VPRT0UtFfhB5QuQI0atEzxL9SvQq0bNEvxK9SvQs
0a9E7gw5NOTPkDtDDg35M/QA0QtEHxA9QPQC0QdEfgp5KuSoTJFcY3KOd0u+
MbnG5ByTb0zeLvm75O7SQ0MvDX009NDQS0MfDT009NLQR0P+BXkY5GCQf0Ee
BjkY5MOSF0tOLPmw5MWSE0t/Kn2q9KjSw0EvB30c5E6SQ0n+JLmT5FCSP0kO
ILmA5AHSN0n/JL2T5NORV0dOHfl05NWRU0cuGzlt5LORy0ZOG/ls5IuRN0bO
GPli5I2RM0a+FXlX5FyRb0XeFTlX5B+Rh0QOEvlH5CGRg0ReD/k95PaQ10N+
D7k95MiQK0OeDH1F9BfRW0QeCvko5KKQh0I+Crko5P+SB0wOML259OjSn2ud
2iYD52o6Ldk5AudsvuqtmoHzNfSG0iNKfyi9ofSI0h9KrxI9S/QrDRtxYHpr
tQIR97RlzI2P6SJmjE+lP1cfCfVOa6aivOWkWXEod3DRrIZycmPbS44s+bH0
x9AnQ48MPbL0ytInS64oOaPki5IrSs4o+aL8u93++rvkWpJzSb4lfaX0l9Jb
Sv8ofaT0kJK3SP4iuYvkLZK/SO4ivZj0ZNKPSf4geYTkEJI/SB4hOYTk6JGr
R54eOXrk6pGnR/8ffYD0AJLLRk4b+WzkspHTRj4bvXT01NFPRy4YOWHkg5EL
Rk4Y+WD0pdGfRm8a+VbkXZFzRb4VeVfkXJHHRD4TuUz0bNG7Rd8WvVn0aNGf
Ra4QOUPkC5ErRM4Q+UL65GVLfvYxyc0mL5v8bHKz6T2iB4n+I/qP6UOmB5n+
Y/qQ6UEm35a8W3Juybcl75acW/ps6Leh14a+Fvpb6G2hT5d+XXp16dOlX5de
XeYv0a9Lry65ouSMki9Krig5o//yRWUeHT2x9MPSC0tPLP2w9MLSE0s/LLmc
5HSSz0kuJzmd5HPSb0rfKT2n9JvSd0rPKXmU5FOSS0keJfmU5FLSr0nfJj2b
9GjSq0mfJnmF5BeSW0heIfmF5BbSB6n71/4yfZD0Q9ILSR8k/ZD0QpLTR24f
eX3k9JHbR14f86boM6THkP5C+gzpMSSHjlw68ujIoSOXjjw6+hvoc6DHgflX
9BXQU0DvHT149N/Re0cPHv139N7Rg0f/HXlh5IeRG0ZeGPlh5IbRG0ePHP1x
9Mbt/Csvi3x88vLJyaf/jD40etDIpyavmpxq8qnJqyanmp4qeqvoqyJnmdxl
8pbpW6J/id6lSnWmbsH6Ws1tpS3W1/lrQ/Sxvib/lzxgcoDJsSXXljxbcmzJ
tSXPljxW8lnJZSVnk9xN8jZ3+LbPhvfoxh6PffAg3fm25iH8R+RCkhNJPiS5
kOREkg9JviF5h+Qc0gtCTwj9IOTxkc9HLh/9FvRd0HNBrww9M/TLkCtHzhz5
cuTKkTNHvhx9CfQn0JtALgA5AeQD0DNH7xx9c/TM0TtH3xz9ZPSV0VNGPxl9
ZfSUta3TJRDtb16evR/tn+a07xHan/4h+ojoISJ/kzxOcjjJ3ySPkxxOenfo
4aF/h94denjo36F3hx4e+necpXdnpPTw0L9zyqC9Fb7ndRdWOeB7nndzWGd8
z/QF0h9IbyB9gfQH0htIPvvVv3wQ9DjS60ifI3ni5IuTK05fI/2N9Db+iewy
G9xYh+6z/cGR1a/Z/xD4seQOk0NM/jB5suTLkitLniz5suTKFnoXzEU72+e3
mIN29m5yeQvamV4oeqLohzKRHM93kusZKHme5HiS60meJ/mS5E2SM9lmx8K+
yFtYN/O3Km9hRe+L5TgvSR8t/bT00tLPQV8HPR1p8rxbhTzv1lCed6M34sVf
/og0eW7uT8A/5+b6yXNz9E/QR0EPBfMQyJ8gd6KG5O83lOfmouW5OfoU6Vek
V5H79RFyv578WPLiyY8nN57+P/oA6QFsI8/ZLZbn7D7Ic3bkp5OnTo46PXn0
5tGX10Cev9snz9+1lOfv6Jmjd46+Ofrb6HOjx40+dfrV6VUn55rca/KuycUm
J5t8bPq/6QOnB5y8Y/KPyT2mX42+NXrW6KWmp5p+anJ7Q/9qf3J7yfElv5f+
M/rQ6EEjf5Y8WnJo6UumP5neZPq66O+it4teZHqS6Ucmd5UcVvJXyV0lh5X8
Vfql6JuiZ4peJXqW6Fcij4Z8GnJp6N9dJs8P6svzg+SWkmNKfim9OPTk0I9D
Hg35NOTS0MtCTwv9LORekYNF/hV9lvRb0mtJvyN9j/Q80iNIryB9guSqk7NO
vjo9dvTa0WdHThO5TeQ1/evlkp4u+rnoqaK3ir4qeqroraKvilwkcpLIR6I/
hj4ZemTIFSVnlHxRelXpWaVflV5Pej7p96Tnkt5L+i7pWaR3kb5FcuTJlSdP
nj4/+v3o9aMfjr44euLoJ6OvjJ4y+rro76K3i3zbyL88EeTEkRtHXhw5sOTC
kgf7sq/ba/BijroGRYEf8+nQIF1wY+jLoT+H3pwlBv36gj/1fuAfC/CoxrZ8
nw0OFXmp5KeSm0rOKbmn5J2SE0puKHmh5G+Sx0kOJ7mZ5GiSn9nQuYcqX6Xx
oDJVvspG81NrkK9C/iN5kORAkrdI/iK5i+Qhko9ILiJ5heQXkltIDiC5gOQB
kttFjhf5XQGWcRrgPYUUVOoE/pONbY3sVLuAf7nDKX/5FB58b6sFXrBz8Ofv
4AdPzWlWAm4wub3k+JLfS68VPVf0W33cvCUB+SrX9lT2Qb6Kf3jIPuSrXCo4
txp5CFcnxk1AHsKS7eU7kIdAvxF9R/Qc0W9E3xE9R9FxoycjLjrEcMxP5Ofc
K7M4grjoljTXl4iLOnW1zENcdPDawwcQFyU/lzxdcnS358xfijwZnU4vwpAn
0zTm83Xkycyx62OEPBnPE41ckSdzYHpOJPJk1n8x9UQ+xqrLx+sgHyOgr1Y4
8jHImSV3lrzZYx5DRiOvY5XZRS3kdVRdOzEbeR3kupLzSr4reazks5LLqutZ
x7LXAxfhl9NIxU8wPVHdHvk2U1cFz0A+yXnNh5dVnthOtveRT9J1QY0m5+7a
i2/zjOKQb9P1Ul4M8m2M2uftQ17K4ifX3yAvRTNlZk/kpZBPSl4pOaWfkld1
Qh7OnUGzHiIPZ8rRobWQhzP3/VPNpOxARUhUhwDkvfSp1FEPeS/kh5InSo7o
ttbXVBwJnajXVohLa2dci0RcmtxPckDJ//yq0SkK+TxuGxpPRz7P/VX37yGf
5+7NC83hrTfTMCyFx967/6DG8NeTg0kuJnmY9AjSK0if4FnreT3BnzG7nqvi
zDQxfajizJCjvVVytcnTJkebXG3ytOlvo8+NHjd62uhto6+NXi56uujnopeL
ni76uejDph+bXmx6nel5pt+ZnmN6j+k7ppeXnl76een/oA+EHhD6XOl3pdeV
Xk96Pun3pJ+Svkp6Ksn7I/+P3D/y/sj/I/ePvD/y/8j9I6+8yV9eA/LKyS8n
t5y8PPrx6MVjObl65OnRZ0a/Gb1m9JbRY0Z/Gbl45OSRj0e+J3mf5HyS70ne
Jzmf9G3Tv03vNjme5HqS50lfde5f55fJ6yS/k9xOepfpYaZ/mfxN8jjJ4aTH
hV4X+lzoa6G/hd4W+n3p+6Xnl5xNcjfJ2yQfs/ZfnEzyMcnLJCeT547r/nXu
mLxL8i/JvaQflL5QekLpy6QvlN5Mnl8mV5I8SXIkyZUkT5Lnl8nFJw+/u+Tg
O0guvqXk4ZN/Rx4eOXj0zNE7R98cPXP0ztE3R48avWr0qdGXRn8avWn0pdGf
Rm8avV/0gNH/RU8VvVX0VdFTRW8VfVX0LdG/RO8SPTr06tCn03i2ZT/83eAO
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

     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-420.969, 420.969}, {-420.969, 420.969}, {-837.965774535418, 
   837.965774535418}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.887151193405573*^9, 3.887159951703829*^9, 3.8871636057892466`*^9, 
   3.8871637019938736`*^9, 3.8871637764707956`*^9, 3.8873260473150826`*^9, 
   3.8873264862432756`*^9, 3.8873265455853415`*^9, 3.887327478633106*^9, 
   3.8873275531710668`*^9, 3.887328611019088*^9, 3.8873303268561654`*^9, 
   3.8873304551519427`*^9, 3.887749446216834*^9, 3.8877495518540964`*^9, 
   3.8877501240089693`*^9, 3.887750206631427*^9, 3.8877502897599187`*^9, 
   3.8877503452704363`*^9, {3.887750385440164*^9, 3.887750411926512*^9}, 
   3.8877508371212997`*^9, 3.8877509395801277`*^9, 3.887750982778534*^9, 
   3.887753283931337*^9, 3.887753411514779*^9, 3.887753453865178*^9, 
   3.8877535103154693`*^9, {3.88775357325471*^9, 3.887753591093602*^9}, 
   3.887753623022035*^9, 3.887753676098985*^9, 3.8877537172794075`*^9, 
   3.887753760446479*^9, 3.887753830803621*^9, 3.887755014165987*^9, 
   3.8877550642687707`*^9, 3.887755962974807*^9, 3.8877560028223667`*^9, 
   3.8877560344912157`*^9, 3.887757213508726*^9, 3.8877584434217577`*^9, 
   3.8877585495722637`*^9, 3.887761894476966*^9, 3.889675362774089*^9, 
   3.8896764430568304`*^9, 3.889676583712576*^9, 3.8896769817361107`*^9, 
   3.889678444762706*^9, 3.8896789238870234`*^9, 3.889678982901783*^9, 
   3.889680189296457*^9, 3.889683235509231*^9, 3.889941823143115*^9, 
   3.8899441137831755`*^9, 3.8899443415314045`*^9, 3.889944415066134*^9, 
   3.8899445267442927`*^9, 3.8899578454683466`*^9, 3.8899586878612432`*^9, 
   3.889960271447092*^9, 3.8899631555171237`*^9, 3.88996337161016*^9, 
   3.8900131219387474`*^9, 3.8900137486197157`*^9, 3.890014003433279*^9, 
   3.890014460789427*^9, 3.8900145397847*^9, 3.890014851380247*^9, 
   3.890015170331685*^9, 3.890015318014642*^9, 3.8900173684117002`*^9, 
   3.8900179525668755`*^9, 3.890018016784829*^9, {3.8900181349290853`*^9, 
   3.890018146910509*^9}, 3.89002130679694*^9, 3.8900221040074587`*^9, 
   3.8900238093608017`*^9, 3.890024082744199*^9, 3.8900257059690113`*^9, 
   3.89002577352919*^9, 3.89002635057402*^9, 3.8900264230951447`*^9, 
   3.890026554376466*^9, 3.890026619802273*^9, 3.8900268271228867`*^9, 
   3.8900934422240524`*^9, 3.8900959784494834`*^9, 3.8917733902395973`*^9, 
   3.8917744552365985`*^9, 3.891778658130508*^9, 3.891779052913553*^9, 
   3.8917791451186666`*^9, 3.8917794345947304`*^9, 3.8917795360189595`*^9, 
   3.891782033068321*^9, 3.8943138655682096`*^9, 3.89431397536294*^9, 
   3.8943140612656507`*^9, 3.8943157195926332`*^9, 3.8943157743695054`*^9, 
   3.8943158949211187`*^9, 3.8943160610688667`*^9, 3.8943161695393643`*^9, 
   3.894316941017727*^9, 3.894317106701604*^9, 3.894317199045529*^9, 
   3.894318276232226*^9, 3.8943183173086147`*^9, 3.8943194834791656`*^9, 
   3.8943282644248543`*^9, 3.8943285598410344`*^9, 3.894330772099752*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"94b5431d-f21f-4590-9b18-30ad3cc24a57"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"draw", "[", "matrix_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "g", ",", "adjacencyMatrix", ",", "vertices"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"adjacencyMatrix", "=", "matrix"}], ";", "\[IndentingNewLine]", 
      RowBox[{"adjacencyMatrix", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Rescale", "@", "adjacencyMatrix"}], "/.", " ", 
         RowBox[{"0", "\[Rule]", "\[Infinity]"}]}], "//", "N"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"pts_List", ",", "e_"}], "]"}], ":=", 
       RowBox[{"Block", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"s", "=", "0.015"}], ",", 
           RowBox[{"weight", "=", 
            RowBox[{"PropertyValue", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"g", ",", "e"}], "}"}], ",", "EdgeWeight"}], "]"}]}]}],
           "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
            "weight", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Arrowheads", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"s", ",", "0.1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"s", ",", "0.9"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AbsoluteThickness", "[", 
            RowBox[{"weight", "*", "15"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Arrow", "[", "pts", "]"}]}], "\[IndentingNewLine]", 
          "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"vertices", "=", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"4", " ", 
               RowBox[{"Cos", "[", "a", "]"}]}], ",", 
              RowBox[{"4", " ", 
               RowBox[{"Sin", "[", "a", "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", 
              RowBox[{"Pi", "/", "4"}], ",", 
              RowBox[{"2", " ", "Pi"}], ",", 
              RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"7", " ", 
               RowBox[{"Cos", "[", "a", "]"}]}], ",", 
              RowBox[{"7", " ", 
               RowBox[{"Sin", "[", "a", "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", 
              RowBox[{"5", " ", 
               RowBox[{"Pi", "/", "3"}]}], ",", 
              RowBox[{"Pi", "/", "6"}]}], "}"}]}], "]"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Length", "@", "adjacencyMatrix"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"WeightedAdjacencyGraph", "[", 
        RowBox[{"adjacencyMatrix", ",", "\[IndentingNewLine]", 
         RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeLabels", "\[Rule]", 
          RowBox[{"(*", "\"\<EdgeWeight\>\"", "*)"}], "None"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeShapeFunction", "\[Rule]", "f"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexLabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "Bold", ",", "20"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Background", "\[Rule]", 
          RowBox[{"GrayLevel", "@", "0.8"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"VertexCoordinates", "\[Rule]", "vertices"}]}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{",", "\[IndentingNewLine]", 
          RowBox[{"VertexCoordinates", "\[Rule]", "vertices"}]}], "*)"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "@", "g"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"cef25f06-05df-4060-8605-b418044e061d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"realDataUntil2019", "=", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "18", ",", "5", ",", "2", ",", "  ", "4", " ", ",", "   ", "8", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "5", ",", " ", "0", ",", " ", 
       "3", ",", "   ", "0", ",", "   ", "5", ",", "    ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "3", ",", "6", ",", "0", ",", "  ", "2", " ", ",", "   ", "2", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", " ", 
       "0", ",", "   ", "0", ",", "   ", "1", ",", "   ", "0", ",", "    ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", " ", 
      RowBox[{
      "1", ",", "3", ",", "3", ",", "  ", "4", " ", ",", "   ", "3", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", " ", 
       "0", ",", "   ", "0", ",", "   ", "1", ",", "   ", "0", ",", "    ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "9", ",", "0", ",", "0", ",", " ", "36", ",", "  ", "25", ",", "  ", 
       "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", " ", "6", ",",
        "  ", "12", ",", "   ", "1", ",", "   ", "6", ",", "    ", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{
      "15", ",", "4", ",", "1", ",", "57", ",", " ", "122", ",", "  ", "0", 
       ",", "  ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "7", ",", "  ",
        "52", ",", "  ", "0", ",", "  ", "32", ",", "  ", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "0", ",", 
       "  ", "5", ",", "  ", "4", ",", "  ", "0", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "0", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "0", ",", 
       "  ", "3", ",", "  ", "2", ",", "  ", "0", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "0", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "6", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "1", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "2", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "3", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "0", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "0", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "0", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "0", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "5", ",", "2", ",", "0", ",", "40", " ", ",", " ", "76", ",", " ", "0", 
       ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", "  ", "4", ",", 
       "  ", "46", ",", "   ", "0", ",", "  ", "28", ",", "  ", "0"}], "}"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "5", ",", "1", ",", "0", ",", "  ", "0", " ", ",", "   ", "1", ",", 
       "  ", "1", ",", "  ", "0", ",", "  ", "2", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "6", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", " ", "21", " ", ",", " ", "49", ",", "  ",
        "0", ",", "  ", "0", ",", " ", "0", ",", " ", "0", ",", "  ", "1", 
       ",", "  ", "41", ",", "   ", "0", ",", "  ", "28", ",", "  ", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "0", ",", 
       "   ", "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", "  ", 
       "0", ",", "    ", "0", ",", "    ", "0", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}]}], " ", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realDataUntil2019", "=", 
   RowBox[{"realDataUntil2019", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", 
       RowBox[{"Length", "@", "realDataUntil2019"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"g1", "=", 
  RowBox[{"draw", "@", "realDataUntil2019"}]}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"VertexDegree", "[", "g1", "]"}], ",", 
   RowBox[{"{", "1", "}"}], ",", "\"\<Probability\>\"", ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<degree\>\"", ",", "\"\<probability\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.894313345293629*^9, 3.89431359747532*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"645ed1bf-fdeb-4d68-8f6b-4a0d43abafb4"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5459999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5459999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{-0.5, 0}, {0.5, 0.14285714285714285`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{28.268086687028713`, 
           43.086987218699576`}, {-81.88223969571717, 90.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.14285714285714285`]& ,
        TagBoxNote->"0.14285714285714285"],
       StyleBox["0.14285714285714285`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.14285714285714285`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.5, 0}, {5.5, 0.14285714285714285`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{99.86258934538301, 
           114.68148987705388`}, {-81.88223969571717, 90.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.14285714285714285`]& ,
        TagBoxNote->"0.14285714285714285"],
       StyleBox["0.14285714285714285`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.14285714285714285`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.5, 0}, {6.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{114.18148987705388`, 129.00039040872474`}, {
           3.8479426521414126`, 90.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.5, 0}, {7.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{128.50039040872474`, 143.3192909403956}, {
           3.8479426521414126`, 90.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.5, 0}, {9.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          ImageSizeCache->{{157.13819147206647`, 171.95709200373733`}, {
           3.8479426521414126`, 90.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.5, 0}, {10.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{171.45709200373733`, 186.2759925354082}, {
           3.8479426521414126`, 90.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{10.5, 0}, {11.5, 0.14285714285714285`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{185.7759925354082, 
           200.59489306707906`}, {-81.88223969571717, 90.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.14285714285714285`]& ,
        TagBoxNote->"0.14285714285714285"],
       StyleBox["0.14285714285714285`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.14285714285714285`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11.5, 0}, {12.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{200.09489306707906`, 214.91379359874992`}, {
           3.8479426521414126`, 90.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{13.5, 0}, {14.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{228.73269413042078`, 243.55159466209165`}, {
           3.8479426521414126`, 90.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{16.5, 0}, {17.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{271.68939572543337`, 286.50829625710423`}, {
           3.8479426521414126`, 90.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{18.5, 0}, {19.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{300.3271967887751, 315.14609732044596`}, {
           3.8479426521414126`, 90.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"degree\"", TraditionalForm], 
    FormBox["\"probability\"", TraditionalForm]},
  AxesOrigin->{-0.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-0.5, 19.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8860842627090454`*^9, 3.886086454103002*^9, 3.886088192598858*^9, 
   3.886088946877433*^9, 3.88609135326254*^9, 3.886092172016342*^9, 
   3.8861629175209494`*^9, 3.8861638338132358`*^9, 3.886166555198263*^9, 
   3.8861671170760937`*^9, 3.886167169213879*^9, 3.886167864689824*^9, 
   3.886168142078418*^9, 3.8861682579875317`*^9, 3.8861688988753977`*^9, {
   3.886250491999103*^9, 3.8862505102353296`*^9}, 3.8862506059175825`*^9, 
   3.886250685556711*^9, 3.8862509819500895`*^9, 3.8862511656157737`*^9, 
   3.8862525899784517`*^9, 3.88625352836088*^9, 3.8862536508135843`*^9, 
   3.8862536863346324`*^9, 3.8862543103662195`*^9, 3.8862545967168818`*^9, 
   3.88625464428189*^9, 3.886295444613366*^9, 3.8871511949459133`*^9, 
   3.887159953266431*^9, 3.8871636072678747`*^9, 3.88716370356112*^9, 
   3.887163777995059*^9, 3.8873260488347883`*^9, 3.887326487594426*^9, 
   3.887326546704504*^9, 3.887327479703432*^9, 3.8873275542852163`*^9, 
   3.887328612300871*^9, 3.887330327990625*^9, 3.8873304562257867`*^9, 
   3.8877494484287815`*^9, 3.887749553074874*^9, 3.887750125061624*^9, 
   3.8877502081554785`*^9, 3.8877502911769743`*^9, 3.887750346488265*^9, {
   3.8877503866378794`*^9, 3.88775041311697*^9}, 3.8877508383864655`*^9, 
   3.887750940795268*^9, 3.88775098399475*^9, 3.887753285077232*^9, 
   3.8877534128262067`*^9, 3.8877534551194797`*^9, 3.8877535115226245`*^9, {
   3.887753574545581*^9, 3.8877535922521224`*^9}, 3.8877536241607685`*^9, 
   3.8877536771979823`*^9, 3.887753718552676*^9, 3.887753761500642*^9, 
   3.8877538320842576`*^9, 3.8877550152259717`*^9, 3.8877550655704327`*^9, 
   3.8877559640363293`*^9, 3.8877560038777223`*^9, 3.8877560358362675`*^9, 
   3.887757214596599*^9, 3.887758444502604*^9, 3.887758550642313*^9, 
   3.887761895727667*^9, 3.8896753643460307`*^9, 3.889676444331806*^9, 
   3.8896765847854767`*^9, 3.8896769827958674`*^9, 3.889678445905897*^9, 
   3.8896789249783144`*^9, 3.8896789839805145`*^9, 3.889680190357185*^9, 
   3.889683236697693*^9, 3.889941825158744*^9, 3.8899441139631805`*^9, 
   3.889944345625061*^9, 3.8899444151571655`*^9, 3.8899445268393335`*^9, 
   3.8899578465505342`*^9, 3.889958688061241*^9, 3.8899602716544013`*^9, 
   3.8899631557646866`*^9, 3.8899633718385124`*^9, 3.890013122885646*^9, 
   3.890013748864919*^9, 3.890014004099276*^9, 3.8900144613554325`*^9, 
   3.890014540318701*^9, 3.890014851665393*^9, 3.8900151707676916`*^9, 
   3.8900153181126423`*^9, 3.8900173685226994`*^9, 3.8900179526898756`*^9, 
   3.8900180168958282`*^9, {3.890018135021016*^9, 3.8900181470005097`*^9}, 
   3.8900213068905706`*^9, 3.8900221040975466`*^9, 3.890023809471772*^9, 
   3.8900240828335576`*^9, 3.890025706079982*^9, 3.8900257736349754`*^9, 
   3.890026350671554*^9, 3.890026423198516*^9, 3.890026554489467*^9, 
   3.8900266199942756`*^9, 3.8900268272103977`*^9, 3.8900934443051386`*^9, 
   3.8900959798866663`*^9, 3.891773390893941*^9, 3.8917744553742743`*^9, 
   3.891778658202717*^9, 3.8917790529825745`*^9, 3.891779145182209*^9, 
   3.891779434679397*^9, 3.8917795360814714`*^9, 3.8917820331534004`*^9, 
   3.8943138662276015`*^9, 3.89431397544108*^9, 3.894314061381539*^9, 
   3.8943157196616745`*^9, 3.894315774532284*^9, 3.8943158950149145`*^9, 
   3.8943160612536545`*^9, 3.894316169613005*^9, 3.894316941133629*^9, 
   3.894317106786235*^9, 3.8943171991614556`*^9, 3.894318276301256*^9, 
   3.894318317386733*^9, 3.894319483584978*^9, 3.8943282652324963`*^9, 
   3.8943285603000374`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"f98a7b64-1a35-499d-8d51-77fffdd6442c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"realDataUntil2020", "=", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "18", ",", "5", ",", "2", ",", "  ", "4", " ", ",", "   ", "9", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "5", ",", " ", "0", ",", " ", 
       "3", ",", "   ", "1", ",", "   ", "5", ",", "    ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "3", ",", "6", ",", "0", ",", "  ", "2", " ", ",", "   ", "2", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", " ", 
       "0", ",", "   ", "0", ",", "   ", "1", ",", "   ", "0", ",", "    ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "1", ",", "3", ",", "3", ",", "  ", "4", " ", ",", "   ", "3", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", " ", 
       "0", ",", "   ", "0", ",", "   ", "1", ",", "   ", "0", ",", "    ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "9", ",", "0", ",", "0", ",", " ", "68", ",", "  ", "25", ",", "  ", 
       "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", " ", "6", ",",
        "  ", "12", ",", "   ", "0", ",", "   ", "6", ",", "    ", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{
      "19", ",", "4", ",", "1", ",", "57", ",", " ", "139", ",", "  ", "0", 
       ",", "  ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "7", ",", "  ",
        "62", ",", "  ", "0", ",", "  ", "44", ",", "  ", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "0", ",", 
       "  ", "5", ",", "  ", "4", ",", "  ", "0", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "0", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "0", ",", 
       "  ", "3", ",", "  ", "2", ",", "  ", "0", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "0", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "6", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "1", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "2", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "3", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "0", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "0", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "0", ",", 
       "  ", "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "0", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "8", ",", "2", ",", "0", ",", "44", " ", ",", " ", "85", ",", " ", "0", 
       ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", "  ", "4", ",", 
       "  ", "53", ",", "   ", "0", ",", "  ", "35", ",", "  ", "0"}], "}"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "8", ",", "1", ",", "0", ",", "  ", "0", " ", ",", "   ", "1", ",", 
       "  ", "1", ",", "  ", "0", ",", "  ", "2", ",", " ", "0", ",", "  ", 
       "0", ",", "   ", "0", ",", "    ", "6", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", " ", "25", " ", ",", " ", "59", ",", "  ",
        "0", ",", "  ", "0", ",", " ", "0", ",", " ", "0", ",", "  ", "1", 
       ",", "  ", "47", ",", "   ", "0", ",", "  ", "37", ",", "  ", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "  ", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "  ", "0", " ", ",", "   ", "0", ",", 
       "   ", "0", ",", "  ", "0", ",", "  ", "0", ",", " ", "0", ",", "  ", 
       "0", ",", "    ", "0", ",", "    ", "0", ",", "   ", "0", ",", "   ", 
       "0"}], "}"}]}], " ", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realDataUntil2020", "=", 
   RowBox[{"realDataUntil2020", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", 
       RowBox[{"Length", "@", "realDataUntil2020"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"g1", "=", 
  RowBox[{"draw", "@", "realDataUntil2020"}]}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"VertexDegree", "[", "g1", "]"}], ",", 
   RowBox[{"{", "1", "}"}], ",", "\"\<Probability\>\"", ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<degree\>\"", ",", "\"\<probability\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8943161429462132`*^9, 3.8943161587627783`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"df26e809-bc18-4352-bceb-017e01726c7b"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5389999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5389999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{-0.5, 0}, {0.5, 0.14285714285714285`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{28.26808668702872, 
           42.405134812429544`}, {-81.88223969571722, 90.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.14285714285714285`]& ,
        TagBoxNote->"0.14285714285714285"],
       StyleBox["0.14285714285714285`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.14285714285714285`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.5, 0}, {5.5, 0.14285714285714285`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{96.45332731403283, 
           110.59037543943364`}, {-81.88223969571722, 90.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.14285714285714285`]& ,
        TagBoxNote->"0.14285714285714285"],
       StyleBox["0.14285714285714285`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.14285714285714285`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.5, 0}, {6.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.09037543943364`, 124.22742356483447`}, {
           3.847942652141384, 90.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.5, 0}, {7.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{123.72742356483447`, 137.8644716902353}, {
           3.847942652141384, 90.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.5, 0}, {9.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{151.0015198156361, 165.1385679410369}, {
           3.847942652141384, 90.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.5, 0}, {10.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{164.6385679410369, 178.77561606643775`}, {
           3.847942652141384, 90.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{10.5, 0}, {11.5, 0.14285714285714285`}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{178.27561606643775`, 
           192.4126641918386}, {-81.88223969571722, 90.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.14285714285714285`]& ,
        TagBoxNote->"0.14285714285714285"],
       StyleBox["0.14285714285714285`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.14285714285714285`, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11.5, 0}, {12.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{191.9126641918386, 206.04971231723937`}, {
           3.847942652141384, 90.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{12.5, 0}, {13.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{205.54971231723937`, 219.6867604426402}, {
           3.847942652141384, 90.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{16.5, 0}, {17.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{260.09790481884266`, 274.2349529442435}, {
           3.847942652141384, 90.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{19.5, 0}, {20.5, 0.07142857142857142}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{301.0090491950451, 315.14609732044596`}, {
           3.847942652141384, 90.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.07142857142857142]& ,
        TagBoxNote->"0.07142857142857142"],
       StyleBox["0.07142857142857142`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.07142857142857142, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"degree\"", TraditionalForm], 
    FormBox["\"probability\"", TraditionalForm]},
  AxesOrigin->{-0.9199999999999999, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-0.5, 20.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8943161696770697`*^9, 3.8943169411869855`*^9, 
  3.894317106839694*^9, 3.894317199214981*^9, 3.894318276363787*^9, 
  3.8943183174402103`*^9, 3.894319483648463*^9, 3.894328265291222*^9, 
  3.894328560427037*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"57373639-fd7b-40d1-a465-b9fba7c0952d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pts", "[", 
     RowBox[{"m_", ",", "r_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pts", ",", "DCr", ",", " ", "DCm", ",", " ", "CCr", ",", "CCm", ",", 
        "BCm", ",", " ", "BCr", ",", " ", "EVCr", ",", " ", "EVCm", ",", " ", 
        "ICr", ",", " ", "ICm"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pts", "=", "0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"DCm", " ", "=", " ", 
        RowBox[{"Mean", "[", 
         RowBox[{"DegreeCentrality", "@", 
          RowBox[{"IGWeightedAdjacencyGraph", "@", "m"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DCr", " ", "=", " ", 
        RowBox[{"Mean", "[", 
         RowBox[{"DegreeCentrality", "@", 
          RowBox[{"IGWeightedAdjacencyGraph", "@", "r"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"CCm", "=", 
        RowBox[{"Mean", "[", 
         RowBox[{"ClosenessCentrality", "@", 
          RowBox[{"IGWeightedAdjacencyGraph", "@", "m"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CCr", "=", 
        RowBox[{"Mean", "[", 
         RowBox[{"ClosenessCentrality", "@", 
          RowBox[{"IGWeightedAdjacencyGraph", "@", "r"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"BCm", "=", 
        RowBox[{"Mean", "[", 
         RowBox[{"IGBetweenness", "@", 
          RowBox[{"IGWeightedAdjacencyGraph", "@", "m"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"BCr", "=", 
        RowBox[{"Mean", "[", 
         RowBox[{"IGBetweenness", "@", 
          RowBox[{"IGWeightedAdjacencyGraph", "@", "r"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"EVCm", "=", 
        RowBox[{"Mean", "[", 
         RowBox[{"IGEigenvectorCentrality", "@", 
          RowBox[{"WeightedAdjacencyGraph", "@", "m"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"EVCr", "=", 
        RowBox[{"Mean", "[", 
         RowBox[{"IGEigenvectorCentrality", "@", 
          RowBox[{"WeightedAdjacencyGraph", "@", "r"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Information", " ", "centrality"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"pts", "=", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"DCr", "-", "DCm"}], "DCr"], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"CCr", "-", "CCm"}], "CCr"], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"BCr", "-", "BCm"}], "BCr"], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"EVCr", "-", "EVCm"}], "EVCr"], ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pts", "*=", "1000"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "@", "pts"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.890024046229046*^9, 3.8900240485905256`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"66540c44-41fa-4cb8-b32e-21219ec9ef6d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"calculateFitness", "[", 
     RowBox[{
     "f_", ",", "fLimit_", ",", "swarmDim_", ",", "\[IndentingNewLine]", " ", 
      "NPForInnerPSO_", ",", "c1_", ",", " ", "c2_", ",", " ", "w_", ",", 
      "  ", "iterationsForInnerPSO_", ",", " ", "swarmPositionForInnerPSO_", 
      ",", " ", "realData_", ",", " ", "pts_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "communicationList", ",", " ", "capturedDataFromPSO", ",", " ", 
        "sortedCapturedDataFromPSO", ",", "\[IndentingNewLine]", 
        "matrixFormSortedCapturedDataFromPSO", ",", " ", "testList", ",", " ",
         "capturedFromPSO", ",", "\[IndentingNewLine]", "subList", ",", 
        "particlePositionCost", ",", "\[IndentingNewLine]", "m", ",", "p"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"communicationList", " ", "=", " ", 
        RowBox[{"PSOAlgorithmInner", "[", 
         RowBox[{
         "f", ",", "fLimit", ",", "swarmDim", ",", "NPForInnerPSO", ",", "c1",
           ",", "c2", ",", "w", ",", " ", "iterationsForInnerPSO", ",", " ", 
          "swarmPositionForInnerPSO"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Output from inner PSO inside loop = \>\"", ",", 
           "communicationList"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"capturedDataFromPSO", "=", "communicationList"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sortedCapturedDataFromPSO", " ", "=", " ", 
        RowBox[{"Sort", "[", 
         RowBox[{"capturedDataFromPSO", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "<", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<sorted communicationList inside loop= \>\"", ",", 
           "sortedCapturedDataFromPSO"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"matrixFormSortedCapturedDataFromPSO", " ", "=", " ", 
        RowBox[{
         RowBox[{"AdjacencyMatrix", "@", "capturedDataFromPSO"}], " ", "//", 
         "MatrixForm"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"testList", "=", 
        RowBox[{"AdjacencyMatrix", "@", "sortedCapturedDataFromPSO"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<testList communicationList inside loop= \>\"", ",", 
           "testList"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"capturedFromPSO", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"m", "=", "1"}], ",", 
         RowBox[{"m", "<=", 
          RowBox[{"Length", "@", "testList"}]}], ",", 
         RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"subList", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"p", "=", "1"}], ",", 
            RowBox[{"p", "<=", 
             RowBox[{"Length", "@", "testList"}]}], ",", 
            RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"subList", ",", " ", 
               RowBox[{
                RowBox[{"testList", "[", 
                 RowBox[{"[", "m", "]"}], "]"}], "[", 
                RowBox[{"[", "p", "]"}], "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"capturedFromPSO", ",", " ", "subList"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"capturedFromPSO", "=", 
        RowBox[{"capturedFromPSO", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"1", ";;", 
            RowBox[{"Length", "@", "capturedFromPSO"}]}]}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<capturedfrom PSO inside loop= \>\"", ",", "capturedFromPSO"}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"particlePositionCost", " ", "=", 
        RowBox[{"pts", "[", 
         RowBox[{"capturedFromPSO", ",", "realData"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "@", "particlePositionCost"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8900240585478497`*^9, 3.890024060487437*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"0ef5323a-b87b-4a75-b48a-70006857e9ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PSOAlgorithmInnerWithPSORegressionCall", "[", 
    RowBox[{
    "f_", ",", " ", "fLimit_", ",", " ", "swarmDim_", ",", " ", "NP_", ",", 
     " ", "c1_", ",", " ", "c2_", ",", " ", "w_", ",", " ", "iterations_"}], 
    "\[IndentingNewLine]", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "inertia", ",", "swarmPosition", ",", "swarmPositionTemp", ",", 
       "swarmVelocity", ",", "pBestPosition", ",", "\[IndentingNewLine]", 
       "pBestCost", ",", "swarmPositionCost", ",", "swarmPositionCostTemp", 
       ",", "gBestPosition", ",", "gBestPositionIndex", ",", 
       "\[IndentingNewLine]", "gBestCost", ",", "FitnessFunction", ",", 
       "fLowerBound", ",", "fUpperBound", ",", "f1", ",", 
       "\[IndentingNewLine]", "rand1", ",", "\[IndentingNewLine]", "rand2", 
       ",", "\[IndentingNewLine]", "i", ",", "j", ",", "k", ",", "n", ",", 
       "l", ",", "\[IndentingNewLine]", "boundry", ",", "\[IndentingNewLine]",
        "historyGBestPosition", ",", "historyGBestCost", ",", 
       "communicationList", ",", "\[IndentingNewLine]", "it", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"new", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
       "capturedDataFromPSO", ",", " ", "sortedCapturedDataFromPSO", ",", 
       "\[IndentingNewLine]", "matrixFormSortedCapturedDataFromPSO", ",", " ",
        "testList", ",", "\[IndentingNewLine]", "capturedFromPSO", ",", " ", 
       "subList", ",", " ", "g1", ",", " ", "ptsHistory"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inertia", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"NP", ",", "swarmDim"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"swarmPosition", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"NP", ",", "swarmDim"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"swarmPositionTemp", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"swarmVelocity", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"NP", ",", "swarmDim"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pBestPosition", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"NP", ",", "swarmDim"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pBestCost", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "NP"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"swarmPositionCostTemp", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "swarmDim"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"swarmPositionCost", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "NP"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"swarmPositionCostTemp", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"gBestPosition", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "swarmDim"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gBestCost", "=", "0"}], ";", "\[IndentingNewLine]", 
      "gBestPositionIndex", ";", "\[IndentingNewLine]", 
      RowBox[{"FitnessFunction", "=", "f"}], ";", "\[IndentingNewLine]", 
      RowBox[{"f1", "=", "FitnessFunction"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fLowerBound", "=", 
       RowBox[{"fLimit", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fUpperBound", "=", 
       RowBox[{"fLimit", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"boundry", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"historyGBestPosition", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"historyGBestCost", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"communicationList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"new", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"capturedDataFromPSO", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sortedCapturedDataFromPSO", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrixFormSortedCapturedDataFromPSO", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"testList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"capturedFromPSO", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ptsHistory", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Initialization", " ", "start"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"swarmPosition", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fLowerBound", ",", "fUpperBound"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"NP", ",", "swarmDim"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"swarmVelocity", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"NP", ",", "swarmDim"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pBestPosition", "=", "swarmPosition"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f1", "[", "x__", "]"}], ":=", 
       RowBox[{"Re", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"FitnessFunction", ",", 
          RowBox[{"{", "x", "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"swarmPositionCost", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"f1", "[", 
          RowBox[{"swarmPosition", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "NP"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pBestCost", "=", "swarmPositionCost"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gBestCost", "=", 
       RowBox[{"Min", "[", "pBestCost", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gBestPosition", "=", 
       RowBox[{"pBestPosition", "[", 
        RowBox[{"[", 
         RowBox[{"First", "@", 
          RowBox[{"First", "@", 
           RowBox[{"Position", "[", 
            RowBox[{"swarmPositionCost", ",", "gBestCost"}], "]"}]}]}], "]"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gBestPositionIndex", "=", 
       RowBox[{"First", "@", 
        RowBox[{"First", "@", 
         RowBox[{"Position", "[", 
          RowBox[{"swarmPositionCost", ",", "gBestCost"}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Initial", " ", "communication"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"communicationList", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "@", 
            RowBox[{"First", "@", 
             RowBox[{"Position", "[", 
              RowBox[{"swarmPosition", ",", " ", 
               RowBox[{"pBestPosition", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}]}], 
           "\[UndirectedEdge]", " ", "gBestPositionIndex"}], "}"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{"First", "@", 
           RowBox[{"First", "@", 
            RowBox[{"Position", "[", 
             RowBox[{"swarmPosition", ",", " ", 
              RowBox[{"pBestPosition", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}]}], 
          "\[UndirectedEdge]", " ", "gBestPositionIndex"}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"l", "=", "1"}], ",", 
        RowBox[{"l", "<=", 
         RowBox[{"Length", "@", "swarmPosition"}]}], ",", 
        RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"l", "==", " ", "gBestPositionIndex"}], ",", " ", 
           RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
         RowBox[{"(*", 
          RowBox[{
          "This", " ", "is", " ", "to", " ", "avoid", " ", "double", " ", 
           "connection", " ", "between", " ", "gBest", " ", "and", " ", 
           "current", " ", "particle", " ", "position"}], "*)"}], 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"communicationList", ",", " ", 
           RowBox[{
           "gBestPositionIndex", " ", "\[UndirectedEdge]", " ", "l"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Main", " ", "Loop"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"it", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"it", "<", " ", "iterations"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Update", " ", "the", " ", "velocity", " ", "and", " ", "position", 
           " ", "vectors"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "\[LessEqual]", "  ", 
              RowBox[{"(", "NP", ")"}]}], ",", 
             RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", "=", "1"}], ",", 
                RowBox[{"j", "\[LessEqual]", "  ", 
                 RowBox[{"(", "swarmDim", ")"}]}], ",", 
                RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"rand1", "=", 
                  RowBox[{"RandomReal", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"rand2", "=", 
                  RowBox[{"RandomReal", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"inertia", "=", 
                  RowBox[{"w", "*", 
                   RowBox[{
                    RowBox[{"swarmVelocity", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"swarmVelocity", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "=", " ", 
                  RowBox[{"inertia", " ", "+", " ", 
                   RowBox[{"(", 
                    RowBox[{"c1", " ", "*", " ", "rand1", " ", "*", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", " ", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(", 
                    RowBox[{"c2", " ", "*", "rand2", " ", "*", " ", 
                    RowBox[{"(", 
                    RowBox[{"gBestPosition", " ", "-", " ", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Update", " ", "the", " ", 
                RowBox[{"particle", "'"}], "s", " ", "position"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"swarmPosition", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", "+=", 
               RowBox[{"swarmVelocity", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", "=", "1"}], ",", 
                RowBox[{"j", "<=", "swarmDim"}], ",", 
                RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "<", 
                    "fLowerBound"}], ",", 
                   RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
                    RowBox[{"RandomReal", "@", "fLimit"}]}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", 
                    "fUpperBound"}], ",", 
                   RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
                    RowBox[{"RandomReal", "@", "fLimit"}]}]}], "]"}], ";"}]}],
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"n", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"f1", "[", "x__", "]"}], ":=", 
               RowBox[{"Map", "[", 
                RowBox[{"FitnessFunction", ",", 
                 RowBox[{"{", "x", "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"swarmPositionCost", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"f1", "[", 
                  RowBox[{"swarmPosition", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "NP"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Update", " ", "pBest", " ", "and", " ", "gBest"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"swarmPositionCost", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "<=", " ", 
                 RowBox[{"pBestCost", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"pBestCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                   RowBox[{"swarmPositionCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                   RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"pBestCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<=", " ", "gBestCost"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"communicationList", ",", 
                    RowBox[{
                    RowBox[{"First", "@", 
                    RowBox[{"First", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"swarmPosition", ",", " ", 
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}]}], 
                    "\[UndirectedEdge]", " ", "gBestPositionIndex"}]}], "]"}],
                     ";", " ", "\[IndentingNewLine]", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"l", "=", "1"}], ",", 
                    RowBox[{"l", "<=", 
                    RowBox[{"Length", "@", "swarmPosition"}]}], ",", 
                    RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"l", "==", " ", "gBestPositionIndex"}], ",", " ", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    RowBox[{"(*", 
                    RowBox[{
                    "This", " ", "is", " ", "to", " ", "avoid", " ", "double",
                     " ", "connection", " ", "between", " ", "gBest", " ", 
                    "and", " ", "current", " ", "particle", " ", "position"}],
                     "*)"}], "\[IndentingNewLine]", "\t", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"communicationList", ",", " ", 
                    RowBox[{"i", " ", "\[UndirectedEdge]", " ", "l"}]}], 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gBestCost", "=", 
                    RowBox[{"pBestCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gBestPosition", "=", 
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gBestPositionIndex", "=", 
                    RowBox[{"First", "@", 
                    RowBox[{"First", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"swarmPosition", ",", " ", 
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}]}]}], ";"}],
                     "\[IndentingNewLine]", "}"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]",
                  "}"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"historyGBestPosition", ",", "gBestPosition"}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"historyGBestCost", ",", "gBestCost"}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"it", "++"}]}], "\[IndentingNewLine]", "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "@", "communicationList"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"fc60e6af-77b4-46b3-a547-0cd21008cb1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PSOAlgorithmInner", "[", 
     RowBox[{
     "f_", ",", " ", "fLimit_", ",", " ", "swarmDim_", ",", " ", "NP_", ",", 
      " ", "c1_", ",", " ", "c2_", ",", " ", "w_", ",", " ", "iterations_", 
      ",", " ", "swarmPositionFromOuterPSO_"}], "\[IndentingNewLine]", "]"}], 
    ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "inertia", ",", "swarmPosition", ",", "swarmVelocity", ",", 
        "pBestPosition", ",", "\[IndentingNewLine]", "pBestCost", ",", 
        "swarmPositionCost", ",", "gBestPosition", ",", "gBestPositionIndex", 
        ",", "\[IndentingNewLine]", "gBestCost", ",", "FitnessFunction", ",", 
        "fLowerBound", ",", "fUpperBound", ",", "f1", ",", 
        "\[IndentingNewLine]", "rand1", ",", "\[IndentingNewLine]", "rand2", 
        ",", "\[IndentingNewLine]", "i", ",", "j", ",", "n", ",", 
        "\[IndentingNewLine]", "historyGBestPosition", ",", 
        "historyGBestCost", ",", "communicationList", ",", 
        "\[IndentingNewLine]", "it"}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"inertia", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"NP", ",", "swarmDim"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"swarmPosition", "=", "swarmPositionFromOuterPSO"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"swarmVelocity", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"NP", ",", "swarmDim"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pBestPosition", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"NP", ",", "swarmDim"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pBestCost", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", "NP"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"swarmPositionCost", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", "NP"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"gBestPosition", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", "swarmDim"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"gBestCost", "=", "0"}], ";", "\[IndentingNewLine]", 
       "gBestPositionIndex", ";", "\[IndentingNewLine]", 
       RowBox[{"FitnessFunction", "=", "f"}], ";", "\[IndentingNewLine]", 
       RowBox[{"f1", "=", "FitnessFunction"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fLowerBound", "=", 
        RowBox[{"fLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fUpperBound", "=", 
        RowBox[{"fLimit", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"historyGBestPosition", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"historyGBestCost", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"communicationList", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"swarmVelocity", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"NP", ",", "swarmDim"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pBestPosition", "=", "swarmPosition"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f1", "[", "x__", "]"}], ":=", 
        RowBox[{"Re", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"FitnessFunction", ",", 
           RowBox[{"{", "x", "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"swarmPositionCost", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"f1", "[", 
           RowBox[{"swarmPosition", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "NP"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pBestCost", "=", "swarmPositionCost"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gBestCost", "=", 
        RowBox[{"Min", "[", "pBestCost", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"gBestPosition", "=", 
        RowBox[{"pBestPosition", "[", 
         RowBox[{"[", 
          RowBox[{"First", "@", 
           RowBox[{"First", "@", 
            RowBox[{"Position", "[", 
             RowBox[{"swarmPositionCost", ",", "gBestCost"}], "]"}]}]}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"gBestPositionIndex", "=", 
        RowBox[{"First", "@", 
         RowBox[{"First", "@", 
          RowBox[{"Position", "[", 
           RowBox[{"swarmPositionCost", ",", "gBestCost"}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "<=", 
          RowBox[{"Length", "@", "swarmPosition"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"j", "==", " ", "gBestPositionIndex"}], ",", " ", 
            RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
          RowBox[{"(*", 
           RowBox[{
           "This", " ", "is", " ", "to", " ", "avoid", " ", "double", " ", 
            "connection", " ", "between", " ", "gBest", " ", "and", " ", 
            "current", " ", "particle", " ", "position"}], "*)"}], 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"communicationList", ",", " ", 
            RowBox[{
            "gBestPositionIndex", " ", "\[UndirectedEdge]", " ", "j"}]}], 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Main", " ", "Loop"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"it", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"it", "<", " ", "iterations"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Update", " ", "the", " ", "velocity", " ", "and", " ", "position",
             " ", "vectors"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "\[LessEqual]", "  ", 
               RowBox[{"(", "NP", ")"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "1"}], ",", 
                 RowBox[{"j", "\[LessEqual]", "  ", 
                  RowBox[{"(", "swarmDim", ")"}]}], ",", 
                 RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"rand1", "=", 
                   RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"rand2", "=", 
                   RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"inertia", "=", 
                   RowBox[{"w", "*", 
                    RowBox[{
                    RowBox[{"swarmVelocity", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"swarmVelocity", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", " ", 
                   RowBox[{"inertia", " ", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{"c1", " ", "*", " ", "rand1", " ", "*", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", " ", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{"c2", " ", "*", "rand2", " ", "*", " ", 
                    RowBox[{"(", 
                    RowBox[{"gBestPosition", " ", "-", " ", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Update", " ", "the", " ", 
                 RowBox[{"particle", "'"}], "s", " ", "position"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"swarmPosition", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "+=", 
                RowBox[{"swarmVelocity", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "1"}], ",", 
                 RowBox[{"j", "<=", "swarmDim"}], ",", 
                 RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "<", 
                    "fLowerBound"}], ",", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
                    RowBox[{"RandomReal", "@", "fLimit"}]}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", 
                    "fUpperBound"}], ",", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
                    RowBox[{"RandomReal", "@", "fLimit"}]}]}], "]"}], ";"}]}],
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"n", "=", "0"}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"f1", "[", "x__", "]"}], ":=", 
                RowBox[{"Map", "[", 
                 RowBox[{"FitnessFunction", ",", 
                  RowBox[{"{", "x", "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"swarmPositionCost", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"f1", "[", 
                   RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "NP"}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Update", " ", "pBest", " ", "and", " ", "gBest"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"swarmPositionCost", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "<=", " ", 
                  RowBox[{"pBestCost", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"pBestCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{"swarmPositionCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pBestCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<=", " ", "gBestCost"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"communicationList", ",", 
                    RowBox[{
                    RowBox[{"First", "@", 
                    RowBox[{"First", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"swarmPosition", ",", " ", 
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}]}], 
                    "\[UndirectedEdge]", " ", "gBestPositionIndex"}]}], "]"}],
                     ";", " ", "\[IndentingNewLine]", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "<=", 
                    RowBox[{"Length", "@", "swarmPosition"}]}], ",", 
                    RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"j", "==", " ", "gBestPositionIndex"}], ",", " ", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                    RowBox[{"(*", 
                    RowBox[{
                    "This", " ", "is", " ", "to", " ", "avoid", " ", "double",
                     " ", "connection", " ", "between", " ", "gBest", " ", 
                    "and", " ", "current", " ", "particle", " ", "position"}],
                     "*)"}], "\[IndentingNewLine]", "\t", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"communicationList", ",", " ", 
                    RowBox[{"i", " ", "\[UndirectedEdge]", " ", "j"}]}], 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gBestCost", "=", 
                    RowBox[{"pBestCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gBestPosition", "=", 
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gBestPositionIndex", "=", 
                    RowBox[{"First", "@", 
                    RowBox[{"First", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"swarmPosition", ",", " ", 
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}]}]}], ";"}],
                     "\[IndentingNewLine]", "}"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}], 
                  "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"historyGBestPosition", ",", "gBestPosition"}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"historyGBestCost", ",", "gBestCost"}], "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"it", "++"}]}], "\[IndentingNewLine]", "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "@", "communicationList"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8860844056603394`*^9, 3.886084425507552*^9}, {
   3.8861652682749147`*^9, 3.886165298156562*^9}, {3.886165505864472*^9, 
   3.8861655717945023`*^9}, {3.886165647122263*^9, 3.8861656483068767`*^9}, {
   3.886165686176578*^9, 3.8861657127348924`*^9}, 3.886167768885021*^9, {
   3.889943509886253*^9, 3.889943538591707*^9}, {3.8899435760124917`*^9, 
   3.889943578266316*^9}, 3.889943856897509*^9, {3.8900160565900435`*^9, 
   3.89001605691848*^9}, 3.890022080415599*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"fc90d076-fdcd-4600-aac6-080f4dc2895a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PSOAlgorithmOuter", "[", " ", 
     RowBox[{"f_", ",", "swarmDimInnerPSO_", ",", "fLimit_", ",", 
      RowBox[{"(*", 
       RowBox[{"just", " ", "for", " ", "inner"}], "*)"}], 
      "\[IndentingNewLine]", " ", "NPForInnerPSO_", ",", "NPForOuterPSO_", 
      ",", "  ", "iterationsForInnerPSO_", ",", "iterationsForOuterPSO_", ",",
       "\[IndentingNewLine]", " ", "c1_", ",", " ", "c2_", ",", " ", "w_", 
      ",", " ", "realData_", ",", " ", "pts_", ",", " ", "calculateFitness_", 
      ",", "swarmDimOuterPSO_", ",", "c1Limit_", ",", "c2Limit_", ",", 
      "wLimit_", ",", "lusSearchIterations_"}], 
     RowBox[{"(*", 
      RowBox[{"just", " ", "for", " ", "outer"}], "*)"}], 
     "\[IndentingNewLine]", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "inertia", ",", "swarmPosition", ",", "swarmVelocity", ",", 
        "pBestPosition", ",", "\[IndentingNewLine]", "pBestCost", ",", 
        "swarmPositionCost", ",", "gBestPosition", ",", "\[IndentingNewLine]",
         "gBestCost", ",", "fLowerBound", ",", "fUpperBound", ",", 
        "\[IndentingNewLine]", "rand1", ",", "\[IndentingNewLine]", "rand2", 
        ",", "\[IndentingNewLine]", "i", ",", "j", ",", "\[IndentingNewLine]",
         "historyGBestPosition", ",", "historyGBestCost", ",", 
        "\[IndentingNewLine]", "it", ",", " ", "particlePositionCost", ",", 
        "\[IndentingNewLine]", "c1Parameter", ",", " ", "c2Parameter", ",", 
        " ", "wParametere", " ", ",", "\[IndentingNewLine]", "c1LowerLimit", 
        ",", "\[IndentingNewLine]", "c1UpperLimit", ",", " ", "c2LowerLimit", 
        ",", "c2UpperLimit", ",", "\[IndentingNewLine]", "wLowerLimit", ",", 
        " ", "wUpperLimit", ",", "\[IndentingNewLine]", " ", 
        "swarmPositionForInnerPSO", ",", "\[IndentingNewLine]", "sigma", ",", 
        " ", "lucRadius", ",", " ", "lBestPosition", ",", " ", "lBestFitness",
         ",", " ", "candidatePositionLus", ",", "candidateFitnessLus", ",", 
        "\[IndentingNewLine]", "predictionDataList"}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lBestPosition", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", "swarmDimOuterPSO"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lBestFitness", "=", "0.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sigma", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"lucRadius", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fLowerBound", "=", 
        RowBox[{"fLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fUpperBound", "=", 
        RowBox[{"fLimit", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"swarmPositionForInnerPSO", "=", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fLowerBound", ",", "fUpperBound"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"NPForInnerPSO", ",", "swarmDimInnerPSO"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inertia", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"NPForOuterPSO", ",", "swarmDimOuterPSO"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"swarmPosition", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"NPForOuterPSO", ",", "swarmDimOuterPSO"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"swarmVelocity", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"NPForOuterPSO", ",", "swarmDimOuterPSO"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pBestPosition", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"NPForOuterPSO", ",", "swarmDimOuterPSO"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pBestCost", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", "NPForOuterPSO"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"swarmPositionCost", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", "NPForOuterPSO"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gBestPosition", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", "swarmDimOuterPSO"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"historyGBestPosition", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"historyGBestCost", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c1LowerLimit", "=", 
        RowBox[{"c1Limit", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c1UpperLimit", "=", 
        RowBox[{"c1Limit", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c1Parameter", " ", "=", " ", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"c1LowerLimit", ",", "c1UpperLimit"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"NPForOuterPSO", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"c1Parameter", "=", 
        RowBox[{"Flatten", "@", "c1Parameter"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"c2LowerLimit", "=", 
        RowBox[{"c2Limit", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c2UpperLimit", "=", 
        RowBox[{"c2Limit", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c2Parameter", " ", "=", " ", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"c2LowerLimit", ",", "c2UpperLimit"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"NPForOuterPSO", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"c2Parameter", "=", 
        RowBox[{"Flatten", "@", "c2Parameter"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"wLowerLimit", "=", 
        RowBox[{"wLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wUpperLimit", "=", 
        RowBox[{"wLimit", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wParametere", " ", "=", " ", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"wLowerLimit", ",", "wUpperLimit"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"NPForOuterPSO", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"wParametere", "=", 
        RowBox[{"Flatten", "@", "wParametere"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"particlePositionCost", "=", "0"}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"predictionDataList", "=", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"iterationsForOuterPSO", ",", "4"}], "}"}]}], "]"}]}], 
         ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"predictionDataList", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "<=", "NPForOuterPSO"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"swarmPosition", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c1Parameter", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
             RowBox[{"c2Parameter", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"wParametere", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Initial outerPSO population\>\"", ",", " ", "swarmPosition"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"pBestPosition", "=", "swarmPosition"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "<=", " ", "NPForOuterPSO"}], ",", " ", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"particlePositionCost", " ", "=", " ", 
           RowBox[{"calculateFitness", "[", 
            RowBox[{
            "f", ",", "fLimit", " ", ",", "swarmDimInnerPSO", ",", 
             "NPForInnerPSO", ",", 
             RowBox[{
              RowBox[{"swarmPosition", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"swarmPosition", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"swarmPosition", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
             "iterationsForInnerPSO", ",", " ", "swarmPositionForInnerPSO", 
             ",", "realData", ",", " ", "pts"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"swarmPositionCost", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", " ", 
           "particlePositionCost"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Initial outerPSO population cost (pBest)\>\"", ",", " ", 
         "swarmPositionCost"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"pBestCost", "=", "swarmPositionCost"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gBestCost", "=", 
        RowBox[{"Min", "[", "pBestCost", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"gBestPosition", "=", 
        RowBox[{"pBestPosition", "[", 
         RowBox[{"[", 
          RowBox[{"First", "@", 
           RowBox[{"First", "@", 
            RowBox[{"Position", "[", 
             RowBox[{"swarmPositionCost", ",", "gBestCost"}], "]"}]}]}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Initial outerPSO gBest position\>\"", ",", " ", 
         "gBestPosition"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Initial outerPSO gBest cost\>\"", ",", " ", "gBestCost"}], "]"}],
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"it", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"it", "<", " ", "iterationsForOuterPSO"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<OuterPSO iteration number it = \>\"", ",", " ", "it"}], 
             "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "\[LessEqual]", "  ", 
               RowBox[{"(", "NPForOuterPSO", ")"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "calculate", " ", "standard", " ", "deviation", " ", "sigma", 
                " ", "of", " ", "distances", " ", "between", " ", "the", " ", 
                "particle", " ", "and", " ", "the", " ", "global", " ", 
                "best", " ", "position", " ", "in", " ", "each", " ", 
                "dimension"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"sigma", "=", 
                 RowBox[{"StandardDeviation", "[", 
                  RowBox[{"gBestPosition", "-", 
                   RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"lucRadius", " ", "=", " ", "sigma"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<standard deviation sigma is \>\"", ",", " ", 
                    "lucRadius"}], "]"}], ";"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"lBestPosition", "=", 
                 RowBox[{"swarmPosition", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"lBestFitness", " ", "=", " ", 
                 RowBox[{"calculateFitness", "[", 
                  RowBox[{
                  "f", ",", "fLimit", ",", "swarmDimInnerPSO", ",", 
                   "NPForInnerPSO", ",", 
                   RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                   "iterationsForInnerPSO", ",", " ", 
                   "swarmPositionForInnerPSO", ",", " ", "realData", ",", " ",
                    "pts"}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Fitness of particle in outerPSO at position = \>\"", 
                  ",", "i", ",", "lBestFitness"}], " ", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<Fitness for initial position for local search \>\"", 
                    ",", " ", "lBestFitness"}], "]"}], ";"}], "*)"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"j", "=", "1"}], ",", 
                  RowBox[{"j", "<=", "lusSearchIterations"}], ",", 
                  RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"candidatePositionLus", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"lucRadius", " ", "*", " ", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", "1"}], "]"}], ",", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}]}]}]}], 
                   ";"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Candidate position for local search \>\"", ",", " ", 
                  "candidatePositionLus"}], "]"}], ";"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"candidatePositionLus", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", ">", 
                    "c1LowerLimit"}], "  ", "&&", "  ", 
                    RowBox[{
                    RowBox[{"candidatePositionLus", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<", "c1UpperLimit"}], 
                    "  ", "&&", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"candidatePositionLus", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", ">", 
                    "c2LowerLimit"}], "  ", "&&", " ", 
                    RowBox[{
                    RowBox[{"candidatePositionLus", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "<", 
                    "c2UpperLimit"}], "  ", "&&", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"candidatePositionLus", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", ">", "wLowerLimit"}],
                     "  ", "&&", " ", 
                    RowBox[{
                    RowBox[{"candidatePositionLus", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "<", 
                    "wUpperLimit"}]}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", "    ", 
                    RowBox[{
                    RowBox[{"candidateFitnessLus", " ", "=", " ", 
                    RowBox[{"calculateFitness", "[", 
                    RowBox[{
                    "f", ",", "fLimit", ",", "swarmDimInnerPSO", ",", 
                    "NPForInnerPSO", ",", 
                    RowBox[{"candidatePositionLus", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"candidatePositionLus", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"candidatePositionLus", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                    "iterationsForInnerPSO", ",", " ", 
                    "swarmPositionForInnerPSO", ",", "  ", "realData", ",", 
                    " ", "pts"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Candidate position for local search is within the \
boundary and its fitness is \>\"", ",", " ", "candidateFitnessLus"}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "candidateFitnessLus", " ", "<", "  ", "lBestFitness"}], 
                    ",", "\[IndentingNewLine]", "\t", 
                    RowBox[{
                    RowBox[{
                    "lBestFitness", " ", "=", " ", "candidateFitnessLus"}], 
                    ";", "\[IndentingNewLine]", "\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"swarmPositionCost", "=", "lBestFitness"}], ";"}],
                     "*)"}], "\[IndentingNewLine]", "\t", 
                    RowBox[{
                    "lBestPosition", " ", "=", " ", "candidatePositionLus"}], 
                    ";"}]}], "\[IndentingNewLine]", "\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", "lBestPosition"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]",
                  "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "1"}], ",", 
                 RowBox[{"j", "\[LessEqual]", "  ", "swarmDimOuterPSO"}], ",", 
                 RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"rand1", "=", 
                   RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"rand2", "=", 
                   RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"inertia", "=", 
                   RowBox[{"w", "*", 
                    RowBox[{
                    RowBox[{"swarmVelocity", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"swarmVelocity", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", " ", 
                   RowBox[{"inertia", " ", "+", " ", 
                    RowBox[{"(", 
                    RowBox[{"c1", " ", "*", " ", "rand1", " ", "*", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", " ", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], ")"}], "+", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{"c2", " ", "*", "rand2", " ", "*", " ", 
                    RowBox[{"(", 
                    RowBox[{"gBestPosition", " ", "-", " ", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Update", " ", "the", " ", 
                 RowBox[{"particle", "'"}], "s", " ", "position"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"swarmPosition", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "+=", 
                RowBox[{"swarmVelocity", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{
                  "\"\<Swarm position being updated\>\"", ",", 
                   "swarmPosition"}], "]"}], ";"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "1"}], ",", 
                 RowBox[{"j", "<=", "NPForOuterPSO"}], ",", 
                 RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "<", 
                    "c1LowerLimit"}], ",", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", 
                    RowBox[{"RandomReal", "@", "c1Limit"}]}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
                    "c1UpperLimit"}], ",", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", 
                    RowBox[{"RandomReal", "@", "c1Limit"}]}]}], "]"}], ";", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "<", 
                    "c2LowerLimit"}], ",", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                    RowBox[{"RandomReal", "@", "c2Limit"}]}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], ">", 
                    "c2UpperLimit"}], ",", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                    RowBox[{"RandomReal", "@", "c2Limit"}]}]}], "]"}], ";", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "<", 
                    "wLowerLimit"}], ",", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "=", 
                    RowBox[{"RandomReal", "@", "wLimit"}]}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], ">", 
                    "wUpperLimit"}], ",", 
                    RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "=", 
                    RowBox[{"RandomReal", "@", "wLimit"}]}]}], "]"}], ";"}]}],
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"n", "=", "0"}], ";"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"PSOAlgorithmInner", "[", 
                 RowBox[{
                 "f_", ",", " ", "fLimit_", ",", " ", "swarmDim_", ",", " ", 
                  "NP_", ",", " ", "c1_", ",", " ", "c2_", ",", " ", "w_", 
                  ",", " ", "iterations_"}]}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"particlePositionCost", " ", "=", " ", 
                RowBox[{"calculateFitness", "[", 
                 RowBox[{
                 "f", ",", "fLimit", ",", "swarmDimInnerPSO", ",", 
                  "NPForInnerPSO", ",", 
                  RowBox[{
                   RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                  "iterationsForInnerPSO", ",", " ", 
                  "swarmPositionForInnerPSO", ",", " ", "realData", ",", " ", 
                  "pts"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{
                  "\"\<Output from inner PSO inside loop = \>\"", ",", 
                   "communicationList"}], "]"}], ";"}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"predictionDataList", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   RowBox[{
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                   "particlePositionCost"}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"swarmPositionCost", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "=", 
                "particlePositionCost"}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Update", " ", "pBest", " ", "and", " ", "gBest"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"swarmPositionCost", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "<=", " ", 
                  RowBox[{"pBestCost", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"pBestCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{"swarmPositionCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{"swarmPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pBestCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<=", " ", "gBestCost"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Print", "@", 
                    "\"\<----Particle updating the gBest From \
OUter-------\>\""}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"gBestCost", "=", 
                    RowBox[{"pBestCost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gBestPosition", "=", 
                    RowBox[{"pBestPosition", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
                  "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"historyGBestPosition", ",", "gBestPosition"}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"historyGBestCost", ",", "gBestCost"}], "]"}], ";"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
           RowBox[{"it", "++"}]}], "\[IndentingNewLine]", "}"}]}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Return", "@", 
        RowBox[{"{", 
         RowBox[{
         "gBestPosition", ",", "gBestCost", ",", " ", "historyGBestPosition", 
          ",", " ", "historyGBestCost", ",", "swarmPositionCost", ",", " ", 
          "swarmPosition", ",", " ", "predictionDataList"}], "}"}]}], ";"}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8860847623189025`*^9, 3.8860847650456357`*^9}, 
   3.8860848093066435`*^9, 3.8860850654262767`*^9, {3.8860850975780983`*^9, 
   3.8860851282438803`*^9}, 3.8860859012664375`*^9, {3.8860859496487103`*^9, 
   3.886085950664606*^9}, {3.8860859919673395`*^9, 3.886085993515586*^9}, {
   3.886086058832529*^9, 3.8860862297735915`*^9}, {3.88608653709074*^9, 
   3.8860865625947638`*^9}, {3.886086714695449*^9, 3.8860867442605767`*^9}, {
   3.8860869372222996`*^9, 3.886086951575398*^9}, {3.8860869836237636`*^9, 
   3.886087090373721*^9}, {3.8860871270800476`*^9, 3.8860871721345015`*^9}, {
   3.8860872157555857`*^9, 3.8860875096716905`*^9}, {3.8860885065035324`*^9, 
   3.8860885384757547`*^9}, {3.886090256596315*^9, 3.8860903282482862`*^9}, {
   3.8860903993530645`*^9, 3.8860904150161877`*^9}, {3.886090472734878*^9, 
   3.886090490311013*^9}, 3.8860905948590937`*^9, {3.886090650263468*^9, 
   3.886090662256378*^9}, {3.8860906937192183`*^9, 3.8860907185550857`*^9}, {
   3.886090804428603*^9, 3.88609081310352*^9}, {3.886090845691264*^9, 
   3.886090851936636*^9}, {3.8860908962887745`*^9, 3.8860909021073236`*^9}, {
   3.8860909345586295`*^9, 3.8860909580272713`*^9}, {3.886091443963357*^9, 
   3.8860914495354795`*^9}, {3.8861630121824317`*^9, 
   3.8861630234747047`*^9}, {3.8861631362163734`*^9, 3.886163159910318*^9}, 
   3.8861633721577835`*^9, {3.8861648767920427`*^9, 3.88616489965901*^9}, {
   3.886167971467907*^9, 3.8861680878563166`*^9}, {3.8861681198243933`*^9, 
   3.8861681210619636`*^9}, {3.8861682224089856`*^9, 3.886168249652362*^9}, {
   3.886168370583693*^9, 3.886168372754122*^9}, {3.8861685105736594`*^9, 
   3.886168517462081*^9}, {3.8861687249526677`*^9, 3.8861688346397824`*^9}, {
   3.8861688680564218`*^9, 3.8861688776498194`*^9}, {3.886249778117693*^9, 
   3.886249805071377*^9}, {3.8862498573943057`*^9, 3.8862499245358305`*^9}, {
   3.8862499745426855`*^9, 3.8862500418766966`*^9}, {3.88625007312717*^9, 
   3.886250094638616*^9}, 3.886250133438822*^9, {3.8862501642025394`*^9, 
   3.8862501964782476`*^9}, 3.8862502585180545`*^9, {3.886250309662112*^9, 
   3.8862503150539627`*^9}, {3.8862503506970325`*^9, 3.8862503754410706`*^9}, 
   3.8862504422431774`*^9, {3.8862508826920605`*^9, 3.886250950772434*^9}, {
   3.8862522034228783`*^9, 3.8862522406827908`*^9}, 3.886252308219073*^9, {
   3.886252513301987*^9, 3.886252561691708*^9}, {3.886253493278516*^9, 
   3.8862535137841606`*^9}, {3.8862536028247733`*^9, 
   3.8862536402867785`*^9}, {3.886254297402223*^9, 3.886254298875492*^9}, 
   3.8871635981698456`*^9, 3.8873257672497573`*^9, {3.8896797935520916`*^9, 
   3.8896798277105656`*^9}, {3.8896985096822195`*^9, 
   3.8896985102359357`*^9}, {3.8896985689006314`*^9, 
   3.8896985721061125`*^9}, {3.889943971202924*^9, 3.8899440535468807`*^9}, {
   3.88994420026875*^9, 3.8899442278444424`*^9}, {3.889944407657615*^9, 
   3.889944409423009*^9}, {3.8899482747976837`*^9, 3.889948276411073*^9}, {
   3.8899499810852532`*^9, 3.889950001175984*^9}, {3.8899500396232424`*^9, 
   3.8899501043842955`*^9}, {3.889950178468432*^9, 3.889950263536476*^9}, {
   3.889950294976617*^9, 3.889950329409833*^9}, {3.889950364105276*^9, 
   3.8899505028083487`*^9}, 3.889950552352499*^9, {3.8899506445187583`*^9, 
   3.889950758394437*^9}, 3.889950796830872*^9, {3.8899525072868853`*^9, 
   3.8899527040341077`*^9}, {3.889953698253664*^9, 3.8899537106053195`*^9}, {
   3.889953749503147*^9, 3.889953843957241*^9}, {3.8899538802541494`*^9, 
   3.889953941757117*^9}, {3.8899540140712233`*^9, 3.8899541177506313`*^9}, {
   3.8899542667100115`*^9, 3.8899542861265607`*^9}, {3.8899543398963213`*^9, 
   3.8899543523475046`*^9}, {3.889954598882515*^9, 3.889954604678554*^9}, {
   3.8899552714022336`*^9, 3.889955279421874*^9}, {3.889955345331648*^9, 
   3.889955633780177*^9}, {3.889956591085441*^9, 3.8899565967718887`*^9}, {
   3.88995667341533*^9, 3.8899566762243176`*^9}, {3.889956728856308*^9, 
   3.889956752511918*^9}, {3.889956786766468*^9, 3.88995678996132*^9}, {
   3.889956821390731*^9, 3.8899568515165863`*^9}, {3.889956919795524*^9, 
   3.8899569600245385`*^9}, {3.889957012223516*^9, 3.8899570171926966`*^9}, {
   3.88995719792169*^9, 3.8899573221227922`*^9}, {3.889959923760781*^9, 
   3.8899599273932977`*^9}, {3.890007601664696*^9, 3.890007608516216*^9}, {
   3.8900077260743923`*^9, 3.890007868350979*^9}, {3.890007945398988*^9, 
   3.890008020222492*^9}, {3.890008107381367*^9, 3.8900083157249794`*^9}, {
   3.8900083477543616`*^9, 3.890008415115139*^9}, {3.8900084565277677`*^9, 
   3.890008484508853*^9}, 3.890008581256401*^9, {3.8900088923197865`*^9, 
   3.8900089609219227`*^9}, 3.8900089948722496`*^9, {3.8900090391824245`*^9, 
   3.8900090408331738`*^9}, 3.890009105685124*^9, {3.8900091478538575`*^9, 
   3.890009165634615*^9}, {3.8900091981117783`*^9, 3.8900092509592223`*^9}, {
   3.890009283025952*^9, 3.890009284632742*^9}, {3.890009319572733*^9, 
   3.89000932056313*^9}, {3.8900093510311003`*^9, 3.8900093869377155`*^9}, {
   3.890009430258636*^9, 3.890009439119167*^9}, {3.8900094692316413`*^9, 
   3.8900094701695538`*^9}, {3.8900126576665525`*^9, 3.89001269039649*^9}, {
   3.890012753470085*^9, 3.8900127572734165`*^9}, {3.8900141420035453`*^9, 
   3.8900141440439463`*^9}, {3.8900142145482144`*^9, 3.89001421539625*^9}, {
   3.890014255017034*^9, 3.8900143091885667`*^9}, {3.8900143821293507`*^9, 
   3.890014435277447*^9}, {3.890014561739185*^9, 3.8900147129230733`*^9}, {
   3.8900151339994693`*^9, 3.8900151486575947`*^9}, {3.8900158089133043`*^9, 
   3.8900158129586926`*^9}, {3.890015933329604*^9, 3.890015933633603*^9}, {
   3.8900159960613737`*^9, 3.8900159964182167`*^9}, {3.8900161659066186`*^9, 
   3.890016176046228*^9}, {3.890016249054163*^9, 3.890016271680743*^9}, {
   3.8900164543823833`*^9, 3.8900164631550055`*^9}, {3.890016557470483*^9, 
   3.890016679853716*^9}, {3.8900168156576223`*^9, 3.890016835894881*^9}, {
   3.8900173405125885`*^9, 3.890017357227831*^9}, 3.890021292813193*^9, {
   3.8900227015674677`*^9, 3.890022875515128*^9}, {3.890022974173525*^9, 
   3.8900229757405233`*^9}, {3.890023135979845*^9, 3.890023373214156*^9}, {
   3.8900235315676055`*^9, 3.8900235417286634`*^9}, {3.890023603310204*^9, 
   3.8900236215304155`*^9}, {3.8900236741089044`*^9, 
   3.8900237865672264`*^9}, {3.8900241708089037`*^9, 3.8900241729280367`*^9}, 
   3.890024388759508*^9, 3.8900256962106295`*^9, {3.890025753070318*^9, 
   3.8900257609363623`*^9}, 3.8900263362531023`*^9, {3.8900265438349915`*^9, 
   3.8900265468313837`*^9}, {3.8900266938226147`*^9, 3.890026698265236*^9}, {
   3.8900267456557198`*^9, 3.8900267801803627`*^9}, {3.890093293425728*^9, 
   3.89009334344872*^9}, {3.890095772040948*^9, 3.8900958792207837`*^9}, {
   3.891772899976971*^9, 3.891772946978218*^9}, {3.891772977578615*^9, 
   3.8917729781634655`*^9}, {3.8917734429712043`*^9, 3.891773464522879*^9}, {
   3.8917737654245214`*^9, 3.891773765671654*^9}, {3.891773858077448*^9, 
   3.8917738729118056`*^9}, {3.8917741329907675`*^9, 3.8917741638459387`*^9}, 
   3.8917742139543447`*^9, {3.8917742719025345`*^9, 3.8917743153412795`*^9}, {
   3.8917743524433804`*^9, 3.891774397959273*^9}, {3.8917786378791533`*^9, 
   3.8917786490929117`*^9}, {3.8917790370455*^9, 3.89177904461603*^9}, {
   3.891779121862878*^9, 3.891779139554227*^9}, 3.894317041238489*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"9db26c7e-9cf3-47cf-a4dc-b0944762e8b6"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"functionUsed", "=", "fun4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"swarmDimensionForInnerPSO", " ", "=", " ", "5"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"swarmDimensionForOuterPSO", " ", "=", " ", "3"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Always", " ", "3"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"functionLimits", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NPForInnerPSO", "=", "14"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NPForOuterPSO", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterationsForInnerPSO", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterationsForOuterPSO", "=", "10"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"C1ParameterForOuterPSO", "=", "1.49445"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c1LimitForOuterPSOPopulation", "=", 
     RowBox[{"{", 
      RowBox[{"1.0", ",", "2.0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"C2ParameterForOuterPSO", "=", "1.49445"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2LimitForOuterPSOPopulation", "=", 
     RowBox[{"{", 
      RowBox[{"1.0", ",", "2.0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WParameterForOuterPSO", "=", "0.729"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wLimitForOuterPSOPopulation", "=", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "0.9"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lusSearchIterations", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Function used for inner PSO  is \>\"", ",", "fun4Name"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Swarm dimensions of Inner PSO is \>\"", ",", " ", 
      "swarmDimensionForInnerPSO"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Swarm dimensions of Outer PSO is \>\"", ",", " ", 
      "swarmDimensionForOuterPSO"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Function range is \>\"", ",", " ", "functionLimits"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Population size for inner PSO is \>\"", ",", " ", "NPForInnerPSO"}],
      "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Population size for outer PSO is \>\"", ",", " ", "NPForOuterPSO"}],
      "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Max Iterations for inner PSO is \>\"", ",", " ", 
      "iterationsForInnerPSO"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Max Iterations for outer PSO is \>\"", ",", " ", 
      "iterationsForOuterPSO"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<C1 parameter for outer PSO is \>\"", ",", " ", 
      "C1ParameterForOuterPSO"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<C1 population limit for outer PSO is \>\"", ",", " ", 
      "c1LimitForOuterPSOPopulation"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<C2 parameter for outer PSO is \>\"", ",", " ", 
      "C2ParameterForOuterPSO"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<C2 population limit for outer PSO is \>\"", ",", " ", 
      "c2LimitForOuterPSOPopulation"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<W parameter for outer PSO is \>\"", ",", " ", 
      "WParameterForOuterPSO"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<W population limit for outer PSO is \>\"", ",", " ", 
      "wLimitForOuterPSOPopulation"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Number of iterations for local search (LUS) is \>\"", ",", " ", 
      "lusSearchIterations"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PSOAlgorithmOuter", "[", " ", 
      RowBox[{"f_", ",", "swarmDimInnerPSO_", ",", "fLimit_", ",", 
       RowBox[{"(*", 
        RowBox[{"just", " ", "for", " ", "inner"}], "*)"}], 
       "\[IndentingNewLine]", " ", "NPForInnerPSO_", ",", "NPForOuterPSO_", 
       ",", "  ", "iterationsForInnerPSO_", ",", "iterationsForOuterPSO_", 
       ",", "\[IndentingNewLine]", " ", "c1_", ",", " ", "c2_", ",", " ", 
       "w_", ",", " ", "realData_", ",", " ", "pts_", ",", " ", 
       "calculateFitness_", ",", "swarmDimOuterPSO_", ",", "c1Limit_", ",", 
       "c2Limit_", ",", "wLimit_", ",", "lusSearchIterations_"}], 
      RowBox[{"(*", 
       RowBox[{"just", " ", "for", " ", "outer"}], "*)"}], "]"}], 
     "\[IndentingNewLine]", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outputFromOuterPSO", " ", "=", " ", 
     RowBox[{"PSOAlgorithmOuter", "[", 
      RowBox[{
      "functionUsed", ",", " ", "swarmDimensionForInnerPSO", ",", 
       "functionLimits", ",", " ", "NPForInnerPSO", ",", "NPForOuterPSO", ",",
        "iterationsForInnerPSO", ",", "iterationsForOuterPSO", ",", 
       "C1ParameterForOuterPSO", ",", "C2ParameterForOuterPSO", ",", " ", 
       "WParameterForOuterPSO", ",", "  ", "realDataUntil2019", ",", " ", 
       "pts", ",", " ", "calculateFitness", ",", "swarmDimensionForOuterPSO", 
       ",", "c1LimitForOuterPSOPopulation", ",", 
       "c2LimitForOuterPSOPopulation", ",", "wLimitForOuterPSOPopulation", 
       ",", " ", "lusSearchIterations"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8862504452247996`*^9, 3.8862504474262457`*^9}, {
   3.8862507491988306`*^9, 3.886250752892319*^9}, 3.886250820727612*^9, {
   3.8862509661374063`*^9, 3.886250971645585*^9}, {3.886251154907135*^9, 
   3.886251159740419*^9}, {3.8862525736352053`*^9, 3.8862525844564495`*^9}, {
   3.8862536716659784`*^9, 3.8862536792577324`*^9}, {3.886254634520257*^9, 
   3.886254638880055*^9}, {3.8871599095376186`*^9, 3.887159918080344*^9}, {
   3.889679916451167*^9, 3.8896799508184905`*^9}, {3.889683218121217*^9, 
   3.8896832233015203`*^9}, {3.889698585547701*^9, 3.8896985864170117`*^9}, {
   3.8899417953844604`*^9, 3.8899417984962854`*^9}, {3.889944069050186*^9, 
   3.8899440705057287`*^9}, {3.8899442698479223`*^9, 
   3.8899442738179197`*^9}, {3.889944516320245*^9, 3.889944518890577*^9}, {
   3.8899577973159413`*^9, 3.8899578234889297`*^9}, {3.889958652975376*^9, 
   3.8899586620737944`*^9}, {3.8899602494340587`*^9, 3.889960252213543*^9}, {
   3.88996312377269*^9, 3.8899631266908545`*^9}, {3.889963333571843*^9, 
   3.889963359603628*^9}, 3.890005731979814*^9, {3.890006472061801*^9, 
   3.890006474636153*^9}, {3.89000659755415*^9, 3.8900067200027237`*^9}, {
   3.8900067504081516`*^9, 3.890006906175419*^9}, 3.8900069548730984`*^9, {
   3.89000700043052*^9, 3.8900070532508197`*^9}, 3.890007088859022*^9, {
   3.8900075319241033`*^9, 3.8900075477676325`*^9}, {3.890007669836836*^9, 
   3.890007699809583*^9}, 3.890008865776331*^9, {3.8900096573956003`*^9, 
   3.8900097745872808`*^9}, {3.890009847707017*^9, 3.890009900112997*^9}, {
   3.890009986877735*^9, 3.8900100587304106`*^9}, {3.8900100892746444`*^9, 
   3.8900101285552225`*^9}, {3.89001023537317*^9, 3.8900103239430685`*^9}, {
   3.8900116466972113`*^9, 3.89001229608995*^9}, {3.8900124499202747`*^9, 
   3.890012455843976*^9}, {3.8900127728673935`*^9, 3.8900127769733057`*^9}, {
   3.8900128169385357`*^9, 3.8900128176880627`*^9}, {3.8900130987732925`*^9, 
   3.89001310737117*^9}, {3.8900138731862063`*^9, 3.8900138944452066`*^9}, {
   3.8900152757117176`*^9, 3.890015312288245*^9}, {3.890017452416109*^9, 
   3.890017503907621*^9}, {3.890017825750284*^9, 3.890017832144084*^9}, {
   3.8900178718499393`*^9, 3.890018010587366*^9}, {3.8900180568406477`*^9, 
   3.890018140312502*^9}, {3.890026412946473*^9, 3.8900264138873816`*^9}, {
   3.8900267981635427`*^9, 3.890026820909979*^9}, {3.8900931502004824`*^9, 
   3.890093153444867*^9}, {3.8900958976762867`*^9, 3.8900959055345683`*^9}, {
   3.890279938728935*^9, 3.890279946318968*^9}, {3.8917733324139547`*^9, 
   3.8917733392534637`*^9}, {3.891779513339099*^9, 3.891779527285487*^9}, 
   3.891782012240577*^9, {3.8940683547326174`*^9, 3.894068390437208*^9}, 
   3.8943136389715557`*^9, {3.8943194602372093`*^9, 3.89431947521916*^9}, {
   3.894328231614219*^9, 3.8943282339288783`*^9}, 3.8943283498934827`*^9, {
   3.894328547257843*^9, 3.8943285485066767`*^9}, 3.8943291190026655`*^9, 
   3.8943307680427628`*^9},ExpressionUUID->"99ba6d6a-0b20-48f2-9e10-\
a7e3b2455cc0"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Return", "@", 
    RowBox[{"{", 
     RowBox[{
     "gBestPosition", ",", "gBestCost", ",", " ", "historyGBestPosition", ",",
       " ", "historyGBestCost", ",", "swarmPositionCost", ",", " ", 
      "swarmPosition"}], "}"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.8873288389825945`*^9, 3.8899599472901525`*^9},
 CellLabel->
  "In[161]:=",ExpressionUUID->"b1822dd0-a8f4-431c-beba-488e74474860"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<Complete output from outer PSO : \>\"", ",", "outputFromOuterPSO"}], 
    "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8873287136044354`*^9, 3.8873287951001997`*^9}, {
   3.887328890467037*^9, 3.887328908967308*^9}, {3.8873289434644423`*^9, 
   3.887328945088217*^9}, 3.8900061341673985`*^9, 3.8900062038587294`*^9, 
   3.8943171593716483`*^9},
 CellLabel->
  "In[162]:=",ExpressionUUID->"8e688914-2be8-4e44-ad5e-90aaad3d012f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<History of best pts value (gBestCost history) : \>\"", ",", " ", 
    RowBox[{"outputFromOuterPSO", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8861691926246834`*^9, 3.8861691941937113`*^9}, {
  3.8862517326271753`*^9, 3.8862517376614957`*^9}, {3.887328870297814*^9, 
  3.887328875638412*^9}, {3.8873289140191545`*^9, 3.887328959818969*^9}, {
  3.8873290042470913`*^9, 3.8873290063489823`*^9}, {3.889959970529106*^9, 
  3.8899599709277415`*^9}, {3.890006384387667*^9, 3.890006394299224*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"8b8e827f-44f7-419f-ab3a-ff5d18bcf7ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Pts values at all positions(pBestCost) : \>\"", ",", " ", 
    RowBox[{"outputFromOuterPSO", "[", 
     RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8862535486519012`*^9, 3.886253549136554*^9}, {
   3.8873295303043785`*^9, 3.887329562483277*^9}, {3.8899599968208337`*^9, 
   3.8899599971688323`*^9}, 3.890005742024314*^9, {3.890006234466014*^9, 
   3.8900062431707153`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"a0aee9f6-65d4-43c4-acc6-607e50604762"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Minimum value of pts detected (gBestCost) : \>\"", ",", " ", 
    RowBox[{"outputFromOuterPSO", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8862537640546303`*^9, 3.8862537672723103`*^9}, {
  3.8862545682137337`*^9, 3.8862545913934937`*^9}, {3.887329572316198*^9, 
  3.8873296014754505`*^9}, {3.8899586283025045`*^9, 3.889958629134691*^9}, {
  3.8899600196585264`*^9, 3.889960035057246*^9}, {3.8900062785986495`*^9, 
  3.8900062880734406`*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"2ae9eaeb-311d-43bf-ab51-6c42c2754597"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<all parameters position (swarm position) : \>\"", ",", " ", 
    RowBox[{"allParametersPosition", " ", "=", 
     RowBox[{"outputFromOuterPSO", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8862543590701895`*^9, 3.886254393072733*^9}, {
   3.8862545344101753`*^9, 3.886254551222188*^9}, 3.887160565360448*^9, {
   3.887329653195818*^9, 3.8873296878175125`*^9}, {3.8896751511018486`*^9, 
   3.889675192113798*^9}, 3.8896756334454904`*^9, {3.8899601012292333`*^9, 
   3.889960101732419*^9}, {3.890005173921378*^9, 3.8900052102801533`*^9}, {
   3.890005762280529*^9, 3.8900057638273892`*^9}, {3.8900060200055285`*^9, 
   3.8900060286852517`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"e03e9cb8-0700-48e6-bed1-4bef48c1ca8b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Parameters for minimun values of pts (gBestPosition) : \>\"", ",", 
    " ", 
    RowBox[{"outputFromOuterPSO", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"parametersWithMinimumValueOfPts", " ", "=", 
    RowBox[{"outputFromOuterPSO", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Prediction data list : \>\"", ",", " ", 
      RowBox[{"outputFromOuterPSO", "[", 
       RowBox[{"[", "7", "]"}], "]"}]}], "]"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"code", " ", "for", " ", "prediction", " ", "start"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"dataForPrediction", " ", "=", " ", 
     RowBox[{"outputFromOuterPSO", "[", 
      RowBox[{"[", "7", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dataForPrediction", "=", 
     RowBox[{"RandomSample", "[", "dataForPrediction", "]"}]}], ";", "\n", 
    RowBox[{"trainingSet", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"dataForPrediction", ",", 
       RowBox[{"Round", "[", 
        RowBox[{"0.8", "*", 
         RowBox[{"Length", "[", "dataForPrediction", "]"}]}], "]"}]}], 
      "]"}]}], ";", "\n", 
    RowBox[{"testSet", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"dataForPrediction", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"0.8", "*", 
            RowBox[{"Length", "[", "dataForPrediction", "]"}]}], "]"}], "+", 
          "1"}], ",", 
         RowBox[{"Length", "[", "dataForPrediction", "]"}]}], "}"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"lm", "=", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"trainingSet", ",", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"testPredictions", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"lm", "[", 
        RowBox[{"Sequence", "@@", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"testSet", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}]}], "]"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"mae", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"testPredictions", "-", 
        RowBox[{"testSet", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{"rmse", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"testPredictions", "-", 
          RowBox[{"testSet", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ")"}], "^", "2"}], "]"}], 
      "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<MAE: \>\"", ",", "mae"}], "]"}], "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<RMSE: \>\"", ",", "rmse"}], "]"}]}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"code", " ", "for", " ", "prediction", " ", "end"}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8862544073975115`*^9, 3.8862544444073706`*^9}, {
   3.886254509952897*^9, 3.886254511569769*^9}, {3.88732971454613*^9, 
   3.8873297484231844`*^9}, 3.8873304230702033`*^9, {3.8899601744970164`*^9, 
   3.8899601956564064`*^9}, 3.8899630828921323`*^9, {3.890005496392436*^9, 
   3.890005509543104*^9}, {3.8900060384288883`*^9, 3.890006047350976*^9}, {
   3.89000626710907*^9, 3.890006292310479*^9}, {3.8900177649416056`*^9, 
   3.8900177664273167`*^9}, 3.8900177991064215`*^9, {3.891774412604729*^9, 
   3.891774440030984*^9}, {3.8917787753403993`*^9, 3.891778798361191*^9}, {
   3.8917792876294036`*^9, 3.8917794217022266`*^9}, 3.8943136825545635`*^9, 
   3.8943140543399224`*^9, {3.8943143430880585`*^9, 3.894314364183647*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"b9dcc72f-857f-44c7-b609-c4c325b243e2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.893816568269117*^9, 3.8938165716032076`*^9}, {
  3.8943129059786816`*^9, 3.8943129060477333`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"0f54ca26-587b-41c0-8c67-c84fc514c96d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PSOAlgorithmInner", "[", 
    RowBox[{
    "f_", ",", " ", "fLimit_", ",", " ", "swarmDim_", ",", " ", "NP_", ",", 
     " ", "c1_", ",", " ", "c2_", ",", " ", "w_", ",", " ", "iterations_", 
     ",", " ", "swarmPositionFromOuterPSO_"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"communicationListForPrediction", " ", "=", " ", 
    RowBox[{"PSOAlgorithmInnerWithPSORegressionCall", "[", 
     RowBox[{
     "functionUsed", ",", " ", "functionLimits", ",", " ", 
      "swarmDimensionForInnerPSO", ",", " ", "NPForInnerPSO", ",", " ", 
      RowBox[{"parametersWithMinimumValueOfPts", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"parametersWithMinimumValueOfPts", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
      RowBox[{"parametersWithMinimumValueOfPts", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", " ", "1000"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8943136916272287`*^9, 3.894313691877124*^9}, {
   3.8943141911105213`*^9, 3.8943142027052555`*^9}, {3.8943142349779186`*^9, 
   3.89431423657883*^9}, {3.894314603067906*^9, 3.894314641567974*^9}, {
   3.8943146765715528`*^9, 3.894314677641545*^9}, {3.894315624015915*^9, 
   3.894315631309349*^9}, 3.8943156759964137`*^9, 3.8943161143835692`*^9, {
   3.894316369971886*^9, 3.894316510307765*^9}, {3.894316549370039*^9, 
   3.8943165590259757`*^9}, 3.8943166701795983`*^9, {3.8943170730846987`*^9, 
   3.894317084410143*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"8e2d0dee-a35d-4cc4-ae11-b3c9146b2d57"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"capturedDataFromPSO", "=", "communicationListForPrediction"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sortedCapturedDataFromPSO", " ", "=", " ", 
   RowBox[{"Sort", "[", 
    RowBox[{"capturedDataFromPSO", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "<", 
       RowBox[{"#2", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"matrixFormSortedCapturedDataFromPSO", " ", "=", " ", 
  RowBox[{
   RowBox[{"AdjacencyMatrix", "@", "capturedDataFromPSO"}], " ", "//", 
   "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testList", "=", 
   RowBox[{"AdjacencyMatrix", "@", "sortedCapturedDataFromPSO"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capturedFromPSO", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", 
     RowBox[{"Length", "@", "testList"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"subList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<=", 
        RowBox[{"Length", "@", "testList"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"subList", ",", " ", 
          RowBox[{
           RowBox[{"testList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"capturedFromPSO", ",", " ", "subList"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capturedFromPSO", "=", 
   RowBox[{"capturedFromPSO", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", 
       RowBox[{"Length", "@", "capturedFromPSO"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"g1", "=", 
  RowBox[{"draw", "@", "capturedFromPSO"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resultingPredictionValue", " ", "=", " ", 
   RowBox[{"pts", "[", 
    RowBox[{"capturedFromPSO", ",", "realDataUntil2020"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Value of Pts on test data for 2020 = \>\"", ",", " ", 
    "resultingPredictionValue"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8943156795571833`*^9, 3.8943156806203833`*^9}, 
   3.894316679872611*^9, {3.894316735379774*^9, 3.8943168217163773`*^9}, {
   3.894316862474158*^9, 3.89431693469203*^9}, {3.8943171929790907`*^9, 
   3.894317193479209*^9}, 3.8943182707766304`*^9},
 CellLabel->
  "In[170]:=",ExpressionUUID->"86419e71-b854-4f0c-9c66-edaa352ef064"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "strm", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8873259752553387`*^9, 3.8873259752553387`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"79b775ef-91c6-4373-b2ba-3f41effda539"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g1", "=", 
  RowBox[{"draw", "@", "capturedFromPSO"}]}]], "Input",
 CellLabel->
  "In[172]:=",ExpressionUUID->"6743b4f2-340e-48b5-b849-63e34662416f"],

Cell[BoxData[
 TemplateBox[{
  "Options", "optnf", 
   "\"\\!\\(\\*RowBox[{\\\"FormatType\\\"}]\\) is not a known option for \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"OutputStream\\\", \\\"[\\\", RowBox[{\
\\\"\\\\\\\"output.log\\\\\\\"\\\", \\\",\\\", \\\"3\\\"}], \\\"]\\\"}], \
\\\"}\\\"}]\\).\"", 2, 172, 1, 21480879270617621404, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8943183297773147`*^9},
 CellLabel->
  "During evaluation of \
In[172]:=",ExpressionUUID->"5b104ac1-2d1d-4e9a-b55b-97d3162f7373"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}, {
      Null, SparseArray[
       Automatic, {14, 14}, 0, {
        1, {{0, 14, 18, 22, 33, 36, 39, 42, 45, 48, 51, 54, 56, 58, 59}, {{
          1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {
          13}, {14}, {4}, {12}, {13}, {14}, {4}, {12}, {13}, {14}, {4}, {5}, {
          6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {12}, {13}, {14}, {
          12}, {13}, {14}, {12}, {13}, {14}, {12}, {13}, {14}, {12}, {13}, {
          14}, {12}, {13}, {14}, {12}, {13}, {14}, {13}, {14}, {13}, {14}, {
          14}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
      Background -> GrayLevel[0.8], EdgeLabels -> {None}, 
       EdgeShapeFunction -> {$CellContext`f$4066060}, 
       EdgeWeight -> CompressedData["
1:eJxTTMoPSmVkYGCwBuJQMHhqj04zgMEHDHFiaZh+dBoif3WAaVzuHmh3ket+
dPGr9gBoQrCA
        "], ImageSize -> Large, 
       VertexCoordinates -> {{0, 0}, {
         2 2^Rational[1, 2], 2 2^Rational[1, 2]}, {0, 
         4}, {(-2) 2^Rational[1, 2], 2 2^Rational[1, 2]}, {-4, 
         0}, {(-2) 2^Rational[1, 2], (-2) 2^Rational[1, 2]}, {0, -4}, {
         2 2^Rational[1, 2], (-2) 2^Rational[1, 2]}, {4, 0}, {7, 0}, {
         Rational[7, 2] 3^Rational[1, 2], 
          Rational[7, 2]}, {
          Rational[7, 2], Rational[7, 2] 3^Rational[1, 2]}, {0, 7}, {
          Rational[-7, 2], Rational[7, 2] 3^Rational[1, 2]}}, 
       VertexLabels -> {"Name"}, VertexLabelStyle -> {
         Directive[
          GrayLevel[0], Bold, 20]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], ArrowBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQjQ4Kdijd/MTN6sDSfODNsoZT+79nPp5ZYsLmcMf/
+OFzk87uP5Fyc5ttALtDyKPlmWYPL+4Xu2+l8C+Mw2HThEcv+gqu7WfLtmlk
duR00Fm2Xtk+9M7+Yxcdvxexczmky3y80bXx4f4v+8oqa5ZwOdyLMy6atunp
/ropofltwtwOX9sFduzmf7V/a4GDfkAgt0NO5d14xxXv9hsYNSZxxXA7rHrz
IO/Gmo/77+w9OT3FmNuhjeVYZg7Dl/19F3Ln9d8Amt9uXZNl+22/1r1VM0z8
uBx0Uorvcwb/2G9q9Yk9cQanA99aNvaVhr/2H8i+nJGxh8PhgeOr606nf+9/
6ZDjtOcAu0OCfs+p68J/95/+dO/K7jVsDietdj4+zvhv//ta5Ys1HawOcetn
PZTq+7ffX+Tgjr4YFgfWhgn1W7b825+9kn/NLkNmh9XZvzyKS/7t/92d3HFQ
gMnBI/+MsOX5v/tPqOi6SDExOpzZFPn4zsk/+0ti3Uo38TI4lJ3SmcuW83s/
evgDAJcqudY=
          "]]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {2.8284271247461903`, 2.8284271247461903`}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {0., 4.}}]}, 
        {RGBColor[0.817319, 0.134127, 0.164218], AbsoluteThickness[15.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {-2.8284271247461903`, 2.8284271247461903`}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {-4., 0.}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {-2.8284271247461903`, -2.8284271247461903`}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {0., -4.}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {2.8284271247461903`, -2.8284271247461903`}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {4., 0.}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {7., 0.}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {6.06217782649107, 3.5}}]}, 
        {RGBColor[0.817319, 0.134127, 0.164218], AbsoluteThickness[15.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {3.5, 6.06217782649107}}]}, 
        {RGBColor[0.817319, 0.134127, 0.164218], AbsoluteThickness[15.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {0., 7.}}]}, 
        {RGBColor[0.817319, 0.134127, 0.164218], AbsoluteThickness[15.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 0.}, {-3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{2.8284271247461903`, 
          2.8284271247461903`}, {-2.8284271247461903`, 
          2.8284271247461903`}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{2.8284271247461903`, 2.8284271247461903`}, {3.5, 
          6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{2.8284271247461903`, 2.8284271247461903`}, {0., 7.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{2.8284271247461903`, 2.8284271247461903`}, {-3.5, 
          6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 4.}, {-2.8284271247461903`, 2.8284271247461903`}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 4.}, {3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 4.}, {0., 7.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 4.}, {-3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], ArrowBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQfda6Pm3eArYDUNqhaGHS1JkzuQ+sffIyn4WHwSF7
jsjliqO8BxjUOjcWTfxt//ST898uE4ED1e8K9vzV/WGf3m/AO2u94IFFohtv
V8p+s1+wcws/q73wgWLbg3kctV/tCxyTzU6cETmwxKw7sDH0mz17ZSX/dyex
A715zqLfZv2wL2XZcfdjj/iBnatmREXp/rEPnb1/ZscMiQPiNx4xqeQyOKzq
vjHpd5jkgVXOX/Qf6zM7qOXJdJ3eK3lgQtbRym/mbA5Z/PPP+x6XPNDz/m3W
9ChOB7tNG83/FEkeMFG5+Kgjm8fhcR5XQ81RiQMzLq/zbrfnd2AxLt8Td0L8
gPevS+2h1wUcDL4nZkzrFDuwZX/XZd/Tgg439Ll6t0qJHpj95qy0VZ6QQ/cX
1mtf+oUPZCheb5PfLuQQqmhiJ/Zf8EDGMf3mnwuFHAw8BPiN6gQO8PJfrfik
L+Twx6vU5p8L3wGOlo1hwemCDl6vvT74/eM+kHai9olWsIDDhhus74s9uA5w
aC6sSGblc0APfwC2c7lp
          "]]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, 2.8284271247461903`}, {-4., 0.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, 
          2.8284271247461903`}, {-2.8284271247461903`, \
-2.8284271247461903`}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, 2.8284271247461903`}, {0., -4.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, 2.8284271247461903`}, {
          2.8284271247461903`, -2.8284271247461903`}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, 2.8284271247461903`}, {4., 0.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, 2.8284271247461903`}, {7., 0.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, 2.8284271247461903`}, {
          6.06217782649107, 3.5}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, 2.8284271247461903`}, {3.5, 
          6.06217782649107}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, 2.8284271247461903`}, {0., 7.}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, 2.8284271247461903`}, {-3.5, 
          6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-4., 0.}, {3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-4., 0.}, {0., 7.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-4., 0.}, {-3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, -2.8284271247461903`}, {3.5, 
          6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, -2.8284271247461903`}, {0., 7.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{-2.8284271247461903`, -2.8284271247461903`}, {-3.5, 
          6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., -4.}, {3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., -4.}, {0., 7.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., -4.}, {-3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{2.8284271247461903`, -2.8284271247461903`}, {3.5, 
          6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{2.8284271247461903`, -2.8284271247461903`}, {0., 7.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{2.8284271247461903`, -2.8284271247461903`}, {-3.5, 
          6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{4., 0.}, {3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{4., 0.}, {0., 7.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{4., 0.}, {-3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{7., 0.}, {3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{7., 0.}, {0., 7.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{7., 0.}, {-3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{6.06217782649107, 3.5}, {3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{6.06217782649107, 3.5}, {0., 7.}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{6.06217782649107, 3.5}, {-3.5, 6.06217782649107}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{3.5, 6.06217782649107}, {0., 7.}}]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{3.5, 6.06217782649107}, {-3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], ArrowBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQjQpkHJ7H2eYUW5/YP6s6UihBRMbh+4ewSOeup/vt
Ht5IEuiXcQj4nHiHedPH/Z8fhbGq98g6cMbe0Drv/n1/2Pvr7yp+yDl80a6+
YCn1e3/S86mW5jEKDn3Vd+Zr3v+z/5wSowJvqKKD9sUbhwNK/uyfuubUlKfB
Sg5liZW3jz38uT+1t6O62FXZwSKIWSQn8uv+stTDWdniKg5bttW5uaS92383
lCHx2U4Vhym73tdMnHF/v5+ogMQ0BVWHwxc2f9tW/2SP/tz5czY7qzpUQ+Tt
YfKzIfrt70H160LMt4eZnwex3z4dar8axH3206Du64K43x7m/k8Q/9knQ/3H
A/G/fQTU/76Q8LGHhQ80/Oxh4acfDw5fe1j4ooc/AF75sQw=
          "]]}, 
        {RGBColor[0.992503, 0.986373, 0.425376], AbsoluteThickness[10.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], 
         ArrowBox[{{0., 7.}, {-3.5, 6.06217782649107}}]}, 
        {RGBColor[0.819984, 0.859297, 0.982692], AbsoluteThickness[5.], 
         Arrowheads[{{0.015, 0.1}, {0.015, 0.9}}], ArrowBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQE8B0SdfbtX20s4hIbWH1RR4zkgs5b1SJemhMOd
am+xB/b8Bx7/ftIUcF7MYY1n0YEvtYIHDituUrT9JOpQ7VB78USb8IHc3EwL
niWiDkcS0uuWThA9YGc5NYb5taiDrPr5s+sKxQ+czuGLKDwo5vCa65a4P7Pk
gcTDHdzKYhIO8Saywf6qUgeWXT4558hZSQevLabTcg5IHQjm9J4jdFTaoaNy
3j7TE1IHVKrmya+7LOtgUDTnDZeN1AHJw0d3R56Xd/C0lQ3TUpc8YLNqcsG6
4woOm2aaZp6cL37grUQ485NyRYdDS+4c8jkqeiDsKo+n9itFh02TDfoO7xU+
YK87e1mkqJLD78mKjLc2CR4I5cvI+fFV0eFLa4IP81z+AzOrV3zt7lN0UDYV
0tXI5znwp0H8Z/xzBYei+e+Ks2S5DuTFJRrc5VVw8LLqE866znFAmTGU4Y2a
nENIymYj3+0cB35udcltkJBx2Bd1yXL5fs4DzaYGVhulpBySNLe+c77NfSDR
7eujpDAJB/TwBwCv/aVl
          "]]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.06902834008097165], InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {0.06902834008097165, 0.06902834008097165}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.8284271247461903, 2.8284271247461903}, 
          0.06902834008097165], InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {2.897455464827162, 2.897455464827162}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 4.}, 0.06902834008097165], 
         InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {0.06902834008097165, 4.069028340080972}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.8284271247461903, 2.8284271247461903}, 
          0.06902834008097165], InsetBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {-2.7593987846652186, 2.897455464827162}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 0.}, 0.06902834008097165], 
         InsetBox[
          StyleBox["5",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {-3.9309716599190283, 0.06902834008097165}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.8284271247461903, -2.8284271247461903}, 
          0.06902834008097165], InsetBox[
          StyleBox["6",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {-2.7593987846652186, -2.7593987846652186}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., -4.}, 0.06902834008097165], 
         InsetBox[
          StyleBox["7",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {0.06902834008097165, -3.9309716599190283}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.8284271247461903, -2.8284271247461903}, 
          0.06902834008097165], InsetBox[
          StyleBox["8",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {2.897455464827162, -2.7593987846652186}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 0.}, 0.06902834008097165], 
         InsetBox[
          StyleBox["9",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {4.069028340080972, 0.06902834008097165}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{7., 0.}, 0.06902834008097165], 
         InsetBox[
          StyleBox["10",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {7.069028340080972, 0.06902834008097165}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.06217782649107, 3.5}, 0.06902834008097165], InsetBox[
          StyleBox["11",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {6.131206166572042, 3.5690283400809717}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5, 6.06217782649107}, 0.06902834008097165], InsetBox[
          StyleBox["12",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {3.5690283400809717, 6.131206166572042}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 7.}, 0.06902834008097165], 
         InsetBox[
          StyleBox["13",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {0.06902834008097165, 7.069028340080972}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.5, 6.06217782649107}, 0.06902834008097165], InsetBox[
          StyleBox["14",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], 
          Offset[{2, 2}, {-3.4309716599190283, 6.131206166572042}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  Background->GrayLevel[0.8],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 CellChangeTimes->{3.894318330246555*^9},
 CellLabel->"Out[172]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXecJkW1N/74pJnZvOScFSRnN5KEFQNmMeMFjCBcEDAgUSToVRHDNVyv
etULiAFQQUQXJKik3Z20O3lnNueZ2dmd2V30fetXp6rO6dNdp6v7eR79/fXy
+fSzy7P1dFfX+Z5Yp8654OJrP/6RKy6+9hOXXnzI6z518VUf/8Sl1xyy4N8/
pb8qvaJQKP1ZX+sOKZT131WhEPtQL730UvTxDHz8v2//f/n2efP3kvrRj36k
7r//fvXMM8/Yf5hgg/5m/t6krrnmGjV77nz1mjnz1Sx9zZ03X1188cXRj7az
H/3F/L0M/6je/e73qFNnzVfv+uBlRXX1jV/TX3/gI9eYr847b4EZAqO3eT8v
mWfCOPurn/4Ovvvs7f9pvtP/VvB++Kz7IdwUJnjBhRcXqu6H+vlqztwz1eOP
P24Hj7EfPm3+XlGLFz+nWlufVY888oCaNXeeeTLeQP9df3e2+ulPv6f/D0bB
j0aEu2zccI8a3vIltWTxZ9S8M1+jLrvudroLzH/2vLPV009/rlCEUfq79ev+
0xAIfm1utCVwU7jOf8Pr4X1i7zb/rAWqd+Dntdy0Sjfdsvlr6tY7vq5Om3M2
zNYudtm88mmzz1b/fs1n1fJVL9Rw65l06xVr/qRe7Fir3nfRx83tNU3gEebe
MG/47vw3vUstW75e9Q71qI2bvmt+px9SSFnhJnNzmHP34JDqHNiqXmjfqG7W
K3vu+W/XCzB7/nmFZjX3zPP1d99VHQPb6Oar1z2MN0+5t5342vX3qaUDw+be
Hf3jqr1/p3qubUQ9+kSP+uUji1Vb38uqvW+X+Xe8t16gfBPvXdFlfshvrm+m
F1bfVn+290/gjfXL6Fvr7zZs/G9cdnvDYeHm69d/X/9orXDznXTzzoEx7+ar
1j6adfOKGlz1JC2Ju7m+gb590dy5DE+hf9R3x5v3r1ySfvOnHMO+tGix6lq+
En6rbwqf1Wj2dnnMmuvv7D9XaNnxWrX6l/6y4/0XtXarZQMbAvff6eg5lnb/
wZVPpN9/ydKNqrN/lN2/Er+/uSbM+sOzkzfvGew2a5Bcnz/j/Jd0qtbuUX3P
re4eyftPqKXLN6fev3uwX99jWer9F3cMqdaeban37+jfprqHhoL3X9yx0rv/
k04RwLu1dg2rtt4d8IySR4IdBltwq6UDm+0KNolPWbJsE9zNlzv4qMXty/VS
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
Dp6OM8Iop3GpbTF166Xo+YPrjM9u616i5p99Liw9h/vZ55ygerpvLNzmyErZ
sJagRiXCbhCwAPybVjkYRQdxD+JYI5pOJfcM9atly9erF9rXqXlnne9xF/g6
jz/+uEsOIGZ8+OGHjSlpbRkYXoa/q9nzzla/eOheeNTuDHcgEFxwxazHuO1t
kcmPnM/y8uPRblxWqDP1rGhCkeW1GvdlcYBQqHMPRji3TeMI1xTjR7jA1++9
cJ7qfuMs0GhvmaXJ9lb465/e92Y1+7S53vrPmnWmuvc/vqO6vnCjfpe3z4b1
0jpw9S2vA+der79znSIGIzxy9dZMLHold7PAZKRtQx4Q3S/gF3E/q0KGYTHu
DxVduB33zWE5JuPeptZIwHw8xgSMl2RGiWlBO3rMqBkPJ9TMNCGGDKaZz2aj
BZltqvpW9qo//LlVu6znwlojl8CyzzvjVPX4Hy63SnESUzpgzYCJeRADm1OB
hbKDXNfgKtU5sFV19I+pR5/s0vc/L3n/12hW+9GPfiRy4dyz1GXX3U7SGTTo
rHmvVb/7w+8M7LQqcFFRa34adtSw0zKiiW0eJ7lR4jIeHauVG6VAMDc/Jwtc
FgoES+Ysf+5+wnOlQDCewLJL80VjztjN9E9jTANgueVy/eQtD74bdKPqfc98
1XHSCarzlBP1v3WeeqJe2o63vUM9+s3/VbNPnQvkqDJ7Bnjy1x+4RD+k8/QT
i05RjvzhPYKibBF4sRrj2StrCgkjX0IMI8mXsPu1dezrJhohsd8+6JxonZQM
8fKYBLIfJKsk2W/luqfy6UIyRK9x7Adlfe9Eli6U3F17hlaopQMj6jHHhhHw
7VLPPWMWxI1JOQJV8flVpnuAyrCjdwBzZgDdWgc5NDWr7sGV+lnDxJrt/TvV
o090G/ZMUBjY8/7770f2RK/w3AVvMDrUMmakU0HPLuocoGohgNs4Hu3JPmet
ARaxGy+kiCc9RSmNlRuAtbKqFBjn4yYFxvEwDypOntUtsTQmlWQFxvd2dzVO
9Kab1PjgZWrH2suMotyx+uNFE3Gsqr73W+50HAr8CdxZVO0/f0Lf8by558hE
Oel09eKpx8e5FCIvWm8y4zQedjSGbcySdQxaFSLeUmS8BvN0+7Y7mgX/7gCH
DPguyaawO5NkU2DdJJuClvP8RS0KcJbUloyZrNMRkaPfRR/UnbACjbbWsClc
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
+aKdkjhqDvjoqjn01QuilWU797RkjxrY6Je+ax430uMmOthWcxuuM7f9SvsA
Mdizf7sVY2vnQaOhGIsUQ3YGe/+DHWBWijFRL6OWwR4T1YFwA6sYl7SE7A9P
/8DmJWznGrShBDjfrIcnzdWCwB4+/HWYFzn6RTtT/eXo0OFvmG/0bRDqIrwB
wpbvQKhu3mv+H7X1XGdTwsexW2dCHGjRM7ohc5G4f5fCvJgdF2u1z7no8KGv
RitGjM3DfCI8g5nExgTjLpKOyZvPutLpl6VrbR1HXEgTUrEX3wxr6uAz9l0W
Lc5vhQdc6bw1vNOX2iV28I4iPGeZickoMPfhW7lIhOVZfNl8lxblxfo0ifzW
6+lxrZt5u1pdmQsA+ddb5LSukve9lN/nNKosXwbnmb5t5u3qVGEiz5wsnaoa
xTtk/rv2efM438j6N/L2gIvR8vLVRlSvBa0Rra5eFh06dDHcaLznOXu/4d4a
ecjILApIbnmB59qx8REa4zm5SE3lVmSxBCJJn3pdGDeK60fpQ/i87QNZoqWC
PYPWj670s8haN+IHP90R3ffw3dHefVca6MKlF5D87tAl0fLq1RaM5mvYnNJ3
rFg5Md3kiemVVtS+qUgFQNtqMV1d/ZaIaZ6el1dAJK+x2V0jQc0yzPFtLUxc
IhFhNX/t/0JYi76ltQ/7tfjzQZZ9VqKcKoO6nIPrx7su48T1Gv79hsX1d0Rc
rwiI6zW21wHe8S4lrsuL31Diap4PGRFdPY9E9fNGVC8yZ3y5PfG11UuMkrjI
3JGvgnxekLd3utkqpqGRS6Pbf3pVdN+2gehpEM4hUrHleeFlgJZBMNzbB6xc
iYxiz6WbtwuoVd2ycLN9LmgnIip1TkXl35SpI6rFVnLAcf/Cl78dvfkt74re
ePo7ojed8bborLefFn3+C6eboz0PLlwu3+jZaG3NHMcyjBYYBbJ4HQuoO8Gr
MX4w8nkZnSCM9dHAvPmjrEa/bP0NrUaXlq8i1XUlqdGClgTuPnGRuKesjkUy
vQ9nybS6WqQrLplKapKSeT1Rv+P7Er9bRzJfEqjAbAy8771aMo2ndfjQ+XSu
RpEufTY6unJO9Nzhc6PfHjb/PXJe9NzRz2fNEzhhzx09H2QSHuYnuLMt0V13
fSB657v+MHrLWf/FSMHp0Wln/Fn0Z+/522jLDXdFT1PSR9pRQYPSLC5IIAgZ
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
94XwXCDNIHS7aDa7ReE4q4/O3xUR7mRhWPcX6P196GwVE9+IrB+JDauWdYDa
CPMo2vwfz3Pv9up9GjxXTdbiFYSCq29l/WhFWT8Og8mDPgkoyG729IisKEPM
dSpz845FWSmjbV5WJRdl1DxG4ADLqvOR26k9I4YXjK2TVeRKpyjrcXlZl28J
ZLWms8Br5ADmm7kY3leUdYUgq+S6yrIeH8iqMXNzxpl4NbfeC++OcWBmoG2q
CIebUJ8AaUyuk01WGlNsXCtxyp9KtazV/2fp3llx1K+IKGopz0Cq/AIumk4M
ZNf5a2zG37jsnPCYvqPRpcTnJmdz7QCBDbyhkaoA4PsQz8GGffgUsJ0XSS+o
0AcTWNKmZdR/p4oDql1ddYBy2ipWvUBgy4+jfRmo2Bd5EftfQl8mV+jL/hX6
crDj1lrHrWtcX+KOoOtLIkMX9uUU7ItdDLyspC+cmJ/60qy/V89zq0mTK5wG
rxCodh13KeGH+z2GCusg26XPQJdscYraq1BJ2mn8OlRGljY/de3F1zyxvY8y
uT6HclmjeAxgw2uZOZE+4zCuqYghyuDiVMDh+XAwPmaNcmOjMlRZo1gZzBl5
q1Nnmjoki0ma/25hWH5RcZZGxckvQ6w4p8fFeZt9ifacaSIoRNh9udmJFffi
nVhVvHgr1jfiYr06Z/WVaLUmMwPV07/5Jwp2Tlywg1h55PDS5VpIoSnc3K2+
/IqitH4HCnBeXIBxFQRYUCaAVHCidO/NyjMNvmPlgaGQorRju9SVlgS2Zf37
8Q03UMGPFxtION/RffYqDcgec7WEMgUvVG4gfmLlTmDEG8yRBjgrX+XUKImr
ZnjEEzSQunMVzT9ScjYXNJD6YtWEH4UGPhGFaEuhgVT2GHTugwZS1077Yj3N
2wipgVTuHx/TEc/9U2jghBhEQrIFKXisLGgkaCAFUSwyqWAWpAZSEPU0AhE2
cGJFiDC+Lt9AAaILhAZSEC1vBCKpAREiMUq0AkTYwEkOorIQbwNRLK1AYRV3
odBACqJYrHMBIqmBFERS4HcqmFr//kmGKHHTL3brvrA4/L7QQAqipY1AJDWQ
gsjfOSjepSlAhA18qiJEsUvphTXnNKGBVBa5xY1AJDUgp04ZLDQghSsXIMIG
Tk5CZMDpjEBUdk8paCAF0aIIRAUnWmogJRk3IN3gLPhF2ADvlKTot7ARiH4o
NSBAhOxY2AhEUgNioDZItlCAqDTweDo08OmKED3eCERSAyl/x12plFK35CGS
GihzR3gb669OkOJCpWCTL4IGTolAhAerj6IgqcQ2UgNiBDi4LY8IgqRuHgcN
SKG4OJMfFiCSQqH1S2dAA+70TLjHIN0XTcUvFxrgTTXxYglA9GAEooK6/pHQ
AEYlSBD9OTJWBYNzMTTw2RhEMEMxJUahgXwqp0ugAX/POn7/ijcfUnfKCg1I
F2MlbDmxi3QZswDRpUID0m1DjLa4D55LQnQZNDAlAhGGKXEandSVq0IDp0Yh
8sqO8x+J9yPy2nSm0EDZBVZWdr9LQYQNXA4N8M0skd+g7O5xEG0RIJIzY+nf
pStK0kz+bcXn9EuvEBqQlZ2XbL7raQVldyU0cBp8Mabs7gwESSg7bEC6FSN1
/Y5GlN0soYGUsvPXoyoou6ugAb7TkVJ2tyXoHMzkq6GBLzuIJGXnbe2vIxAV
ZjI28JWK2P6qEYh+LDSQUnbz4LmkspsNDZwehcjrmFsaUXbYwBkxiOAw55fu
uWLCxYKyu0ZoANkR3MqxDWB22TydC8ruWmiAQ+Nx8KQrYnwcJYVjF5QdNsBx
bqjEUDKOh5vjBPG6SKo1ol96ndBA2WUsLibsDhbFoNecsvsJNPB1kCwf1YmD
zCeqUsR0QdlhA2dGGpCukWBPpTBn/dKfQgNBtZJ8DCfF0NovBiXKhbh/KR+7
/h2DwPOB2hisP8v1NB6sr186Bxr4JjZgw2lc+SbQRb4StXB7Jb+1/DNowIVb
Q5ixFGrOVyNSYfH6pTdCAy6OVhpkwNYHBJXEsmP+l5ugAVcKTQ+yxA4z0YJq
wKlB/gU08B0cg8ggTwcok4M8FxrAsOjCIMNE4+O+VKi3fukvoYFzQbLYRLsA
BInFZ+uX3gwNcLCuiUvJTzSP7fmpscJBngcNnOckW1K8oQeDjIIUxiCfwftX
0MD5OAb5awygTacClIUxyFu0W6GBC9wXhRkKg8x0lgc5N9F+DQ1geKoYhK9P
oDuDyyA8VqWDfBs04EJMQZu6yHmI7j0TIJKeCwb5dmhgWjAGZqLtE4yBqep+
OgjC82Vi2SDfAQ38QBjkidAABzF+yUHU7Z7rwLFCiO6EBlAF8BhIgeVTBIj2
LRvk+dDARYI23TdPU9XAZyINFEzmb6GBGcIgSzGpJ+MYWIj2D8YAtOnd0MCP
csqO4oAmIU0tO9yBng7ONGSYVDYG90ADl2ADNlJ1kjAGHxcg2j+g84Bv4PfQ
wGXQAAdFTsrRlEI9fCiyj3IPemrthn7pfdDAFTDIDNH+Ak0/hM/l4ld1hChO
tD9BA7NQMmkMSLJcgCyr62AMcJDvhwauLowBQASq4qjoGGwKIXoQGpgtjIEJ
M84FD3L4jQ0eNDeXW8sCIQ9A9LDth6Ht64ThOcj692Lgogn9ofZfVtr8IDX/
wjJsH4Hmr89jq5qfnGjedn9SSfM2BPTgsun1GDR/AyJP970U8i+v1nw917zu
OQFomn9F2cA/Ac3fCODr76nevwaYpUOx1Ix/LY4kKrsn4WU3CSN5TNkYdMIX
5+bHQLX4oTy/+YtL4YuYxYN5+74yndAFXzS+Spv5ooLTRb768LPaofpFraXx
Z/SKHninsVzt8jvNmNB7X1P2WmKQfe1qeO29yddqcV9Q+lozXegtG+C198Nr
PYMKrx2ffy2RDGYhvWU7vNYc3YxzI4JTMh+8p7+wE77sfzz8/39N/7X2L/8H
cjro6Q==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"3ac199d0-03d4-4809-bc12-6a4ecc70819a"]
}, Open  ]]
},
WindowSize->{1141.2, 579.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellEvaluationFunction->(ToExpression[#, StandardForm, 
  Function[Null, 
   Module[{$CellContext`aborted = $Aborted}, 
    Internal`WithLocalSettings[Null, $CellContext`aborted = (ReleaseHold[
        Most[
         Hold[
          SlotSequence[1]]]]; Last[
        Hold[
         SlotSequence[1]]]), 
     AbortProtect[
      If[$CellContext`aborted === $Aborted, Print["Did cleanup"]; Abort[]]]]],
    HoldAll]]& ),
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"191fd826-5d6a-40f9-8261-ddab05a573fa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2326, 54, 219, "Input",ExpressionUUID->"7f9bc51d-3896-41c0-bbff-81a1c8ce1a2a"],
Cell[2887, 76, 200, 3, 28, "Input",ExpressionUUID->"a76fd73d-9312-416b-affa-82e3bd8b2272"],
Cell[3090, 81, 165, 2, 48, "Input",ExpressionUUID->"8719dae9-94c6-4086-bd77-497d59598134"],
Cell[CellGroupData[{
Cell[3280, 87, 700, 14, 86, "Input",ExpressionUUID->"ce419309-a135-490c-801e-db02eeef2b3f"],
Cell[3983, 103, 2660, 41, 52, "Output",ExpressionUUID->"ea69c236-c6aa-429e-9155-5b99c7abdcfe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6680, 149, 1857, 55, 105, "Input",ExpressionUUID->"dcb6a1ce-a49c-4359-b6d5-b9c5512d30a7"],
Cell[8540, 206, 234637, 3867, 299, "Output",ExpressionUUID->"94b5431d-f21f-4590-9b18-30ad3cc24a57"]
}, Open  ]],
Cell[243192, 4076, 4662, 112, 542, "Input",ExpressionUUID->"cef25f06-05df-4060-8605-b418044e061d"],
Cell[CellGroupData[{
Cell[247879, 4192, 5422, 108, 352, "Input",ExpressionUUID->"645ed1bf-fdeb-4d68-8f6b-4a0d43abafb4"],
Cell[253304, 4302, 13288, 326, 229, "Output",ExpressionUUID->"f98a7b64-1a35-499d-8d51-77fffdd6442c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266629, 4633, 5428, 108, 352, "Input",ExpressionUUID->"df26e809-bc18-4352-bceb-017e01726c7b"],
Cell[272060, 4743, 10121, 282, 229, "Output",ExpressionUUID->"57373639-fd7b-40d1-a465-b9fba7c0952d"]
}, Open  ]],
Cell[282196, 5028, 3383, 82, 427, "Input",ExpressionUUID->"66540c44-41fa-4cb8-b32e-21219ec9ef6d"],
Cell[285582, 5112, 5049, 113, 542, "Input",ExpressionUUID->"0ef5323a-b87b-4a75-b48a-70006857e9ae"],
Cell[290634, 5227, 20170, 433, 2312, "Input",ExpressionUUID->"fc60e6af-77b4-46b3-a547-0cd21008cb1d"],
Cell[310807, 5662, 17723, 370, 1931, "Input",ExpressionUUID->"fc90d076-fdcd-4600-aac6-080f4dc2895a"],
Cell[328533, 6034, 41114, 805, 3244, "Input",ExpressionUUID->"9db26c7e-9cf3-47cf-a4dc-b0944762e8b6"],
Cell[369650, 6841, 9185, 191, 790, "Input",ExpressionUUID->"99ba6d6a-0b20-48f2-9e10-a7e3b2455cc0"],
Cell[378838, 7034, 457, 11, 28, "Input",ExpressionUUID->"b1822dd0-a8f4-431c-beba-488e74474860"],
Cell[379298, 7047, 525, 12, 28, "Input",ExpressionUUID->"8e688914-2be8-4e44-ad5e-90aaad3d012f"],
Cell[379826, 7061, 690, 13, 28, "Input",ExpressionUUID->"8b8e827f-44f7-419f-ab3a-ff5d18bcf7ac"],
Cell[380519, 7076, 557, 11, 28, "Input",ExpressionUUID->"a0aee9f6-65d4-43c4-acc6-607e50604762"],
Cell[381079, 7089, 638, 12, 28, "Input",ExpressionUUID->"2ae9eaeb-311d-43bf-ab51-6c42c2754597"],
Cell[381720, 7103, 839, 15, 28, "Input",ExpressionUUID->"e03e9cb8-0700-48e6-bed1-4bef48c1ca8b"],
Cell[382562, 7120, 4441, 107, 428, "Input",ExpressionUUID->"b9dcc72f-857f-44c7-b609-c4c325b243e2"],
Cell[387006, 7229, 230, 4, 28, "Input",ExpressionUUID->"0f54ca26-587b-41c0-8c67-c84fc514c96d"],
Cell[387239, 7235, 1692, 31, 143, "Input",ExpressionUUID->"8e2d0dee-a35d-4cc4-ae11-b3c9146b2d57"],
Cell[388934, 7268, 3078, 80, 371, "Input",ExpressionUUID->"86419e71-b854-4f0c-9c66-edaa352ef064"],
Cell[392015, 7350, 232, 5, 28, "Input",ExpressionUUID->"79b775ef-91c6-4373-b2ba-3f41effda539"],
Cell[CellGroupData[{
Cell[392272, 7359, 173, 4, 28, "Input",ExpressionUUID->"6743b4f2-340e-48b5-b849-63e34662416f"],
Cell[392448, 7365, 534, 11, 28, "Message",ExpressionUUID->"5b104ac1-2d1d-4e9a-b55b-97d3162f7373"],
Cell[392985, 7378, 210577, 3532, 615, 23152, 458, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"3ac199d0-03d4-4809-bc12-6a4ecc70819a"]
}, Open  ]]
}
]
*)

